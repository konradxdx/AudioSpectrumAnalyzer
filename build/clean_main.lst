ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"clean_main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/clean_main.c"
  20              		.section	.rodata.line.str1.4,"aMS",%progbits,1
  21              		.align	2
  22              	.LC4:
  23 0000 252E3230 		.ascii	"%.20s^Status\000"
  23      735E5374 
  23      61747573 
  23      00
  24              		.section	.text.line,"ax",%progbits
  25              		.align	1
  26              		.global	line
  27              		.syntax unified
  28              		.thumb
  29              		.thumb_func
  31              	line:
  32              	.LFB216:
   1:Core/Src/clean_main.c **** /*
   2:Core/Src/clean_main.c ****  * clean_main.c
   3:Core/Src/clean_main.c ****  *
   4:Core/Src/clean_main.c ****  *  Created on: 15 gru 2022
   5:Core/Src/clean_main.c ****  *      Author: Konrad
   6:Core/Src/clean_main.c ****  */
   7:Core/Src/clean_main.c **** 
   8:Core/Src/clean_main.c **** #include "main.h"
   9:Core/Src/clean_main.c **** #include "adc.h"
  10:Core/Src/clean_main.c **** #include "spi.h"
  11:Core/Src/clean_main.c **** #include "dma.h"
  12:Core/Src/clean_main.c **** #include "tim.h"
  13:Core/Src/clean_main.c **** #include "usart.h"
  14:Core/Src/clean_main.c **** #include "gpio.h"
  15:Core/Src/clean_main.c **** #include <stdbool.h>
  16:Core/Src/clean_main.c **** 
  17:Core/Src/clean_main.c **** #include "enc_disp.h"
  18:Core/Src/clean_main.c **** //#include "dac_driver.h"
  19:Core/Src/clean_main.c **** 
  20:Core/Src/clean_main.c **** int16_t stan_enc = 20;
  21:Core/Src/clean_main.c **** uint8_t znak = 127;
  22:Core/Src/clean_main.c **** char pasek[20];
  23:Core/Src/clean_main.c **** volatile uint16_t samples[2];
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s 			page 2


  24:Core/Src/clean_main.c **** 
  25:Core/Src/clean_main.c **** typedef struct menu_option{
  26:Core/Src/clean_main.c **** 	char * prompt;
  27:Core/Src/clean_main.c **** 	void (*func)(void);
  28:Core/Src/clean_main.c **** }menu_option;
  29:Core/Src/clean_main.c **** 
  30:Core/Src/clean_main.c **** 
  31:Core/Src/clean_main.c **** void line(){
  33              		.loc 1 31 12 view -0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 0, uses_anonymous_args = 0
  37 0000 08B5     		push	{r3, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 3, -8
  40              		.cfi_offset 14, -4
  32:Core/Src/clean_main.c **** 	HAL_Delay(500);
  41              		.loc 1 32 2 view .LVU1
  42 0002 4FF4FA70 		mov	r0, #500
  43 0006 FFF7FEFF 		bl	HAL_Delay
  44              	.LVL0:
  33:Core/Src/clean_main.c **** 	while (button()==0) {
  45              		.loc 1 33 2 view .LVU2
  46              		.loc 1 33 8 is_stmt 0 view .LVU3
  47 000a 18E0     		b	.L2
  48              	.LVL1:
  49              	.L5:
  50              	.LBB2:
  34:Core/Src/clean_main.c **** 		UpdateEnc(0, 20, &stan_enc, true);
  35:Core/Src/clean_main.c **** 		for (int i = 0; i < 20; i++) {
  36:Core/Src/clean_main.c **** 			if (i < stan_enc) {
  37:Core/Src/clean_main.c **** 				pasek[i] = znak;
  38:Core/Src/clean_main.c **** 			}
  39:Core/Src/clean_main.c **** 			if (i < 20 && i >= stan_enc) {
  40:Core/Src/clean_main.c **** 				pasek[i] = 'D';
  41:Core/Src/clean_main.c **** 			}
  42:Core/Src/clean_main.c **** 			if (i >= 20)
  51              		.loc 1 42 4 is_stmt 1 view .LVU4
  35:Core/Src/clean_main.c **** 			if (i < stan_enc) {
  52              		.loc 1 35 28 discriminator 2 view .LVU5
  53 000c 0133     		adds	r3, r3, #1
  54              	.LVL2:
  55              	.L3:
  35:Core/Src/clean_main.c **** 			if (i < stan_enc) {
  56              		.loc 1 35 21 discriminator 1 view .LVU6
  57 000e 132B     		cmp	r3, #19
  58 0010 0EDC     		bgt	.L9
  36:Core/Src/clean_main.c **** 				pasek[i] = znak;
  59              		.loc 1 36 4 view .LVU7
  36:Core/Src/clean_main.c **** 				pasek[i] = znak;
  60              		.loc 1 36 10 is_stmt 0 view .LVU8
  61 0012 154A     		ldr	r2, .L11
  62 0014 B2F90020 		ldrsh	r2, [r2]
  36:Core/Src/clean_main.c **** 				pasek[i] = znak;
  63              		.loc 1 36 7 view .LVU9
  64 0018 9A42     		cmp	r2, r3
  65 001a 03DD     		ble	.L4
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s 			page 3


  37:Core/Src/clean_main.c **** 			}
  66              		.loc 1 37 5 is_stmt 1 view .LVU10
  37:Core/Src/clean_main.c **** 			}
  67              		.loc 1 37 14 is_stmt 0 view .LVU11
  68 001c 1349     		ldr	r1, .L11+4
  69 001e 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
  70 0020 1349     		ldr	r1, .L11+8
  71 0022 C854     		strb	r0, [r1, r3]
  72              	.L4:
  39:Core/Src/clean_main.c **** 				pasek[i] = 'D';
  73              		.loc 1 39 4 is_stmt 1 view .LVU12
  39:Core/Src/clean_main.c **** 				pasek[i] = 'D';
  74              		.loc 1 39 15 is_stmt 0 discriminator 1 view .LVU13
  75 0024 9A42     		cmp	r2, r3
  76 0026 F1DC     		bgt	.L5
  40:Core/Src/clean_main.c **** 			}
  77              		.loc 1 40 5 is_stmt 1 view .LVU14
  40:Core/Src/clean_main.c **** 			}
  78              		.loc 1 40 14 is_stmt 0 view .LVU15
  79 0028 114A     		ldr	r2, .L11+8
  80 002a 4421     		movs	r1, #68
  81 002c D154     		strb	r1, [r2, r3]
  82 002e EDE7     		b	.L5
  83              	.L9:
  40:Core/Src/clean_main.c **** 			}
  84              		.loc 1 40 14 view .LVU16
  85              	.LBE2:
  43:Core/Src/clean_main.c **** 				pasek[i] = ' ';
  44:Core/Src/clean_main.c **** 		}
  45:Core/Src/clean_main.c **** 
  46:Core/Src/clean_main.c **** 		dprint("%.20s^Status",pasek);
  86              		.loc 1 46 3 is_stmt 1 view .LVU17
  87 0030 0F49     		ldr	r1, .L11+8
  88 0032 1048     		ldr	r0, .L11+12
  89 0034 FFF7FEFF 		bl	dprint
  90              	.LVL3:
  47:Core/Src/clean_main.c **** 		HAL_Delay(10);
  91              		.loc 1 47 3 view .LVU18
  92 0038 0A20     		movs	r0, #10
  93 003a FFF7FEFF 		bl	HAL_Delay
  94              	.LVL4:
  95              	.L2:
  33:Core/Src/clean_main.c **** 		UpdateEnc(0, 20, &stan_enc, true);
  96              		.loc 1 33 17 view .LVU19
  33:Core/Src/clean_main.c **** 		UpdateEnc(0, 20, &stan_enc, true);
  97              		.loc 1 33 9 is_stmt 0 view .LVU20
  98 003e FFF7FEFF 		bl	button
  99              	.LVL5:
  33:Core/Src/clean_main.c **** 		UpdateEnc(0, 20, &stan_enc, true);
 100              		.loc 1 33 17 discriminator 1 view .LVU21
 101 0042 38B9     		cbnz	r0, .L10
  34:Core/Src/clean_main.c **** 		for (int i = 0; i < 20; i++) {
 102              		.loc 1 34 3 is_stmt 1 view .LVU22
 103 0044 0123     		movs	r3, #1
 104 0046 084A     		ldr	r2, .L11
 105 0048 1421     		movs	r1, #20
 106 004a 0020     		movs	r0, #0
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s 			page 4


 107 004c FFF7FEFF 		bl	UpdateEnc
 108              	.LVL6:
  35:Core/Src/clean_main.c **** 			if (i < stan_enc) {
 109              		.loc 1 35 3 view .LVU23
 110              	.LBB3:
  35:Core/Src/clean_main.c **** 			if (i < stan_enc) {
 111              		.loc 1 35 8 view .LVU24
  35:Core/Src/clean_main.c **** 			if (i < stan_enc) {
 112              		.loc 1 35 12 is_stmt 0 view .LVU25
 113 0050 0023     		movs	r3, #0
  35:Core/Src/clean_main.c **** 			if (i < stan_enc) {
 114              		.loc 1 35 3 view .LVU26
 115 0052 DCE7     		b	.L3
 116              	.LVL7:
 117              	.L10:
  35:Core/Src/clean_main.c **** 			if (i < stan_enc) {
 118              		.loc 1 35 3 view .LVU27
 119              	.LBE3:
  48:Core/Src/clean_main.c **** 	}
  49:Core/Src/clean_main.c **** 	HAL_Delay(200);
 120              		.loc 1 49 2 is_stmt 1 view .LVU28
 121 0054 C820     		movs	r0, #200
 122 0056 FFF7FEFF 		bl	HAL_Delay
 123              	.LVL8:
  50:Core/Src/clean_main.c **** 	clearDisp();
 124              		.loc 1 50 2 view .LVU29
 125 005a FFF7FEFF 		bl	clearDisp
 126              	.LVL9:
  51:Core/Src/clean_main.c **** 	stan_enc = znak;
 127              		.loc 1 51 2 view .LVU30
 128              		.loc 1 51 11 is_stmt 0 view .LVU31
 129 005e 034B     		ldr	r3, .L11+4
 130 0060 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 131 0062 014B     		ldr	r3, .L11
 132 0064 1A80     		strh	r2, [r3]	@ movhi
  52:Core/Src/clean_main.c **** }
 133              		.loc 1 52 1 view .LVU32
 134 0066 08BD     		pop	{r3, pc}
 135              	.L12:
 136              		.align	2
 137              	.L11:
 138 0068 00000000 		.word	stan_enc
 139 006c 00000000 		.word	znak
 140 0070 00000000 		.word	pasek
 141 0074 00000000 		.word	.LC4
 142              		.cfi_endproc
 143              	.LFE216:
 145              		.section	.rodata.change_char.str1.4,"aMS",%progbits,1
 146              		.align	2
 147              	.LC5:
 148 0000 4B6F643A 		.ascii	"Kod: %03d = '%c'\000"
 148      20253033 
 148      64203D20 
 148      27256327 
 148      00
 149              		.section	.text.change_char,"ax",%progbits
 150              		.align	1
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s 			page 5


 151              		.global	change_char
 152              		.syntax unified
 153              		.thumb
 154              		.thumb_func
 156              	change_char:
 157              	.LFB217:
  53:Core/Src/clean_main.c **** 
  54:Core/Src/clean_main.c **** void change_char(){
 158              		.loc 1 54 19 is_stmt 1 view -0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162 0000 10B5     		push	{r4, lr}
 163              		.cfi_def_cfa_offset 8
 164              		.cfi_offset 4, -8
 165              		.cfi_offset 14, -4
  55:Core/Src/clean_main.c **** 	HAL_Delay(500);
 166              		.loc 1 55 2 view .LVU34
 167 0002 4FF4FA70 		mov	r0, #500
 168 0006 FFF7FEFF 		bl	HAL_Delay
 169              	.LVL10:
  56:Core/Src/clean_main.c **** 	while (button()==0) {
 170              		.loc 1 56 2 view .LVU35
 171              		.loc 1 56 8 is_stmt 0 view .LVU36
 172 000a 12E0     		b	.L14
 173              	.L15:
  57:Core/Src/clean_main.c **** 		znak = stan_enc;
 174              		.loc 1 57 3 is_stmt 1 view .LVU37
 175              		.loc 1 57 8 is_stmt 0 view .LVU38
 176 000c 0E4C     		ldr	r4, .L17
 177 000e 2288     		ldrh	r2, [r4]
 178 0010 0E4B     		ldr	r3, .L17+4
 179 0012 1A70     		strb	r2, [r3]
  58:Core/Src/clean_main.c **** 		UpdateEnc(32, 127, &stan_enc, false);
 180              		.loc 1 58 3 is_stmt 1 view .LVU39
 181 0014 0023     		movs	r3, #0
 182 0016 2246     		mov	r2, r4
 183 0018 7F21     		movs	r1, #127
 184 001a 2020     		movs	r0, #32
 185 001c FFF7FEFF 		bl	UpdateEnc
 186              	.LVL11:
  59:Core/Src/clean_main.c **** 		dprint("Kod: %03d = '%c'", stan_enc, stan_enc);
 187              		.loc 1 59 3 view .LVU40
 188 0020 B4F90010 		ldrsh	r1, [r4]
 189 0024 0A46     		mov	r2, r1
 190 0026 0A48     		ldr	r0, .L17+8
 191 0028 FFF7FEFF 		bl	dprint
 192              	.LVL12:
  60:Core/Src/clean_main.c **** 		HAL_Delay(10);
 193              		.loc 1 60 3 view .LVU41
 194 002c 0A20     		movs	r0, #10
 195 002e FFF7FEFF 		bl	HAL_Delay
 196              	.LVL13:
 197              	.L14:
  56:Core/Src/clean_main.c **** 		znak = stan_enc;
 198              		.loc 1 56 17 view .LVU42
  56:Core/Src/clean_main.c **** 		znak = stan_enc;
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s 			page 6


 199              		.loc 1 56 9 is_stmt 0 view .LVU43
 200 0032 FFF7FEFF 		bl	button
 201              	.LVL14:
  56:Core/Src/clean_main.c **** 		znak = stan_enc;
 202              		.loc 1 56 17 discriminator 1 view .LVU44
 203 0036 0028     		cmp	r0, #0
 204 0038 E8D0     		beq	.L15
  61:Core/Src/clean_main.c **** 	}
  62:Core/Src/clean_main.c **** 	clearDisp();
 205              		.loc 1 62 2 is_stmt 1 view .LVU45
 206 003a FFF7FEFF 		bl	clearDisp
 207              	.LVL15:
  63:Core/Src/clean_main.c **** 	HAL_Delay(200);
 208              		.loc 1 63 2 view .LVU46
 209 003e C820     		movs	r0, #200
 210 0040 FFF7FEFF 		bl	HAL_Delay
 211              	.LVL16:
  64:Core/Src/clean_main.c **** }
 212              		.loc 1 64 1 is_stmt 0 view .LVU47
 213 0044 10BD     		pop	{r4, pc}
 214              	.L18:
 215 0046 00BF     		.align	2
 216              	.L17:
 217 0048 00000000 		.word	stan_enc
 218 004c 00000000 		.word	znak
 219 0050 00000000 		.word	.LC5
 220              		.cfi_endproc
 221              	.LFE217:
 223              		.section	.text.switchTube,"ax",%progbits
 224              		.align	1
 225              		.global	switchTube
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 230              	switchTube:
 231              	.LVL17:
 232              	.LFB218:
  65:Core/Src/clean_main.c **** /*
  66:Core/Src/clean_main.c **** void set_dac(){
  67:Core/Src/clean_main.c **** 	int16_t dac_channel=0;
  68:Core/Src/clean_main.c **** 	int16_t dac_value=0;
  69:Core/Src/clean_main.c **** 	HAL_Delay(100);
  70:Core/Src/clean_main.c **** 	while(button()==0){
  71:Core/Src/clean_main.c **** 		UpdateEnc(0,3,&dac_channel,0);
  72:Core/Src/clean_main.c **** 		dprint("Kanal ADC: \"%d\"",dac_channel);
  73:Core/Src/clean_main.c **** 		HAL_Delay(100);
  74:Core/Src/clean_main.c **** 	}
  75:Core/Src/clean_main.c **** 	HAL_Delay(100);
  76:Core/Src/clean_main.c **** 	while(button()==0){
  77:Core/Src/clean_main.c **** 		UpdateEnc(0,127,&dac_value,1);
  78:Core/Src/clean_main.c **** 		dprint("Wartosc ADC: \"%d\"",dac_value);
  79:Core/Src/clean_main.c **** 		dac_write(dac_channel, dac_value, 0);
  80:Core/Src/clean_main.c **** 		HAL_Delay(100);
  81:Core/Src/clean_main.c **** 	}
  82:Core/Src/clean_main.c **** }
  83:Core/Src/clean_main.c **** */
  84:Core/Src/clean_main.c **** 
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s 			page 7


  85:Core/Src/clean_main.c **** void switchTube(bool state){
 233              		.loc 1 85 28 is_stmt 1 view -0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237              		.loc 1 85 28 is_stmt 0 view .LVU49
 238 0000 08B5     		push	{r3, lr}
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 3, -8
 241              		.cfi_offset 14, -4
 242 0002 0246     		mov	r2, r0
  86:Core/Src/clean_main.c **** 	HAL_GPIO_WritePin(EN_TUBE_GPIO_Port,EN_TUBE_Pin,state);
 243              		.loc 1 86 2 is_stmt 1 view .LVU50
 244 0004 4FF40071 		mov	r1, #512
 245 0008 0148     		ldr	r0, .L21
 246              	.LVL18:
 247              		.loc 1 86 2 is_stmt 0 view .LVU51
 248 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 249              	.LVL19:
  87:Core/Src/clean_main.c **** }
 250              		.loc 1 87 1 view .LVU52
 251 000e 08BD     		pop	{r3, pc}
 252              	.L22:
 253              		.align	2
 254              	.L21:
 255 0010 00040240 		.word	1073873920
 256              		.cfi_endproc
 257              	.LFE218:
 259              		.section	.rodata.testOutput.str1.4,"aMS",%progbits,1
 260              		.align	2
 261              	.LC6:
 262 0000 4F75743A 		.ascii	"Out:1\000"
 262      3100
 263 0006 0000     		.align	2
 264              	.LC7:
 265 0008 4F75743A 		.ascii	"Out:0\000"
 265      3000
 266              		.section	.text.testOutput,"ax",%progbits
 267              		.align	1
 268              		.global	testOutput
 269              		.syntax unified
 270              		.thumb
 271              		.thumb_func
 273              	testOutput:
 274              	.LFB219:
  88:Core/Src/clean_main.c **** 
  89:Core/Src/clean_main.c **** void testOutput(void){
 275              		.loc 1 89 22 is_stmt 1 view -0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 0
 278              		@ frame_needed = 0, uses_anonymous_args = 0
 279 0000 08B5     		push	{r3, lr}
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 3, -8
 282              		.cfi_offset 14, -4
  90:Core/Src/clean_main.c **** 	clearDisp();
 283              		.loc 1 90 2 view .LVU54
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s 			page 8


 284 0002 FFF7FEFF 		bl	clearDisp
 285              	.LVL20:
  91:Core/Src/clean_main.c **** 	while(button() == 1);
 286              		.loc 1 91 2 view .LVU55
 287              	.L24:
 288              		.loc 1 91 17 discriminator 1 view .LVU56
 289              		.loc 1 91 8 is_stmt 0 discriminator 1 view .LVU57
 290 0006 FFF7FEFF 		bl	button
 291              	.LVL21:
 292              		.loc 1 91 17 discriminator 1 view .LVU58
 293 000a 0028     		cmp	r0, #0
 294 000c FBD1     		bne	.L24
 295 000e 13E0     		b	.L25
 296              	.L26:
  92:Core/Src/clean_main.c **** 	while(button() == 0){
  93:Core/Src/clean_main.c **** 		HAL_Delay(1000);
 297              		.loc 1 93 3 is_stmt 1 view .LVU59
 298 0010 4FF47A70 		mov	r0, #1000
 299 0014 FFF7FEFF 		bl	HAL_Delay
 300              	.LVL22:
  94:Core/Src/clean_main.c **** 		switchTube(1);
 301              		.loc 1 94 3 view .LVU60
 302 0018 0120     		movs	r0, #1
 303 001a FFF7FEFF 		bl	switchTube
 304              	.LVL23:
  95:Core/Src/clean_main.c **** 		dprint("Out:1");
 305              		.loc 1 95 3 view .LVU61
 306 001e 0B48     		ldr	r0, .L29
 307 0020 FFF7FEFF 		bl	dprint
 308              	.LVL24:
  96:Core/Src/clean_main.c **** 		HAL_Delay(1000);
 309              		.loc 1 96 3 view .LVU62
 310 0024 4FF47A70 		mov	r0, #1000
 311 0028 FFF7FEFF 		bl	HAL_Delay
 312              	.LVL25:
  97:Core/Src/clean_main.c **** 		switchTube(0);
 313              		.loc 1 97 3 view .LVU63
 314 002c 0020     		movs	r0, #0
 315 002e FFF7FEFF 		bl	switchTube
 316              	.LVL26:
  98:Core/Src/clean_main.c **** 		dprint("Out:0");
 317              		.loc 1 98 3 view .LVU64
 318 0032 0748     		ldr	r0, .L29+4
 319 0034 FFF7FEFF 		bl	dprint
 320              	.LVL27:
 321              	.L25:
  92:Core/Src/clean_main.c **** 		HAL_Delay(1000);
 322              		.loc 1 92 17 view .LVU65
  92:Core/Src/clean_main.c **** 		HAL_Delay(1000);
 323              		.loc 1 92 8 is_stmt 0 view .LVU66
 324 0038 FFF7FEFF 		bl	button
 325              	.LVL28:
  92:Core/Src/clean_main.c **** 		HAL_Delay(1000);
 326              		.loc 1 92 17 discriminator 1 view .LVU67
 327 003c 0028     		cmp	r0, #0
 328 003e E7D0     		beq	.L26
 329              	.L27:
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s 			page 9


  99:Core/Src/clean_main.c **** 	}
 100:Core/Src/clean_main.c **** 	while(button() == 1);
 330              		.loc 1 100 17 is_stmt 1 discriminator 1 view .LVU68
 331              		.loc 1 100 8 is_stmt 0 discriminator 1 view .LVU69
 332 0040 FFF7FEFF 		bl	button
 333              	.LVL29:
 334              		.loc 1 100 17 discriminator 1 view .LVU70
 335 0044 0028     		cmp	r0, #0
 336 0046 FBD1     		bne	.L27
 101:Core/Src/clean_main.c **** }
 337              		.loc 1 101 1 view .LVU71
 338 0048 08BD     		pop	{r3, pc}
 339              	.L30:
 340 004a 00BF     		.align	2
 341              	.L29:
 342 004c 00000000 		.word	.LC6
 343 0050 08000000 		.word	.LC7
 344              		.cfi_endproc
 345              	.LFE219:
 347              		.section	.rodata.menu.str1.4,"aMS",%progbits,1
 348              		.align	2
 349              	.LC9:
 350 0000 25642E25 		.ascii	"%d.%s\000"
 350      7300
 351              		.section	.text.menu,"ax",%progbits
 352              		.align	1
 353              		.global	menu
 354              		.syntax unified
 355              		.thumb
 356              		.thumb_func
 358              	menu:
 359              	.LFB220:
 102:Core/Src/clean_main.c **** 
 103:Core/Src/clean_main.c **** void menu(){
 360              		.loc 1 103 12 is_stmt 1 view -0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 32
 363              		@ frame_needed = 0, uses_anonymous_args = 0
 364 0000 10B5     		push	{r4, lr}
 365              		.cfi_def_cfa_offset 8
 366              		.cfi_offset 4, -8
 367              		.cfi_offset 14, -4
 368 0002 88B0     		sub	sp, sp, #32
 369              		.cfi_def_cfa_offset 40
 104:Core/Src/clean_main.c **** 
 105:Core/Src/clean_main.c **** 	struct menu_option options[] = {
 370              		.loc 1 105 2 view .LVU73
 371              		.loc 1 105 21 is_stmt 0 view .LVU74
 372 0004 0DF1080C 		add	ip, sp, #8
 373 0008 174C     		ldr	r4, .L35
 374 000a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 375 000c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 376 0010 94E80300 		ldm	r4, {r0, r1}
 377 0014 8CE80300 		stm	ip, {r0, r1}
 106:Core/Src/clean_main.c **** 			{"Display bar",line},
 107:Core/Src/clean_main.c **** 			{"Set bar character",change_char},
 108:Core/Src/clean_main.c **** 			{"Test wyjscia",testOutput}
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s 			page 10


 109:Core/Src/clean_main.c **** 			//{"Drive DAC", set_dac}
 110:Core/Src/clean_main.c **** 	};
 111:Core/Src/clean_main.c **** 
 112:Core/Src/clean_main.c **** 	int16_t position = 0;
 378              		.loc 1 112 2 is_stmt 1 view .LVU75
 379              		.loc 1 112 10 is_stmt 0 view .LVU76
 380 0018 0023     		movs	r3, #0
 381 001a ADF80630 		strh	r3, [sp, #6]	@ movhi
 113:Core/Src/clean_main.c **** 	uint8_t options_count = sizeof(options)/sizeof(options[0]);
 382              		.loc 1 113 2 is_stmt 1 view .LVU77
 383              	.LVL30:
 114:Core/Src/clean_main.c **** 
 115:Core/Src/clean_main.c **** 	while(button()==0){
 384              		.loc 1 115 2 view .LVU78
 385              		.loc 1 115 7 is_stmt 0 view .LVU79
 386 001e 14E0     		b	.L32
 387              	.L33:
 116:Core/Src/clean_main.c **** 		UpdateEnc(0,options_count-1, &position, false);
 388              		.loc 1 116 3 is_stmt 1 view .LVU80
 389 0020 0023     		movs	r3, #0
 390 0022 0DF10602 		add	r2, sp, #6
 391 0026 0221     		movs	r1, #2
 392 0028 1846     		mov	r0, r3
 393 002a FFF7FEFF 		bl	UpdateEnc
 394              	.LVL31:
 117:Core/Src/clean_main.c **** 		dprint("%d.%s",position+1, options[position].prompt);
 395              		.loc 1 117 3 view .LVU81
 396 002e BDF90610 		ldrsh	r1, [sp, #6]
 397 0032 08AB     		add	r3, sp, #32
 398 0034 03EBC103 		add	r3, r3, r1, lsl #3
 399 0038 53F8182C 		ldr	r2, [r3, #-24]
 400 003c 0131     		adds	r1, r1, #1
 401 003e 0B48     		ldr	r0, .L35+4
 402 0040 FFF7FEFF 		bl	dprint
 403              	.LVL32:
 118:Core/Src/clean_main.c **** 		HAL_Delay(50);
 404              		.loc 1 118 3 view .LVU82
 405 0044 3220     		movs	r0, #50
 406 0046 FFF7FEFF 		bl	HAL_Delay
 407              	.LVL33:
 408              	.L32:
 115:Core/Src/clean_main.c **** 		UpdateEnc(0,options_count-1, &position, false);
 409              		.loc 1 115 16 view .LVU83
 115:Core/Src/clean_main.c **** 		UpdateEnc(0,options_count-1, &position, false);
 410              		.loc 1 115 8 is_stmt 0 view .LVU84
 411 004a FFF7FEFF 		bl	button
 412              	.LVL34:
 115:Core/Src/clean_main.c **** 		UpdateEnc(0,options_count-1, &position, false);
 413              		.loc 1 115 16 discriminator 1 view .LVU85
 414 004e 0028     		cmp	r0, #0
 415 0050 E6D0     		beq	.L33
 119:Core/Src/clean_main.c **** 	}
 120:Core/Src/clean_main.c **** 	options[position].func();
 416              		.loc 1 120 2 is_stmt 1 view .LVU86
 417              		.loc 1 120 19 is_stmt 0 view .LVU87
 418 0052 BDF90630 		ldrsh	r3, [sp, #6]
 419 0056 08AA     		add	r2, sp, #32
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s 			page 11


 420 0058 02EBC303 		add	r3, r2, r3, lsl #3
 421 005c 53F8143C 		ldr	r3, [r3, #-20]
 422              		.loc 1 120 2 view .LVU88
 423 0060 9847     		blx	r3
 424              	.LVL35:
 121:Core/Src/clean_main.c **** }
 425              		.loc 1 121 1 view .LVU89
 426 0062 08B0     		add	sp, sp, #32
 427              		.cfi_def_cfa_offset 8
 428              		@ sp needed
 429 0064 10BD     		pop	{r4, pc}
 430              	.L36:
 431 0066 00BF     		.align	2
 432              	.L35:
 433 0068 00000000 		.word	.LANCHOR0
 434 006c 00000000 		.word	.LC9
 435              		.cfi_endproc
 436              	.LFE220:
 438              		.section	.text.clean_main,"ax",%progbits
 439              		.align	1
 440              		.global	clean_main
 441              		.syntax unified
 442              		.thumb
 443              		.thumb_func
 445              	clean_main:
 446              	.LFB221:
 122:Core/Src/clean_main.c **** 
 123:Core/Src/clean_main.c **** void clean_main(){
 447              		.loc 1 123 18 is_stmt 1 view -0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 451 0000 08B5     		push	{r3, lr}
 452              		.cfi_def_cfa_offset 8
 453              		.cfi_offset 3, -8
 454              		.cfi_offset 14, -4
 124:Core/Src/clean_main.c **** 	HAL_TIM_Base_Start(&htim2);
 455              		.loc 1 124 2 view .LVU91
 456 0002 0448     		ldr	r0, .L39
 457 0004 FFF7FEFF 		bl	HAL_TIM_Base_Start
 458              	.LVL36:
 125:Core/Src/clean_main.c **** 	//HAL_TIM_Base_Start(&htim3);
 126:Core/Src/clean_main.c **** 	HAL_ADC_Start_DMA(&hadc1, samples, 2);
 459              		.loc 1 126 2 view .LVU92
 460 0008 0222     		movs	r2, #2
 461 000a 0349     		ldr	r1, .L39+4
 462 000c 0348     		ldr	r0, .L39+8
 463 000e FFF7FEFF 		bl	HAL_ADC_Start_DMA
 464              	.LVL37:
 127:Core/Src/clean_main.c **** }
 465              		.loc 1 127 1 is_stmt 0 view .LVU93
 466 0012 08BD     		pop	{r3, pc}
 467              	.L40:
 468              		.align	2
 469              	.L39:
 470 0014 00000000 		.word	htim2
 471 0018 00000000 		.word	samples
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s 			page 12


 472 001c 00000000 		.word	hadc1
 473              		.cfi_endproc
 474              	.LFE221:
 476              		.section	.text.clean_loop,"ax",%progbits
 477              		.align	1
 478              		.global	clean_loop
 479              		.syntax unified
 480              		.thumb
 481              		.thumb_func
 483              	clean_loop:
 484              	.LFB222:
 128:Core/Src/clean_main.c **** 
 129:Core/Src/clean_main.c **** void clean_loop(){
 485              		.loc 1 129 18 is_stmt 1 view -0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 0
 488              		@ frame_needed = 0, uses_anonymous_args = 0
 489 0000 08B5     		push	{r3, lr}
 490              		.cfi_def_cfa_offset 8
 491              		.cfi_offset 3, -8
 492              		.cfi_offset 14, -4
 130:Core/Src/clean_main.c **** 	clearDisp();
 493              		.loc 1 130 2 view .LVU95
 494 0002 FFF7FEFF 		bl	clearDisp
 495              	.LVL38:
 131:Core/Src/clean_main.c **** 	menu();
 496              		.loc 1 131 2 view .LVU96
 497 0006 FFF7FEFF 		bl	menu
 498              	.LVL39:
 132:Core/Src/clean_main.c **** }
 499              		.loc 1 132 1 is_stmt 0 view .LVU97
 500 000a 08BD     		pop	{r3, pc}
 501              		.cfi_endproc
 502              	.LFE222:
 504              		.section	.rodata.str1.4,"aMS",%progbits,1
 505              		.align	2
 506              	.LC0:
 507 0000 44697370 		.ascii	"Display bar\000"
 507      6C617920 
 507      62617200 
 508              		.align	2
 509              	.LC1:
 510 000c 53657420 		.ascii	"Set bar character\000"
 510      62617220 
 510      63686172 
 510      61637465 
 510      7200
 511 001e 0000     		.align	2
 512              	.LC2:
 513 0020 54657374 		.ascii	"Test wyjscia\000"
 513      2077796A 
 513      73636961 
 513      00
 514              		.global	samples
 515              		.section	.bss.samples,"aw",%nobits
 516              		.align	2
 519              	samples:
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s 			page 13


 520 0000 00000000 		.space	4
 521              		.global	pasek
 522              		.section	.bss.pasek,"aw",%nobits
 523              		.align	2
 526              	pasek:
 527 0000 00000000 		.space	20
 527      00000000 
 527      00000000 
 527      00000000 
 527      00000000 
 528              		.global	znak
 529              		.section	.data.znak,"aw"
 532              	znak:
 533 0000 7F       		.byte	127
 534              		.global	stan_enc
 535              		.section	.data.stan_enc,"aw"
 536              		.align	1
 539              	stan_enc:
 540 0000 1400     		.short	20
 541              		.section	.rodata
 542              		.align	2
 543              		.set	.LANCHOR0,. + 0
 544              	.LC8:
 545 0000 00000000 		.word	.LC0
 546 0004 00000000 		.word	line
 547 0008 0C000000 		.word	.LC1
 548 000c 00000000 		.word	change_char
 549 0010 20000000 		.word	.LC2
 550 0014 00000000 		.word	testOutput
 551              		.text
 552              	.Letext0:
 553              		.file 2 "C:/Users/Konrad/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-t
 554              		.file 3 "C:/Users/Konrad/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-t
 555              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 556              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 557              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 558              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 559              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 560              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 561              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 562              		.file 11 "Core/Inc/adc.h"
 563              		.file 12 "Core/Inc/tim.h"
 564              		.file 13 "Core/Inc/enc_disp.h"
 565              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 clean_main.c
C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s:21     .rodata.line.str1.4:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s:25     .text.line:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s:31     .text.line:00000000 line
C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s:138    .text.line:00000068 $d
C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s:539    .data.stan_enc:00000000 stan_enc
C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s:532    .data.znak:00000000 znak
C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s:526    .bss.pasek:00000000 pasek
C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s:146    .rodata.change_char.str1.4:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s:150    .text.change_char:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s:156    .text.change_char:00000000 change_char
C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s:217    .text.change_char:00000048 $d
C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s:224    .text.switchTube:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s:230    .text.switchTube:00000000 switchTube
C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s:255    .text.switchTube:00000010 $d
C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s:260    .rodata.testOutput.str1.4:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s:267    .text.testOutput:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s:273    .text.testOutput:00000000 testOutput
C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s:342    .text.testOutput:0000004c $d
C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s:348    .rodata.menu.str1.4:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s:352    .text.menu:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s:358    .text.menu:00000000 menu
C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s:433    .text.menu:00000068 $d
C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s:439    .text.clean_main:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s:445    .text.clean_main:00000000 clean_main
C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s:470    .text.clean_main:00000014 $d
C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s:519    .bss.samples:00000000 samples
C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s:477    .text.clean_loop:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s:483    .text.clean_loop:00000000 clean_loop
C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s:505    .rodata.str1.4:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s:516    .bss.samples:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s:523    .bss.pasek:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s:536    .data.stan_enc:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccxc8AC9.s:542    .rodata:00000000 $d

UNDEFINED SYMBOLS
HAL_Delay
dprint
button
UpdateEnc
clearDisp
HAL_GPIO_WritePin
HAL_TIM_Base_Start
HAL_ADC_Start_DMA
htim2
hadc1
