ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 23, 1
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"clean_main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/clean_main.c"
  18              		.global	__aeabi_f2d
  19              		.section	.rodata.TestFilterOut.str1.4,"aMS",%progbits,1
  20              		.align	2
  21              	.LC6:
  22 0000 46696C74 		.ascii	"Filter: %.3fV      time[us]:%d\000"
  22      65723A20 
  22      252E3366 
  22      56202020 
  22      20202074 
  23              		.section	.text.TestFilterOut,"ax",%progbits
  24              		.align	1
  25              		.p2align 2,,3
  26              		.global	TestFilterOut
  27              		.syntax unified
  28              		.thumb
  29              		.thumb_func
  31              	TestFilterOut:
  32              	.LFB254:
   1:Core/Src/clean_main.c **** /*
   2:Core/Src/clean_main.c ****  * clean_main.c
   3:Core/Src/clean_main.c ****  *
   4:Core/Src/clean_main.c ****  *  Created on: 15 gru 2022
   5:Core/Src/clean_main.c ****  *      Author: Konrad
   6:Core/Src/clean_main.c ****  */
   7:Core/Src/clean_main.c **** 
   8:Core/Src/clean_main.c **** #define ARM_MATH_CM4
   9:Core/Src/clean_main.c **** 
  10:Core/Src/clean_main.c **** #include "main.h"
  11:Core/Src/clean_main.c **** #include "adc.h"
  12:Core/Src/clean_main.c **** #include "spi.h"
  13:Core/Src/clean_main.c **** #include "dma.h"
  14:Core/Src/clean_main.c **** #include "tim.h"
  15:Core/Src/clean_main.c **** #include "usart.h"
  16:Core/Src/clean_main.c **** #include "gpio.h"
  17:Core/Src/clean_main.c **** #include <stdbool.h>
  18:Core/Src/clean_main.c **** #include "arm_math.h"
  19:Core/Src/clean_main.c **** #include "enc_disp.h"
  20:Core/Src/clean_main.c **** #include "dac_driver.h"
  21:Core/Src/clean_main.c **** 
  22:Core/Src/clean_main.c **** 
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s 			page 2


  23:Core/Src/clean_main.c **** 
  24:Core/Src/clean_main.c **** 
  25:Core/Src/clean_main.c **** int16_t stan_enc = 20;
  26:Core/Src/clean_main.c **** uint8_t znak = 127;
  27:Core/Src/clean_main.c **** char pasek[20];
  28:Core/Src/clean_main.c **** uint16_t samples[2048];
  29:Core/Src/clean_main.c **** float32_t filterIn[2048];
  30:Core/Src/clean_main.c **** 
  31:Core/Src/clean_main.c **** //filter 1khz test
  32:Core/Src/clean_main.c **** float32_t maxValue = 0;
  33:Core/Src/clean_main.c **** uint32_t measured_us = 0;
  34:Core/Src/clean_main.c **** float32_t filterState[2];
  35:Core/Src/clean_main.c **** float32_t filterCoefficients[5] = {1,0,-1,(float32_t)1.944915703229297632148586671974044293165,(flo
  36:Core/Src/clean_main.c **** float32_t filterOut[2048];
  37:Core/Src/clean_main.c **** arm_biquad_cascade_df2T_instance_f32 filter1;
  38:Core/Src/clean_main.c **** 
  39:Core/Src/clean_main.c **** 
  40:Core/Src/clean_main.c **** 
  41:Core/Src/clean_main.c **** typedef struct menu_option{
  42:Core/Src/clean_main.c **** 	char * prompt;
  43:Core/Src/clean_main.c **** 	void (*func)(void);
  44:Core/Src/clean_main.c **** }menu_option;
  45:Core/Src/clean_main.c **** 
  46:Core/Src/clean_main.c **** 
  47:Core/Src/clean_main.c **** void line(){
  48:Core/Src/clean_main.c **** 	HAL_Delay(500);
  49:Core/Src/clean_main.c **** 	while (button()==0) {
  50:Core/Src/clean_main.c **** 		UpdateEnc(0, 20, &stan_enc, true);
  51:Core/Src/clean_main.c **** 		for (int i = 0; i < 20; i++) {
  52:Core/Src/clean_main.c **** 			if (i < stan_enc) {
  53:Core/Src/clean_main.c **** 				pasek[i] = znak;
  54:Core/Src/clean_main.c **** 			}
  55:Core/Src/clean_main.c **** 			if (i < 20 && i >= stan_enc) {
  56:Core/Src/clean_main.c **** 				pasek[i] = 'D';
  57:Core/Src/clean_main.c **** 			}
  58:Core/Src/clean_main.c **** 			if (i >= 20)
  59:Core/Src/clean_main.c **** 				pasek[i] = ' ';
  60:Core/Src/clean_main.c **** 		}
  61:Core/Src/clean_main.c **** 
  62:Core/Src/clean_main.c **** 		dprint("%.20s^Status",pasek);
  63:Core/Src/clean_main.c **** 		HAL_Delay(10);
  64:Core/Src/clean_main.c **** 	}
  65:Core/Src/clean_main.c **** 	HAL_Delay(200);
  66:Core/Src/clean_main.c **** 	clearDisp();
  67:Core/Src/clean_main.c **** 	stan_enc = znak;
  68:Core/Src/clean_main.c **** }
  69:Core/Src/clean_main.c **** 
  70:Core/Src/clean_main.c **** void change_char(){
  71:Core/Src/clean_main.c **** 	HAL_Delay(500);
  72:Core/Src/clean_main.c **** 	while (button()==0) {
  73:Core/Src/clean_main.c **** 		znak = stan_enc;
  74:Core/Src/clean_main.c **** 		UpdateEnc(32, 127, &stan_enc, false);
  75:Core/Src/clean_main.c **** 		dprint("Kod: %03d = '%c'", stan_enc, stan_enc);
  76:Core/Src/clean_main.c **** 		HAL_Delay(10);
  77:Core/Src/clean_main.c **** 	}
  78:Core/Src/clean_main.c **** 	clearDisp();
  79:Core/Src/clean_main.c **** 	HAL_Delay(200);
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s 			page 3


  80:Core/Src/clean_main.c **** }
  81:Core/Src/clean_main.c **** 
  82:Core/Src/clean_main.c **** void switchTube(bool state){
  83:Core/Src/clean_main.c **** 	HAL_GPIO_WritePin(EN_TUBE_GPIO_Port,EN_TUBE_Pin,state);
  84:Core/Src/clean_main.c **** }
  85:Core/Src/clean_main.c **** 
  86:Core/Src/clean_main.c **** void testOutput(void){
  87:Core/Src/clean_main.c **** 	clearDisp();
  88:Core/Src/clean_main.c **** 	while(button() == 1);
  89:Core/Src/clean_main.c **** 	while(button() == 0){
  90:Core/Src/clean_main.c **** 		HAL_Delay(1000);
  91:Core/Src/clean_main.c **** 		switchTube(1);
  92:Core/Src/clean_main.c **** 		dprint("Out:1");
  93:Core/Src/clean_main.c **** 		HAL_Delay(1000);
  94:Core/Src/clean_main.c **** 		switchTube(0);
  95:Core/Src/clean_main.c **** 		dprint("Out:0");
  96:Core/Src/clean_main.c **** 	}
  97:Core/Src/clean_main.c **** 	while(button() == 1);
  98:Core/Src/clean_main.c **** }
  99:Core/Src/clean_main.c **** 
 100:Core/Src/clean_main.c **** void testDAC(){
 101:Core/Src/clean_main.c **** 	HAL_Delay(500);
 102:Core/Src/clean_main.c **** 	clearDisp();
 103:Core/Src/clean_main.c **** 	stan_enc = 0;
 104:Core/Src/clean_main.c **** 	while(button() == 0){
 105:Core/Src/clean_main.c **** 		UpdateEnc(0, 3, &stan_enc, false);
 106:Core/Src/clean_main.c **** 		dprint("DAC Channel:%1d",stan_enc);
 107:Core/Src/clean_main.c **** 		HAL_Delay(50);
 108:Core/Src/clean_main.c **** 	}
 109:Core/Src/clean_main.c **** 	int channel = stan_enc;
 110:Core/Src/clean_main.c **** 	while(button() == 1);
 111:Core/Src/clean_main.c **** 	stan_enc = 0;
 112:Core/Src/clean_main.c **** 	while(button() == 0){
 113:Core/Src/clean_main.c **** 		UpdateEnc(0, 3, &stan_enc, false);
 114:Core/Src/clean_main.c **** 		dprint("Number of DAC:%1d",stan_enc);
 115:Core/Src/clean_main.c **** 		HAL_Delay(50);
 116:Core/Src/clean_main.c **** 	}
 117:Core/Src/clean_main.c **** 	int dac_number = stan_enc;
 118:Core/Src/clean_main.c **** 	while(button() == 1);
 119:Core/Src/clean_main.c **** 	stan_enc = 0;
 120:Core/Src/clean_main.c **** 	HAL_GPIO_WritePin(EN_TUBE_GPIO_Port,EN_TUBE_Pin,1);
 121:Core/Src/clean_main.c **** 	while(button() == 0){
 122:Core/Src/clean_main.c **** 		UpdateEnc(0, 255, &stan_enc, true);
 123:Core/Src/clean_main.c **** 		dprint("DAC output:%3d",stan_enc);
 124:Core/Src/clean_main.c **** 		dac_write(channel,stan_enc,dac_number);
 125:Core/Src/clean_main.c **** 		HAL_Delay(50);	
 126:Core/Src/clean_main.c **** 	}
 127:Core/Src/clean_main.c **** 	while(button() == 1);
 128:Core/Src/clean_main.c **** 	HAL_GPIO_WritePin(EN_TUBE_GPIO_Port,EN_TUBE_Pin,0);
 129:Core/Src/clean_main.c **** 
 130:Core/Src/clean_main.c **** }
 131:Core/Src/clean_main.c **** 
 132:Core/Src/clean_main.c **** void TestFilterOut(){
  33              		.loc 1 132 21 view -0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s 			page 4


  37 0000 70B5     		push	{r4, r5, r6, lr}
  38              		.cfi_def_cfa_offset 16
  39              		.cfi_offset 4, -16
  40              		.cfi_offset 5, -12
  41              		.cfi_offset 6, -8
  42              		.cfi_offset 14, -4
  43 0002 82B0     		sub	sp, sp, #8
  44              		.cfi_def_cfa_offset 24
  45              	.L2:
 133:Core/Src/clean_main.c **** 	while(button() == 1);
  46              		.loc 1 133 17 discriminator 1 view .LVU1
  47              		.loc 1 133 8 is_stmt 0 discriminator 1 view .LVU2
  48 0004 FFF7FEFF 		bl	button
  49              	.LVL0:
  50              		.loc 1 133 17 discriminator 1 view .LVU3
  51 0008 0028     		cmp	r0, #0
  52 000a FBD1     		bne	.L2
 134:Core/Src/clean_main.c **** 	while(button() == 0){
 135:Core/Src/clean_main.c **** 		dprint("Filter: %.3fV      time[us]:%d",maxValue,measured_us);
  53              		.loc 1 135 3 view .LVU4
  54 000c 0D4E     		ldr	r6, .L10
  55 000e 0E4D     		ldr	r5, .L10+4
  56 0010 0E4C     		ldr	r4, .L10+8
  57 0012 0CE0     		b	.L3
  58              	.L4:
  59 0014 3068     		ldr	r0, [r6]	@ float
  60 0016 FFF7FEFF 		bl	__aeabi_f2d
  61              	.LVL1:
  62 001a 0B46     		mov	r3, r1
  63 001c 2968     		ldr	r1, [r5]
  64 001e 0091     		str	r1, [sp]
  65 0020 0246     		mov	r2, r0
  66 0022 2046     		mov	r0, r4
  67 0024 FFF7FEFF 		bl	dprint
  68              	.LVL2:
 136:Core/Src/clean_main.c **** 		HAL_Delay(100);
  69              		.loc 1 136 3 is_stmt 1 view .LVU5
  70 0028 6420     		movs	r0, #100
  71 002a FFF7FEFF 		bl	HAL_Delay
  72              	.LVL3:
  73              	.L3:
 134:Core/Src/clean_main.c **** 	while(button() == 0){
  74              		.loc 1 134 17 view .LVU6
 134:Core/Src/clean_main.c **** 	while(button() == 0){
  75              		.loc 1 134 8 is_stmt 0 view .LVU7
  76 002e FFF7FEFF 		bl	button
  77              	.LVL4:
 135:Core/Src/clean_main.c **** 		HAL_Delay(100);
  78              		.loc 1 135 3 is_stmt 1 view .LVU8
 134:Core/Src/clean_main.c **** 	while(button() == 0){
  79              		.loc 1 134 17 is_stmt 0 discriminator 1 view .LVU9
  80 0032 0028     		cmp	r0, #0
  81 0034 EED0     		beq	.L4
  82              	.L5:
 137:Core/Src/clean_main.c **** 	}
 138:Core/Src/clean_main.c **** 	while(button() == 1);
  83              		.loc 1 138 17 is_stmt 1 discriminator 1 view .LVU10
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s 			page 5


  84              		.loc 1 138 8 is_stmt 0 discriminator 1 view .LVU11
  85 0036 FFF7FEFF 		bl	button
  86              	.LVL5:
  87              		.loc 1 138 17 discriminator 1 view .LVU12
  88 003a 0028     		cmp	r0, #0
  89 003c FBD1     		bne	.L5
 139:Core/Src/clean_main.c **** }
  90              		.loc 1 139 1 view .LVU13
  91 003e 02B0     		add	sp, sp, #8
  92              		.cfi_def_cfa_offset 16
  93              		@ sp needed
  94 0040 70BD     		pop	{r4, r5, r6, pc}
  95              	.L11:
  96 0042 00BF     		.align	2
  97              	.L10:
  98 0044 00000000 		.word	maxValue
  99 0048 00000000 		.word	measured_us
 100 004c 00000000 		.word	.LC6
 101              		.cfi_endproc
 102              	.LFE254:
 104              		.section	.rodata.line.str1.4,"aMS",%progbits,1
 105              		.align	2
 106              	.LC7:
 107 0000 252E3230 		.ascii	"%.20s^Status\000"
 107      735E5374 
 107      61747573 
 107      00
 108              		.section	.text.line,"ax",%progbits
 109              		.align	1
 110              		.p2align 2,,3
 111              		.global	line
 112              		.syntax unified
 113              		.thumb
 114              		.thumb_func
 116              	line:
 117              	.LFB249:
  47:Core/Src/clean_main.c **** 	HAL_Delay(500);
 118              		.loc 1 47 12 is_stmt 1 view -0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
  48:Core/Src/clean_main.c **** 	while (button()==0) {
 122              		.loc 1 48 2 view .LVU15
  47:Core/Src/clean_main.c **** 	HAL_Delay(500);
 123              		.loc 1 47 12 is_stmt 0 view .LVU16
 124 0000 70B5     		push	{r4, r5, r6, lr}
 125              		.cfi_def_cfa_offset 16
 126              		.cfi_offset 4, -16
 127              		.cfi_offset 5, -12
 128              		.cfi_offset 6, -8
 129              		.cfi_offset 14, -4
  48:Core/Src/clean_main.c **** 	while (button()==0) {
 130              		.loc 1 48 2 view .LVU17
 131 0002 4FF4FA70 		mov	r0, #500
 132 0006 FFF7FEFF 		bl	HAL_Delay
 133              	.LVL6:
  49:Core/Src/clean_main.c **** 		UpdateEnc(0, 20, &stan_enc, true);
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s 			page 6


 134              		.loc 1 49 2 is_stmt 1 view .LVU18
  49:Core/Src/clean_main.c **** 		UpdateEnc(0, 20, &stan_enc, true);
 135              		.loc 1 49 17 view .LVU19
 136 000a 194D     		ldr	r5, .L21
 137 000c 194E     		ldr	r6, .L21+4
 138 000e 4424     		movs	r4, #68
  49:Core/Src/clean_main.c **** 		UpdateEnc(0, 20, &stan_enc, true);
 139              		.loc 1 49 9 is_stmt 0 view .LVU20
 140 0010 FFF7FEFF 		bl	button
 141              	.LVL7:
  49:Core/Src/clean_main.c **** 		UpdateEnc(0, 20, &stan_enc, true);
 142              		.loc 1 49 17 discriminator 1 view .LVU21
 143 0014 F0B9     		cbnz	r0, .L20
 144              	.L18:
  50:Core/Src/clean_main.c **** 		for (int i = 0; i < 20; i++) {
 145              		.loc 1 50 3 is_stmt 1 view .LVU22
 146 0016 0123     		movs	r3, #1
 147 0018 1421     		movs	r1, #20
 148 001a 2A46     		mov	r2, r5
 149 001c FFF7FEFF 		bl	UpdateEnc
 150              	.LVL8:
  51:Core/Src/clean_main.c **** 			if (i < stan_enc) {
 151              		.loc 1 51 3 view .LVU23
 152              	.LBB6:
  51:Core/Src/clean_main.c **** 			if (i < stan_enc) {
 153              		.loc 1 51 8 view .LVU24
  51:Core/Src/clean_main.c **** 			if (i < stan_enc) {
 154              		.loc 1 51 21 discriminator 1 view .LVU25
 155 0020 154B     		ldr	r3, .L21+8
  52:Core/Src/clean_main.c **** 				pasek[i] = znak;
 156              		.loc 1 52 10 is_stmt 0 view .LVU26
 157 0022 B5F900C0 		ldrsh	ip, [r5]
  53:Core/Src/clean_main.c **** 			}
 158              		.loc 1 53 14 view .LVU27
 159 0026 96F800E0 		ldrb	lr, [r6]	@ zero_extendqisi2
 160 002a 03F11400 		add	r0, r3, #20
 161 002e 5942     		rsbs	r1, r3, #0
 162              	.LVL9:
 163              	.L17:
  52:Core/Src/clean_main.c **** 				pasek[i] = znak;
 164              		.loc 1 52 4 is_stmt 1 view .LVU28
  53:Core/Src/clean_main.c **** 			}
 165              		.loc 1 53 5 view .LVU29
  55:Core/Src/clean_main.c **** 				pasek[i] = 'D';
 166              		.loc 1 55 4 view .LVU30
  52:Core/Src/clean_main.c **** 				pasek[i] = znak;
 167              		.loc 1 52 7 is_stmt 0 view .LVU31
 168 0030 CA18     		adds	r2, r1, r3
 169 0032 9445     		cmp	ip, r2
 170 0034 16DD     		ble	.L14
 171 0036 03F801EF 		strb	lr, [r3, #1]!
 172              	.LVL10:
  58:Core/Src/clean_main.c **** 				pasek[i] = ' ';
 173              		.loc 1 58 4 is_stmt 1 view .LVU32
  51:Core/Src/clean_main.c **** 			if (i < stan_enc) {
 174              		.loc 1 51 28 discriminator 2 view .LVU33
  51:Core/Src/clean_main.c **** 			if (i < stan_enc) {
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s 			page 7


 175              		.loc 1 51 21 discriminator 1 view .LVU34
 176 003a 8342     		cmp	r3, r0
 177 003c F8D1     		bne	.L17
 178              	.LVL11:
 179              	.L16:
  51:Core/Src/clean_main.c **** 			if (i < stan_enc) {
 180              		.loc 1 51 21 is_stmt 0 discriminator 1 view .LVU35
 181              	.LBE6:
  62:Core/Src/clean_main.c **** 		HAL_Delay(10);
 182              		.loc 1 62 3 is_stmt 1 view .LVU36
 183 003e 0F49     		ldr	r1, .L21+12
 184 0040 0F48     		ldr	r0, .L21+16
 185 0042 FFF7FEFF 		bl	dprint
 186              	.LVL12:
  63:Core/Src/clean_main.c **** 	}
 187              		.loc 1 63 3 view .LVU37
 188 0046 0A20     		movs	r0, #10
 189 0048 FFF7FEFF 		bl	HAL_Delay
 190              	.LVL13:
  49:Core/Src/clean_main.c **** 		UpdateEnc(0, 20, &stan_enc, true);
 191              		.loc 1 49 17 view .LVU38
  49:Core/Src/clean_main.c **** 		UpdateEnc(0, 20, &stan_enc, true);
 192              		.loc 1 49 9 is_stmt 0 view .LVU39
 193 004c FFF7FEFF 		bl	button
 194              	.LVL14:
  49:Core/Src/clean_main.c **** 		UpdateEnc(0, 20, &stan_enc, true);
 195              		.loc 1 49 17 discriminator 1 view .LVU40
 196 0050 0028     		cmp	r0, #0
 197 0052 E0D0     		beq	.L18
 198              	.L20:
  65:Core/Src/clean_main.c **** 	clearDisp();
 199              		.loc 1 65 2 is_stmt 1 view .LVU41
 200 0054 C820     		movs	r0, #200
 201 0056 FFF7FEFF 		bl	HAL_Delay
 202              	.LVL15:
  66:Core/Src/clean_main.c **** 	stan_enc = znak;
 203              		.loc 1 66 2 view .LVU42
 204 005a FFF7FEFF 		bl	clearDisp
 205              	.LVL16:
  67:Core/Src/clean_main.c **** }
 206              		.loc 1 67 2 view .LVU43
  67:Core/Src/clean_main.c **** }
 207              		.loc 1 67 11 is_stmt 0 view .LVU44
 208 005e 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 209 0060 2B80     		strh	r3, [r5]	@ movhi
  68:Core/Src/clean_main.c **** 
 210              		.loc 1 68 1 view .LVU45
 211 0062 70BD     		pop	{r4, r5, r6, pc}
 212              	.LVL17:
 213              	.L14:
  68:Core/Src/clean_main.c **** 
 214              		.loc 1 68 1 view .LVU46
 215 0064 03F8014F 		strb	r4, [r3, #1]!
 216              	.LVL18:
 217              	.LBB7:
  58:Core/Src/clean_main.c **** 				pasek[i] = ' ';
 218              		.loc 1 58 4 is_stmt 1 view .LVU47
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s 			page 8


  51:Core/Src/clean_main.c **** 			if (i < stan_enc) {
 219              		.loc 1 51 28 discriminator 2 view .LVU48
  51:Core/Src/clean_main.c **** 			if (i < stan_enc) {
 220              		.loc 1 51 21 discriminator 1 view .LVU49
 221 0068 8342     		cmp	r3, r0
 222 006a E1D1     		bne	.L17
 223 006c E7E7     		b	.L16
 224              	.L22:
 225 006e 00BF     		.align	2
 226              	.L21:
 227 0070 00000000 		.word	stan_enc
 228 0074 00000000 		.word	znak
 229 0078 FFFFFFFF 		.word	pasek-1
 230 007c 00000000 		.word	pasek
 231 0080 00000000 		.word	.LC7
 232              	.LBE7:
 233              		.cfi_endproc
 234              	.LFE249:
 236              		.section	.rodata.change_char.str1.4,"aMS",%progbits,1
 237              		.align	2
 238              	.LC8:
 239 0000 4B6F643A 		.ascii	"Kod: %03d = '%c'\000"
 239      20253033 
 239      64203D20 
 239      27256327 
 239      00
 240              		.section	.text.change_char,"ax",%progbits
 241              		.align	1
 242              		.p2align 2,,3
 243              		.global	change_char
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
 248              	change_char:
 249              	.LFB250:
  70:Core/Src/clean_main.c **** 	HAL_Delay(500);
 250              		.loc 1 70 19 view -0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 0
 253              		@ frame_needed = 0, uses_anonymous_args = 0
  71:Core/Src/clean_main.c **** 	while (button()==0) {
 254              		.loc 1 71 2 view .LVU51
  70:Core/Src/clean_main.c **** 	HAL_Delay(500);
 255              		.loc 1 70 19 is_stmt 0 view .LVU52
 256 0000 70B5     		push	{r4, r5, r6, lr}
 257              		.cfi_def_cfa_offset 16
 258              		.cfi_offset 4, -16
 259              		.cfi_offset 5, -12
 260              		.cfi_offset 6, -8
 261              		.cfi_offset 14, -4
  71:Core/Src/clean_main.c **** 	while (button()==0) {
 262              		.loc 1 71 2 view .LVU53
 263 0002 4FF4FA70 		mov	r0, #500
 264 0006 FFF7FEFF 		bl	HAL_Delay
 265              	.LVL19:
  72:Core/Src/clean_main.c **** 		znak = stan_enc;
 266              		.loc 1 72 2 is_stmt 1 view .LVU54
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s 			page 9


  73:Core/Src/clean_main.c **** 		UpdateEnc(32, 127, &stan_enc, false);
 267              		.loc 1 73 8 is_stmt 0 view .LVU55
 268 000a 114E     		ldr	r6, .L27
 269 000c 114C     		ldr	r4, .L27+4
  75:Core/Src/clean_main.c **** 		HAL_Delay(10);
 270              		.loc 1 75 3 view .LVU56
 271 000e 124D     		ldr	r5, .L27+8
  72:Core/Src/clean_main.c **** 		znak = stan_enc;
 272              		.loc 1 72 8 view .LVU57
 273 0010 0EE0     		b	.L24
 274              	.L25:
  73:Core/Src/clean_main.c **** 		UpdateEnc(32, 127, &stan_enc, false);
 275              		.loc 1 73 8 view .LVU58
 276 0012 B4F800C0 		ldrh	ip, [r4]
 277 0016 86F800C0 		strb	ip, [r6]
  74:Core/Src/clean_main.c **** 		dprint("Kod: %03d = '%c'", stan_enc, stan_enc);
 278              		.loc 1 74 3 is_stmt 1 view .LVU59
 279 001a FFF7FEFF 		bl	UpdateEnc
 280              	.LVL20:
  75:Core/Src/clean_main.c **** 		HAL_Delay(10);
 281              		.loc 1 75 3 view .LVU60
 282 001e B4F90020 		ldrsh	r2, [r4]
 283 0022 2846     		mov	r0, r5
 284 0024 1146     		mov	r1, r2
 285 0026 FFF7FEFF 		bl	dprint
 286              	.LVL21:
  76:Core/Src/clean_main.c **** 	}
 287              		.loc 1 76 3 view .LVU61
 288 002a 0A20     		movs	r0, #10
 289 002c FFF7FEFF 		bl	HAL_Delay
 290              	.LVL22:
 291              	.L24:
  72:Core/Src/clean_main.c **** 		znak = stan_enc;
 292              		.loc 1 72 17 view .LVU62
  72:Core/Src/clean_main.c **** 		znak = stan_enc;
 293              		.loc 1 72 9 is_stmt 0 view .LVU63
 294 0030 FFF7FEFF 		bl	button
 295              	.LVL23:
  73:Core/Src/clean_main.c **** 		UpdateEnc(32, 127, &stan_enc, false);
 296              		.loc 1 73 3 is_stmt 1 view .LVU64
  72:Core/Src/clean_main.c **** 		znak = stan_enc;
 297              		.loc 1 72 9 is_stmt 0 view .LVU65
 298 0034 0346     		mov	r3, r0
  74:Core/Src/clean_main.c **** 		dprint("Kod: %03d = '%c'", stan_enc, stan_enc);
 299              		.loc 1 74 3 view .LVU66
 300 0036 074A     		ldr	r2, .L27+4
 301 0038 7F21     		movs	r1, #127
 302 003a 2020     		movs	r0, #32
  72:Core/Src/clean_main.c **** 		znak = stan_enc;
 303              		.loc 1 72 17 discriminator 1 view .LVU67
 304 003c 002B     		cmp	r3, #0
 305 003e E8D0     		beq	.L25
  78:Core/Src/clean_main.c **** 	HAL_Delay(200);
 306              		.loc 1 78 2 is_stmt 1 view .LVU68
 307 0040 FFF7FEFF 		bl	clearDisp
 308              	.LVL24:
  79:Core/Src/clean_main.c **** }
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s 			page 10


 309              		.loc 1 79 2 view .LVU69
  80:Core/Src/clean_main.c **** 
 310              		.loc 1 80 1 is_stmt 0 view .LVU70
 311 0044 BDE87040 		pop	{r4, r5, r6, lr}
 312              		.cfi_restore 14
 313              		.cfi_restore 6
 314              		.cfi_restore 5
 315              		.cfi_restore 4
 316              		.cfi_def_cfa_offset 0
  79:Core/Src/clean_main.c **** }
 317              		.loc 1 79 2 view .LVU71
 318 0048 C820     		movs	r0, #200
 319 004a FFF7FEBF 		b	HAL_Delay
 320              	.LVL25:
 321              	.L28:
 322 004e 00BF     		.align	2
 323              	.L27:
 324 0050 00000000 		.word	znak
 325 0054 00000000 		.word	stan_enc
 326 0058 00000000 		.word	.LC8
 327              		.cfi_endproc
 328              	.LFE250:
 330              		.section	.rodata.testOutput.str1.4,"aMS",%progbits,1
 331              		.align	2
 332              	.LC9:
 333 0000 4F75743A 		.ascii	"Out:1\000"
 333      3100
 334 0006 0000     		.align	2
 335              	.LC10:
 336 0008 4F75743A 		.ascii	"Out:0\000"
 336      3000
 337              		.section	.text.testOutput,"ax",%progbits
 338              		.align	1
 339              		.p2align 2,,3
 340              		.global	testOutput
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 345              	testOutput:
 346              	.LFB252:
  86:Core/Src/clean_main.c **** 	clearDisp();
 347              		.loc 1 86 22 is_stmt 1 view -0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
  87:Core/Src/clean_main.c **** 	while(button() == 1);
 351              		.loc 1 87 2 view .LVU73
  86:Core/Src/clean_main.c **** 	clearDisp();
 352              		.loc 1 86 22 is_stmt 0 view .LVU74
 353 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 354              		.cfi_def_cfa_offset 24
 355              		.cfi_offset 3, -24
 356              		.cfi_offset 4, -20
 357              		.cfi_offset 5, -16
 358              		.cfi_offset 6, -12
 359              		.cfi_offset 7, -8
 360              		.cfi_offset 14, -4
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s 			page 11


  87:Core/Src/clean_main.c **** 	while(button() == 1);
 361              		.loc 1 87 2 view .LVU75
 362 0002 FFF7FEFF 		bl	clearDisp
 363              	.LVL26:
  88:Core/Src/clean_main.c **** 	while(button() == 0){
 364              		.loc 1 88 2 is_stmt 1 view .LVU76
 365              	.L30:
  88:Core/Src/clean_main.c **** 	while(button() == 0){
 366              		.loc 1 88 17 discriminator 1 view .LVU77
  88:Core/Src/clean_main.c **** 	while(button() == 0){
 367              		.loc 1 88 8 is_stmt 0 discriminator 1 view .LVU78
 368 0006 FFF7FEFF 		bl	button
 369              	.LVL27:
  88:Core/Src/clean_main.c **** 	while(button() == 0){
 370              		.loc 1 88 17 discriminator 1 view .LVU79
 371 000a 0028     		cmp	r0, #0
 372 000c FBD1     		bne	.L30
 373              	.LBB8:
 374              	.LBB9:
  83:Core/Src/clean_main.c **** }
 375              		.loc 1 83 2 view .LVU80
 376 000e 144D     		ldr	r5, .L37
 377              	.LBE9:
 378              	.LBE8:
  92:Core/Src/clean_main.c **** 		HAL_Delay(1000);
 379              		.loc 1 92 3 view .LVU81
 380 0010 144F     		ldr	r7, .L37+4
  95:Core/Src/clean_main.c **** 	}
 381              		.loc 1 95 3 view .LVU82
 382 0012 154E     		ldr	r6, .L37+8
 383 0014 17E0     		b	.L31
 384              	.L32:
  90:Core/Src/clean_main.c **** 		switchTube(1);
 385              		.loc 1 90 3 view .LVU83
 386 0016 FFF7FEFF 		bl	HAL_Delay
 387              	.LVL28:
  91:Core/Src/clean_main.c **** 		dprint("Out:1");
 388              		.loc 1 91 3 is_stmt 1 view .LVU84
 389              	.LBB11:
 390              	.LBI8:
  82:Core/Src/clean_main.c **** 	HAL_GPIO_WritePin(EN_TUBE_GPIO_Port,EN_TUBE_Pin,state);
 391              		.loc 1 82 6 view .LVU85
 392              	.LBB10:
  83:Core/Src/clean_main.c **** }
 393              		.loc 1 83 2 view .LVU86
 394 001a 0122     		movs	r2, #1
 395 001c 4FF40071 		mov	r1, #512
 396 0020 2846     		mov	r0, r5
 397 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 398              	.LVL29:
  83:Core/Src/clean_main.c **** }
 399              		.loc 1 83 2 is_stmt 0 view .LVU87
 400              	.LBE10:
 401              	.LBE11:
  92:Core/Src/clean_main.c **** 		HAL_Delay(1000);
 402              		.loc 1 92 3 is_stmt 1 view .LVU88
 403 0026 3846     		mov	r0, r7
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s 			page 12


 404 0028 FFF7FEFF 		bl	dprint
 405              	.LVL30:
  93:Core/Src/clean_main.c **** 		switchTube(0);
 406              		.loc 1 93 3 view .LVU89
 407 002c 4FF47A70 		mov	r0, #1000
 408 0030 FFF7FEFF 		bl	HAL_Delay
 409              	.LVL31:
  94:Core/Src/clean_main.c **** 		dprint("Out:0");
 410              		.loc 1 94 3 view .LVU90
 411              	.LBB12:
 412              	.LBI12:
  82:Core/Src/clean_main.c **** 	HAL_GPIO_WritePin(EN_TUBE_GPIO_Port,EN_TUBE_Pin,state);
 413              		.loc 1 82 6 view .LVU91
 414              	.LBB13:
  83:Core/Src/clean_main.c **** }
 415              		.loc 1 83 2 view .LVU92
 416 0034 2846     		mov	r0, r5
 417 0036 2246     		mov	r2, r4
 418 0038 4FF40071 		mov	r1, #512
 419 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
 420              	.LVL32:
  83:Core/Src/clean_main.c **** }
 421              		.loc 1 83 2 is_stmt 0 view .LVU93
 422              	.LBE13:
 423              	.LBE12:
  95:Core/Src/clean_main.c **** 	}
 424              		.loc 1 95 3 is_stmt 1 view .LVU94
 425 0040 3046     		mov	r0, r6
 426 0042 FFF7FEFF 		bl	dprint
 427              	.LVL33:
 428              	.L31:
  89:Core/Src/clean_main.c **** 		HAL_Delay(1000);
 429              		.loc 1 89 17 view .LVU95
  89:Core/Src/clean_main.c **** 		HAL_Delay(1000);
 430              		.loc 1 89 8 is_stmt 0 view .LVU96
 431 0046 FFF7FEFF 		bl	button
 432              	.LVL34:
  90:Core/Src/clean_main.c **** 		switchTube(1);
 433              		.loc 1 90 3 is_stmt 1 view .LVU97
  89:Core/Src/clean_main.c **** 		HAL_Delay(1000);
 434              		.loc 1 89 8 is_stmt 0 view .LVU98
 435 004a 0446     		mov	r4, r0
  90:Core/Src/clean_main.c **** 		switchTube(1);
 436              		.loc 1 90 3 view .LVU99
 437 004c 4FF47A70 		mov	r0, #1000
  89:Core/Src/clean_main.c **** 		HAL_Delay(1000);
 438              		.loc 1 89 17 discriminator 1 view .LVU100
 439 0050 002C     		cmp	r4, #0
 440 0052 E0D0     		beq	.L32
 441              	.L33:
  97:Core/Src/clean_main.c **** }
 442              		.loc 1 97 17 is_stmt 1 discriminator 1 view .LVU101
  97:Core/Src/clean_main.c **** }
 443              		.loc 1 97 8 is_stmt 0 discriminator 1 view .LVU102
 444 0054 FFF7FEFF 		bl	button
 445              	.LVL35:
  97:Core/Src/clean_main.c **** }
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s 			page 13


 446              		.loc 1 97 17 discriminator 1 view .LVU103
 447 0058 0028     		cmp	r0, #0
 448 005a FBD1     		bne	.L33
  98:Core/Src/clean_main.c **** 
 449              		.loc 1 98 1 view .LVU104
 450 005c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 451              	.L38:
 452 005e 00BF     		.align	2
 453              	.L37:
 454 0060 00040240 		.word	1073873920
 455 0064 00000000 		.word	.LC9
 456 0068 08000000 		.word	.LC10
 457              		.cfi_endproc
 458              	.LFE252:
 460              		.section	.rodata.testDAC.str1.4,"aMS",%progbits,1
 461              		.align	2
 462              	.LC11:
 463 0000 44414320 		.ascii	"DAC Channel:%1d\000"
 463      4368616E 
 463      6E656C3A 
 463      25316400 
 464              		.align	2
 465              	.LC12:
 466 0010 4E756D62 		.ascii	"Number of DAC:%1d\000"
 466      6572206F 
 466      66204441 
 466      433A2531 
 466      6400
 467 0022 0000     		.align	2
 468              	.LC13:
 469 0024 44414320 		.ascii	"DAC output:%3d\000"
 469      6F757470 
 469      75743A25 
 469      336400
 470              		.section	.text.testDAC,"ax",%progbits
 471              		.align	1
 472              		.p2align 2,,3
 473              		.global	testDAC
 474              		.syntax unified
 475              		.thumb
 476              		.thumb_func
 478              	testDAC:
 479              	.LFB253:
 100:Core/Src/clean_main.c **** 	HAL_Delay(500);
 480              		.loc 1 100 15 is_stmt 1 view -0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 0, uses_anonymous_args = 0
 101:Core/Src/clean_main.c **** 	clearDisp();
 484              		.loc 1 101 2 view .LVU106
 100:Core/Src/clean_main.c **** 	HAL_Delay(500);
 485              		.loc 1 100 15 is_stmt 0 view .LVU107
 486 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 487              		.cfi_def_cfa_offset 24
 488              		.cfi_offset 4, -24
 489              		.cfi_offset 5, -20
 490              		.cfi_offset 6, -16
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s 			page 14


 491              		.cfi_offset 7, -12
 492              		.cfi_offset 8, -8
 493              		.cfi_offset 14, -4
 101:Core/Src/clean_main.c **** 	clearDisp();
 494              		.loc 1 101 2 view .LVU108
 495 0004 4FF4FA70 		mov	r0, #500
 103:Core/Src/clean_main.c **** 	while(button() == 0){
 496              		.loc 1 103 11 view .LVU109
 497 0008 354C     		ldr	r4, .L53
 106:Core/Src/clean_main.c **** 		HAL_Delay(50);
 498              		.loc 1 106 3 view .LVU110
 499 000a 364D     		ldr	r5, .L53+4
 101:Core/Src/clean_main.c **** 	clearDisp();
 500              		.loc 1 101 2 view .LVU111
 501 000c FFF7FEFF 		bl	HAL_Delay
 502              	.LVL36:
 102:Core/Src/clean_main.c **** 	stan_enc = 0;
 503              		.loc 1 102 2 is_stmt 1 view .LVU112
 504 0010 FFF7FEFF 		bl	clearDisp
 505              	.LVL37:
 103:Core/Src/clean_main.c **** 	while(button() == 0){
 506              		.loc 1 103 2 view .LVU113
 103:Core/Src/clean_main.c **** 	while(button() == 0){
 507              		.loc 1 103 11 is_stmt 0 view .LVU114
 508 0014 0023     		movs	r3, #0
 509 0016 2380     		strh	r3, [r4]	@ movhi
 104:Core/Src/clean_main.c **** 		UpdateEnc(0, 3, &stan_enc, false);
 510              		.loc 1 104 2 is_stmt 1 view .LVU115
 104:Core/Src/clean_main.c **** 		UpdateEnc(0, 3, &stan_enc, false);
 511              		.loc 1 104 7 is_stmt 0 view .LVU116
 512 0018 09E0     		b	.L40
 513              	.L41:
 105:Core/Src/clean_main.c **** 		dprint("DAC Channel:%1d",stan_enc);
 514              		.loc 1 105 3 view .LVU117
 515 001a FFF7FEFF 		bl	UpdateEnc
 516              	.LVL38:
 106:Core/Src/clean_main.c **** 		HAL_Delay(50);
 517              		.loc 1 106 3 is_stmt 1 view .LVU118
 518 001e 2846     		mov	r0, r5
 519 0020 B4F90010 		ldrsh	r1, [r4]
 520 0024 FFF7FEFF 		bl	dprint
 521              	.LVL39:
 107:Core/Src/clean_main.c **** 	}
 522              		.loc 1 107 3 view .LVU119
 523 0028 3220     		movs	r0, #50
 524 002a FFF7FEFF 		bl	HAL_Delay
 525              	.LVL40:
 526              	.L40:
 104:Core/Src/clean_main.c **** 		UpdateEnc(0, 3, &stan_enc, false);
 527              		.loc 1 104 17 view .LVU120
 104:Core/Src/clean_main.c **** 		UpdateEnc(0, 3, &stan_enc, false);
 528              		.loc 1 104 8 is_stmt 0 view .LVU121
 529 002e FFF7FEFF 		bl	button
 530              	.LVL41:
 105:Core/Src/clean_main.c **** 		dprint("DAC Channel:%1d",stan_enc);
 531              		.loc 1 105 3 is_stmt 1 view .LVU122
 532 0032 0321     		movs	r1, #3
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s 			page 15


 104:Core/Src/clean_main.c **** 		UpdateEnc(0, 3, &stan_enc, false);
 533              		.loc 1 104 8 is_stmt 0 view .LVU123
 534 0034 0346     		mov	r3, r0
 105:Core/Src/clean_main.c **** 		dprint("DAC Channel:%1d",stan_enc);
 535              		.loc 1 105 3 view .LVU124
 536 0036 2246     		mov	r2, r4
 104:Core/Src/clean_main.c **** 		UpdateEnc(0, 3, &stan_enc, false);
 537              		.loc 1 104 17 discriminator 1 view .LVU125
 538 0038 0028     		cmp	r0, #0
 539 003a EED0     		beq	.L41
 109:Core/Src/clean_main.c **** 	while(button() == 1);
 540              		.loc 1 109 2 is_stmt 1 view .LVU126
 109:Core/Src/clean_main.c **** 	while(button() == 1);
 541              		.loc 1 109 6 is_stmt 0 view .LVU127
 542 003c B4F90050 		ldrsh	r5, [r4]
 543              	.LVL42:
 110:Core/Src/clean_main.c **** 	stan_enc = 0;
 544              		.loc 1 110 2 is_stmt 1 view .LVU128
 545              	.L42:
 110:Core/Src/clean_main.c **** 	stan_enc = 0;
 546              		.loc 1 110 17 discriminator 1 view .LVU129
 110:Core/Src/clean_main.c **** 	stan_enc = 0;
 547              		.loc 1 110 8 is_stmt 0 discriminator 1 view .LVU130
 548 0040 FFF7FEFF 		bl	button
 549              	.LVL43:
 110:Core/Src/clean_main.c **** 	stan_enc = 0;
 550              		.loc 1 110 17 discriminator 1 view .LVU131
 551 0044 0028     		cmp	r0, #0
 552 0046 FBD1     		bne	.L42
 111:Core/Src/clean_main.c **** 	while(button() == 0){
 553              		.loc 1 111 2 is_stmt 1 view .LVU132
 113:Core/Src/clean_main.c **** 		dprint("Number of DAC:%1d",stan_enc);
 554              		.loc 1 113 3 is_stmt 0 view .LVU133
 555 0048 254E     		ldr	r6, .L53
 114:Core/Src/clean_main.c **** 		HAL_Delay(50);
 556              		.loc 1 114 3 view .LVU134
 557 004a 274F     		ldr	r7, .L53+8
 111:Core/Src/clean_main.c **** 	while(button() == 0){
 558              		.loc 1 111 11 view .LVU135
 559 004c 2080     		strh	r0, [r4]	@ movhi
 112:Core/Src/clean_main.c **** 		UpdateEnc(0, 3, &stan_enc, false);
 560              		.loc 1 112 2 is_stmt 1 view .LVU136
 112:Core/Src/clean_main.c **** 		UpdateEnc(0, 3, &stan_enc, false);
 561              		.loc 1 112 7 is_stmt 0 view .LVU137
 562 004e 09E0     		b	.L43
 563              	.L44:
 113:Core/Src/clean_main.c **** 		dprint("Number of DAC:%1d",stan_enc);
 564              		.loc 1 113 3 view .LVU138
 565 0050 FFF7FEFF 		bl	UpdateEnc
 566              	.LVL44:
 114:Core/Src/clean_main.c **** 		HAL_Delay(50);
 567              		.loc 1 114 3 is_stmt 1 view .LVU139
 568 0054 3846     		mov	r0, r7
 569 0056 B4F90010 		ldrsh	r1, [r4]
 570 005a FFF7FEFF 		bl	dprint
 571              	.LVL45:
 115:Core/Src/clean_main.c **** 	}
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s 			page 16


 572              		.loc 1 115 3 view .LVU140
 573 005e 3220     		movs	r0, #50
 574 0060 FFF7FEFF 		bl	HAL_Delay
 575              	.LVL46:
 576              	.L43:
 112:Core/Src/clean_main.c **** 		UpdateEnc(0, 3, &stan_enc, false);
 577              		.loc 1 112 17 view .LVU141
 112:Core/Src/clean_main.c **** 		UpdateEnc(0, 3, &stan_enc, false);
 578              		.loc 1 112 8 is_stmt 0 view .LVU142
 579 0064 FFF7FEFF 		bl	button
 580              	.LVL47:
 113:Core/Src/clean_main.c **** 		dprint("Number of DAC:%1d",stan_enc);
 581              		.loc 1 113 3 is_stmt 1 view .LVU143
 582 0068 0321     		movs	r1, #3
 112:Core/Src/clean_main.c **** 		UpdateEnc(0, 3, &stan_enc, false);
 583              		.loc 1 112 8 is_stmt 0 view .LVU144
 584 006a 0346     		mov	r3, r0
 113:Core/Src/clean_main.c **** 		dprint("Number of DAC:%1d",stan_enc);
 585              		.loc 1 113 3 view .LVU145
 586 006c 3246     		mov	r2, r6
 112:Core/Src/clean_main.c **** 		UpdateEnc(0, 3, &stan_enc, false);
 587              		.loc 1 112 17 discriminator 1 view .LVU146
 588 006e 0028     		cmp	r0, #0
 589 0070 EED0     		beq	.L44
 117:Core/Src/clean_main.c **** 	while(button() == 1);
 590              		.loc 1 117 2 is_stmt 1 view .LVU147
 117:Core/Src/clean_main.c **** 	while(button() == 1);
 591              		.loc 1 117 6 is_stmt 0 view .LVU148
 592 0072 B4F90080 		ldrsh	r8, [r4]
 593              	.LVL48:
 118:Core/Src/clean_main.c **** 	stan_enc = 0;
 594              		.loc 1 118 2 is_stmt 1 view .LVU149
 595              	.L45:
 118:Core/Src/clean_main.c **** 	stan_enc = 0;
 596              		.loc 1 118 17 discriminator 1 view .LVU150
 118:Core/Src/clean_main.c **** 	stan_enc = 0;
 597              		.loc 1 118 8 is_stmt 0 discriminator 1 view .LVU151
 598 0076 FFF7FEFF 		bl	button
 599              	.LVL49:
 118:Core/Src/clean_main.c **** 	stan_enc = 0;
 600              		.loc 1 118 17 discriminator 1 view .LVU152
 601 007a 0028     		cmp	r0, #0
 602 007c FBD1     		bne	.L45
 119:Core/Src/clean_main.c **** 	HAL_GPIO_WritePin(EN_TUBE_GPIO_Port,EN_TUBE_Pin,1);
 603              		.loc 1 119 2 is_stmt 1 view .LVU153
 119:Core/Src/clean_main.c **** 	HAL_GPIO_WritePin(EN_TUBE_GPIO_Port,EN_TUBE_Pin,1);
 604              		.loc 1 119 11 is_stmt 0 view .LVU154
 605 007e 2080     		strh	r0, [r4]	@ movhi
 120:Core/Src/clean_main.c **** 	while(button() == 0){
 606              		.loc 1 120 2 is_stmt 1 view .LVU155
 607 0080 00F18040 		add	r0, r0, #1073741824
 608 0084 0122     		movs	r2, #1
 609 0086 00F50130 		add	r0, r0, #132096
 610 008a 4FF40071 		mov	r1, #512
 611 008e FFF7FEFF 		bl	HAL_GPIO_WritePin
 612              	.LVL50:
 121:Core/Src/clean_main.c **** 		UpdateEnc(0, 255, &stan_enc, true);
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s 			page 17


 613              		.loc 1 121 2 view .LVU156
 122:Core/Src/clean_main.c **** 		dprint("DAC output:%3d",stan_enc);
 614              		.loc 1 122 3 is_stmt 0 view .LVU157
 615 0092 134E     		ldr	r6, .L53
 123:Core/Src/clean_main.c **** 		dac_write(channel,stan_enc,dac_number);
 616              		.loc 1 123 3 view .LVU158
 617 0094 154F     		ldr	r7, .L53+12
 121:Core/Src/clean_main.c **** 		UpdateEnc(0, 255, &stan_enc, true);
 618              		.loc 1 121 7 view .LVU159
 619 0096 0FE0     		b	.L46
 620              	.L47:
 122:Core/Src/clean_main.c **** 		dprint("DAC output:%3d",stan_enc);
 621              		.loc 1 122 3 view .LVU160
 622 0098 FFF7FEFF 		bl	UpdateEnc
 623              	.LVL51:
 123:Core/Src/clean_main.c **** 		dac_write(channel,stan_enc,dac_number);
 624              		.loc 1 123 3 is_stmt 1 view .LVU161
 625 009c B4F90010 		ldrsh	r1, [r4]
 626 00a0 3846     		mov	r0, r7
 627 00a2 FFF7FEFF 		bl	dprint
 628              	.LVL52:
 124:Core/Src/clean_main.c **** 		HAL_Delay(50);	
 629              		.loc 1 124 3 view .LVU162
 630 00a6 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 631 00a8 5FFA88F2 		uxtb	r2, r8
 632 00ac E8B2     		uxtb	r0, r5
 633 00ae FFF7FEFF 		bl	dac_write
 634              	.LVL53:
 125:Core/Src/clean_main.c **** 	}
 635              		.loc 1 125 3 view .LVU163
 636 00b2 3220     		movs	r0, #50
 637 00b4 FFF7FEFF 		bl	HAL_Delay
 638              	.LVL54:
 639              	.L46:
 121:Core/Src/clean_main.c **** 		UpdateEnc(0, 255, &stan_enc, true);
 640              		.loc 1 121 17 view .LVU164
 121:Core/Src/clean_main.c **** 		UpdateEnc(0, 255, &stan_enc, true);
 641              		.loc 1 121 8 is_stmt 0 view .LVU165
 642 00b8 FFF7FEFF 		bl	button
 643              	.LVL55:
 122:Core/Src/clean_main.c **** 		dprint("DAC output:%3d",stan_enc);
 644              		.loc 1 122 3 is_stmt 1 view .LVU166
 645 00bc 0123     		movs	r3, #1
 646 00be 3246     		mov	r2, r6
 647 00c0 FF21     		movs	r1, #255
 121:Core/Src/clean_main.c **** 		UpdateEnc(0, 255, &stan_enc, true);
 648              		.loc 1 121 17 is_stmt 0 discriminator 1 view .LVU167
 649 00c2 0028     		cmp	r0, #0
 650 00c4 E8D0     		beq	.L47
 651              	.L48:
 127:Core/Src/clean_main.c **** 	HAL_GPIO_WritePin(EN_TUBE_GPIO_Port,EN_TUBE_Pin,0);
 652              		.loc 1 127 17 is_stmt 1 discriminator 1 view .LVU168
 127:Core/Src/clean_main.c **** 	HAL_GPIO_WritePin(EN_TUBE_GPIO_Port,EN_TUBE_Pin,0);
 653              		.loc 1 127 8 is_stmt 0 discriminator 1 view .LVU169
 654 00c6 FFF7FEFF 		bl	button
 655              	.LVL56:
 127:Core/Src/clean_main.c **** 	HAL_GPIO_WritePin(EN_TUBE_GPIO_Port,EN_TUBE_Pin,0);
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s 			page 18


 656              		.loc 1 127 17 discriminator 1 view .LVU170
 657 00ca 0246     		mov	r2, r0
 658 00cc 0028     		cmp	r0, #0
 659 00ce FAD1     		bne	.L48
 128:Core/Src/clean_main.c **** 
 660              		.loc 1 128 2 is_stmt 1 view .LVU171
 130:Core/Src/clean_main.c **** 
 661              		.loc 1 130 1 is_stmt 0 view .LVU172
 662 00d0 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 663              		.cfi_restore 14
 664              		.cfi_restore 8
 665              		.cfi_restore 7
 666              		.cfi_restore 6
 667              		.cfi_restore 5
 668              		.cfi_restore 4
 669              		.cfi_def_cfa_offset 0
 670              	.LVL57:
 128:Core/Src/clean_main.c **** 
 671              		.loc 1 128 2 view .LVU173
 672 00d4 0648     		ldr	r0, .L53+16
 673 00d6 4FF40071 		mov	r1, #512
 674 00da FFF7FEBF 		b	HAL_GPIO_WritePin
 675              	.LVL58:
 676              	.L54:
 677 00de 00BF     		.align	2
 678              	.L53:
 679 00e0 00000000 		.word	stan_enc
 680 00e4 00000000 		.word	.LC11
 681 00e8 10000000 		.word	.LC12
 682 00ec 24000000 		.word	.LC13
 683 00f0 00040240 		.word	1073873920
 684              		.cfi_endproc
 685              	.LFE253:
 687              		.section	.text.switchTube,"ax",%progbits
 688              		.align	1
 689              		.p2align 2,,3
 690              		.global	switchTube
 691              		.syntax unified
 692              		.thumb
 693              		.thumb_func
 695              	switchTube:
 696              	.LVL59:
 697              	.LFB251:
  82:Core/Src/clean_main.c **** 	HAL_GPIO_WritePin(EN_TUBE_GPIO_Port,EN_TUBE_Pin,state);
 698              		.loc 1 82 28 is_stmt 1 view -0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 0
 701              		@ frame_needed = 0, uses_anonymous_args = 0
 702              		@ link register save eliminated.
  83:Core/Src/clean_main.c **** }
 703              		.loc 1 83 2 view .LVU175
  82:Core/Src/clean_main.c **** 	HAL_GPIO_WritePin(EN_TUBE_GPIO_Port,EN_TUBE_Pin,state);
 704              		.loc 1 82 28 is_stmt 0 view .LVU176
 705 0000 0246     		mov	r2, r0
  83:Core/Src/clean_main.c **** }
 706              		.loc 1 83 2 view .LVU177
 707 0002 4FF40071 		mov	r1, #512
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s 			page 19


 708 0006 0148     		ldr	r0, .L56
 709              	.LVL60:
  83:Core/Src/clean_main.c **** }
 710              		.loc 1 83 2 view .LVU178
 711 0008 FFF7FEBF 		b	HAL_GPIO_WritePin
 712              	.LVL61:
 713              	.L57:
  83:Core/Src/clean_main.c **** }
 714              		.loc 1 83 2 view .LVU179
 715              		.align	2
 716              	.L56:
 717 000c 00040240 		.word	1073873920
 718              		.cfi_endproc
 719              	.LFE251:
 721              		.section	.rodata.menu.str1.4,"aMS",%progbits,1
 722              		.align	2
 723              	.LC15:
 724 0000 25642E25 		.ascii	"%d.%s\000"
 724      7300
 725              		.section	.text.menu,"ax",%progbits
 726              		.align	1
 727              		.p2align 2,,3
 728              		.global	menu
 729              		.syntax unified
 730              		.thumb
 731              		.thumb_func
 733              	menu:
 734              	.LFB255:
 140:Core/Src/clean_main.c **** 
 141:Core/Src/clean_main.c **** void menu(){
 735              		.loc 1 141 12 is_stmt 1 view -0
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 48
 738              		@ frame_needed = 0, uses_anonymous_args = 0
 142:Core/Src/clean_main.c **** 
 143:Core/Src/clean_main.c **** 	struct menu_option options[] = {
 739              		.loc 1 143 2 view .LVU181
 141:Core/Src/clean_main.c **** 
 740              		.loc 1 141 12 is_stmt 0 view .LVU182
 741 0000 10B5     		push	{r4, lr}
 742              		.cfi_def_cfa_offset 8
 743              		.cfi_offset 4, -8
 744              		.cfi_offset 14, -4
 745              		.loc 1 143 21 view .LVU183
 746 0002 1A4C     		ldr	r4, .L62
 747 0004 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 141:Core/Src/clean_main.c **** 
 748              		.loc 1 141 12 view .LVU184
 749 0006 8CB0     		sub	sp, sp, #48
 750              		.cfi_def_cfa_offset 56
 751              		.loc 1 143 21 view .LVU185
 752 0008 0DF1080C 		add	ip, sp, #8
 753 000c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 754 0010 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 755 0012 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 756 0016 94E80300 		ldm	r4, {r0, r1}
 144:Core/Src/clean_main.c **** 			{"Display bar",line},
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s 			page 20


 145:Core/Src/clean_main.c **** 			{"Set bar character",change_char},
 146:Core/Src/clean_main.c **** 			{"Test tube power",testOutput},
 147:Core/Src/clean_main.c **** 			{"Test DAC", testDAC},
 148:Core/Src/clean_main.c **** 			{"Test filter output",TestFilterOut}
 149:Core/Src/clean_main.c **** 	};
 150:Core/Src/clean_main.c **** 
 151:Core/Src/clean_main.c **** 	int16_t position = 0;
 757              		.loc 1 151 10 view .LVU186
 758 001a 0023     		movs	r3, #0
 143:Core/Src/clean_main.c **** 			{"Display bar",line},
 759              		.loc 1 143 21 view .LVU187
 760 001c 8CE80300 		stm	ip, {r0, r1}
 761              		.loc 1 151 2 is_stmt 1 view .LVU188
 152:Core/Src/clean_main.c **** 	uint8_t options_count = sizeof(options)/sizeof(options[0]);
 762              		.loc 1 152 2 view .LVU189
 763              	.LVL62:
 153:Core/Src/clean_main.c **** 
 154:Core/Src/clean_main.c **** 	while(button()==0){
 764              		.loc 1 154 2 view .LVU190
 155:Core/Src/clean_main.c **** 		UpdateEnc(0,options_count-1, &position, false);
 156:Core/Src/clean_main.c **** 		dprint("%d.%s",position+1, options[position].prompt);
 765              		.loc 1 156 3 is_stmt 0 view .LVU191
 766 0020 134C     		ldr	r4, .L62+4
 151:Core/Src/clean_main.c **** 	uint8_t options_count = sizeof(options)/sizeof(options[0]);
 767              		.loc 1 151 10 view .LVU192
 768 0022 ADF80630 		strh	r3, [sp, #6]	@ movhi
 154:Core/Src/clean_main.c **** 		UpdateEnc(0,options_count-1, &position, false);
 769              		.loc 1 154 7 view .LVU193
 770 0026 0FE0     		b	.L59
 771              	.L60:
 155:Core/Src/clean_main.c **** 		UpdateEnc(0,options_count-1, &position, false);
 772              		.loc 1 155 3 view .LVU194
 773 0028 FFF7FEFF 		bl	UpdateEnc
 774              	.LVL63:
 775              		.loc 1 156 3 is_stmt 1 view .LVU195
 776 002c BDF90610 		ldrsh	r1, [sp, #6]
 777 0030 0CAB     		add	r3, sp, #48
 778 0032 03EBC103 		add	r3, r3, r1, lsl #3
 779 0036 2046     		mov	r0, r4
 780 0038 53F8282C 		ldr	r2, [r3, #-40]
 781 003c 0131     		adds	r1, r1, #1
 782 003e FFF7FEFF 		bl	dprint
 783              	.LVL64:
 157:Core/Src/clean_main.c **** 		HAL_Delay(50);
 784              		.loc 1 157 3 view .LVU196
 785 0042 3220     		movs	r0, #50
 786 0044 FFF7FEFF 		bl	HAL_Delay
 787              	.LVL65:
 788              	.L59:
 154:Core/Src/clean_main.c **** 		UpdateEnc(0,options_count-1, &position, false);
 789              		.loc 1 154 16 view .LVU197
 154:Core/Src/clean_main.c **** 		UpdateEnc(0,options_count-1, &position, false);
 790              		.loc 1 154 8 is_stmt 0 view .LVU198
 791 0048 FFF7FEFF 		bl	button
 792              	.LVL66:
 155:Core/Src/clean_main.c **** 		dprint("%d.%s",position+1, options[position].prompt);
 793              		.loc 1 155 3 is_stmt 1 view .LVU199
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s 			page 21


 794 004c 0421     		movs	r1, #4
 154:Core/Src/clean_main.c **** 		UpdateEnc(0,options_count-1, &position, false);
 795              		.loc 1 154 8 is_stmt 0 view .LVU200
 796 004e 0346     		mov	r3, r0
 155:Core/Src/clean_main.c **** 		dprint("%d.%s",position+1, options[position].prompt);
 797              		.loc 1 155 3 view .LVU201
 798 0050 0DF10602 		add	r2, sp, #6
 154:Core/Src/clean_main.c **** 		UpdateEnc(0,options_count-1, &position, false);
 799              		.loc 1 154 16 discriminator 1 view .LVU202
 800 0054 0028     		cmp	r0, #0
 801 0056 E7D0     		beq	.L60
 158:Core/Src/clean_main.c **** 	}
 159:Core/Src/clean_main.c **** 	options[position].func();
 802              		.loc 1 159 2 is_stmt 1 view .LVU203
 803              		.loc 1 159 19 is_stmt 0 view .LVU204
 804 0058 BDF90630 		ldrsh	r3, [sp, #6]
 805 005c 0CAA     		add	r2, sp, #48
 806 005e 02EBC303 		add	r3, r2, r3, lsl #3
 807              		.loc 1 159 2 view .LVU205
 808 0062 53F8243C 		ldr	r3, [r3, #-36]
 809 0066 9847     		blx	r3
 810              	.LVL67:
 160:Core/Src/clean_main.c **** }
 811              		.loc 1 160 1 view .LVU206
 812 0068 0CB0     		add	sp, sp, #48
 813              		.cfi_def_cfa_offset 8
 814              		@ sp needed
 815 006a 10BD     		pop	{r4, pc}
 816              	.L63:
 817              		.align	2
 818              	.L62:
 819 006c 00000000 		.word	.LANCHOR0
 820 0070 00000000 		.word	.LC15
 821              		.cfi_endproc
 822              	.LFE255:
 824              		.global	__aeabi_i2d
 825              		.global	__aeabi_dmul
 826              		.global	__aeabi_d2f
 827              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 828              		.align	1
 829              		.p2align 2,,3
 830              		.global	HAL_ADC_ConvCpltCallback
 831              		.syntax unified
 832              		.thumb
 833              		.thumb_func
 835              	HAL_ADC_ConvCpltCallback:
 836              	.LVL68:
 837              	.LFB256:
 161:Core/Src/clean_main.c **** 
 162:Core/Src/clean_main.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc) {
 838              		.loc 1 162 56 is_stmt 1 view -0
 839              		.cfi_startproc
 840              		@ args = 0, pretend = 0, frame = 8
 841              		@ frame_needed = 0, uses_anonymous_args = 0
 163:Core/Src/clean_main.c **** 	for(uint16_t i=0;i<2048;i++){
 842              		.loc 1 163 2 view .LVU208
 843              	.LBB14:
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s 			page 22


 844              		.loc 1 163 6 view .LVU209
 845              		.loc 1 163 20 discriminator 1 view .LVU210
 846              	.LBE14:
 162:Core/Src/clean_main.c **** 	for(uint16_t i=0;i<2048;i++){
 847              		.loc 1 162 56 is_stmt 0 view .LVU211
 848 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 849              		.cfi_def_cfa_offset 24
 850              		.cfi_offset 4, -24
 851              		.cfi_offset 5, -20
 852              		.cfi_offset 6, -16
 853              		.cfi_offset 7, -12
 854              		.cfi_offset 8, -8
 855              		.cfi_offset 14, -4
 856 0004 2DED028B 		vpush.64	{d8}
 857              		.cfi_def_cfa_offset 32
 858              		.cfi_offset 80, -32
 859              		.cfi_offset 81, -28
 860 0008 374C     		ldr	r4, .L70+16
 861 000a 384D     		ldr	r5, .L70+20
 862              	.LBB15:
 164:Core/Src/clean_main.c **** 		filterIn[i]=(samples[i]-2048)*(3.3/4096);
 863              		.loc 1 164 32 view .LVU212
 864 000c 32A7     		adr	r7, .L70
 865 000e D7E90067 		ldrd	r6, [r7]
 866              	.LBE15:
 162:Core/Src/clean_main.c **** 	for(uint16_t i=0;i<2048;i++){
 867              		.loc 1 162 56 view .LVU213
 868 0012 82B0     		sub	sp, sp, #8
 869              		.cfi_def_cfa_offset 40
 870 0014 04F58058 		add	r8, r4, #4096
 871              	.LVL69:
 872              	.L65:
 873              	.LBB16:
 874              		.loc 1 164 3 is_stmt 1 view .LVU214
 875              		.loc 1 164 23 is_stmt 0 view .LVU215
 876 0018 34F8020F 		ldrh	r0, [r4, #2]!
 877              	.LVL70:
 878              		.loc 1 164 32 view .LVU216
 879 001c A0F50060 		sub	r0, r0, #2048
 880 0020 FFF7FEFF 		bl	__aeabi_i2d
 881              	.LVL71:
 882 0024 3246     		mov	r2, r6
 883 0026 3B46     		mov	r3, r7
 884 0028 FFF7FEFF 		bl	__aeabi_dmul
 885              	.LVL72:
 886 002c FFF7FEFF 		bl	__aeabi_d2f
 887              	.LVL73:
 163:Core/Src/clean_main.c **** 	for(uint16_t i=0;i<2048;i++){
 888              		.loc 1 163 20 discriminator 1 view .LVU217
 889 0030 A045     		cmp	r8, r4
 890              		.loc 1 164 32 view .LVU218
 891 0032 45F8040B 		str	r0, [r5], #4	@ float
 163:Core/Src/clean_main.c **** 	for(uint16_t i=0;i<2048;i++){
 892              		.loc 1 163 27 is_stmt 1 discriminator 3 view .LVU219
 893              	.LVL74:
 163:Core/Src/clean_main.c **** 	for(uint16_t i=0;i<2048;i++){
 894              		.loc 1 163 20 discriminator 1 view .LVU220
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s 			page 23


 895 0036 EFD1     		bne	.L65
 896              	.LBE16:
 165:Core/Src/clean_main.c **** 	}
 166:Core/Src/clean_main.c **** 
 167:Core/Src/clean_main.c **** 	TIM1 -> CNT = 0;
 897              		.loc 1 167 2 view .LVU221
 898              		.loc 1 167 14 is_stmt 0 view .LVU222
 899 0038 2D4B     		ldr	r3, .L70+24
 168:Core/Src/clean_main.c **** 	HAL_TIM_Base_Start(&htim1);
 169:Core/Src/clean_main.c **** 
 170:Core/Src/clean_main.c **** 	arm_biquad_cascade_df2T_f32(&filter1,filterIn,filterOut,2048);
 900              		.loc 1 170 2 view .LVU223
 901 003a 2E4C     		ldr	r4, .L70+28
 902              	.LVL75:
 168:Core/Src/clean_main.c **** 	HAL_TIM_Base_Start(&htim1);
 903              		.loc 1 168 2 view .LVU224
 904 003c 2E48     		ldr	r0, .L70+32
 167:Core/Src/clean_main.c **** 	HAL_TIM_Base_Start(&htim1);
 905              		.loc 1 167 14 view .LVU225
 906 003e 0022     		movs	r2, #0
 907 0040 5A62     		str	r2, [r3, #36]
 168:Core/Src/clean_main.c **** 	HAL_TIM_Base_Start(&htim1);
 908              		.loc 1 168 2 is_stmt 1 view .LVU226
 909 0042 FFF7FEFF 		bl	HAL_TIM_Base_Start
 910              	.LVL76:
 911              		.loc 1 170 2 view .LVU227
 912 0046 4FF40063 		mov	r3, #2048
 913 004a 2246     		mov	r2, r4
 914 004c 2749     		ldr	r1, .L70+20
 915 004e 2B48     		ldr	r0, .L70+36
 916 0050 FFF7FEFF 		bl	arm_biquad_cascade_df2T_f32
 917              	.LVL77:
 171:Core/Src/clean_main.c **** 	float32_t maxValueInt = filterOut[0]; 
 918              		.loc 1 171 2 view .LVU228
 919              		.loc 1 171 12 is_stmt 0 view .LVU229
 920 0054 2346     		mov	r3, r4
 921 0056 F3EC017A 		vldmia.32	r3!, {s15}
 922              	.LVL78:
 172:Core/Src/clean_main.c **** 	for(uint16_t i=1;i<2048;i++){
 923              		.loc 1 172 2 is_stmt 1 view .LVU230
 924              	.LBB17:
 925              		.loc 1 172 6 view .LVU231
 926              		.loc 1 172 20 discriminator 1 view .LVU232
 927 005a 04F50052 		add	r2, r4, #8192
 928              	.LVL79:
 929              	.L66:
 173:Core/Src/clean_main.c **** 		if(filterOut[i]>maxValueInt) maxValueInt = filterOut[i];
 930              		.loc 1 173 3 view .LVU233
 931              		.loc 1 173 15 is_stmt 0 view .LVU234
 932 005e B3EC017A 		vldmia.32	r3!, {s14}
 933              	.LVL80:
 934              		.loc 1 173 5 view .LVU235
 935 0062 F4EEC77A 		vcmpe.f32	s15, s14
 936 0066 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 937 006a B8BF     		it	lt
 938 006c F0EE477A 		vmovlt.f32	s15, s14
 939              	.LVL81:
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s 			page 24


 172:Core/Src/clean_main.c **** 	for(uint16_t i=1;i<2048;i++){
 940              		.loc 1 172 27 is_stmt 1 discriminator 2 view .LVU236
 172:Core/Src/clean_main.c **** 	for(uint16_t i=1;i<2048;i++){
 941              		.loc 1 172 20 discriminator 1 view .LVU237
 942 0070 9A42     		cmp	r2, r3
 943 0072 F4D1     		bne	.L66
 944              	.LBE17:
 174:Core/Src/clean_main.c **** 	}
 175:Core/Src/clean_main.c **** 	maxValueInt=maxValueInt*0.02;
 945              		.loc 1 175 2 view .LVU238
 946              	.LVL82:
 176:Core/Src/clean_main.c **** 	if(maxValueInt<0) maxValueInt=0;
 947              		.loc 1 176 2 view .LVU239
 175:Core/Src/clean_main.c **** 	if(maxValueInt<0) maxValueInt=0;
 948              		.loc 1 175 25 is_stmt 0 view .LVU240
 949 0074 17EE900A 		vmov	r0, s15
 950 0078 FFF7FEFF 		bl	__aeabi_f2d
 951              	.LVL83:
 175:Core/Src/clean_main.c **** 	if(maxValueInt<0) maxValueInt=0;
 952              		.loc 1 175 25 view .LVU241
 953 007c 18A3     		adr	r3, .L70+8
 954 007e D3E90023 		ldrd	r2, [r3]
 955 0082 FFF7FEFF 		bl	__aeabi_dmul
 956              	.LVL84:
 175:Core/Src/clean_main.c **** 	if(maxValueInt<0) maxValueInt=0;
 957              		.loc 1 175 13 view .LVU242
 958 0086 FFF7FEFF 		bl	__aeabi_d2f
 959              	.LVL85:
 960              		.loc 1 176 4 view .LVU243
 961 008a DFED1D7A 		vldr.32	s15, .L70+40
 175:Core/Src/clean_main.c **** 	if(maxValueInt<0) maxValueInt=0;
 962              		.loc 1 175 13 view .LVU244
 963 008e 08EE100A 		vmov	s16, r0
 964              		.loc 1 176 4 view .LVU245
 965 0092 B4EEE78A 		vcmpe.f32	s16, s15
 966 0096 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 967 009a B8BF     		it	lt
 968 009c B0EE678A 		vmovlt.f32	s16, s15
 969              	.LVL86:
 177:Core/Src/clean_main.c **** 	//maxValueInt = -20*log10f(1.6/maxValueInt);
 178:Core/Src/clean_main.c **** 	dac_write(0,(uint8_t)(maxValueInt),0);
 970              		.loc 1 178 2 is_stmt 1 view .LVU246
 971 00a0 FCEEC87A 		vcvt.u32.f32	s15, s16
 972 00a4 0022     		movs	r2, #0
 973 00a6 CDED017A 		vstr.32	s15, [sp, #4]	@ int
 974 00aa 9DF80410 		ldrb	r1, [sp, #4]	@ zero_extendqisi2
 975 00ae 1046     		mov	r0, r2
 976 00b0 FFF7FEFF 		bl	dac_write
 977              	.LVL87:
 179:Core/Src/clean_main.c **** 
 180:Core/Src/clean_main.c **** 	HAL_TIM_Base_Stop(&htim1);
 978              		.loc 1 180 2 view .LVU247
 979 00b4 1048     		ldr	r0, .L70+32
 980 00b6 FFF7FEFF 		bl	HAL_TIM_Base_Stop
 981              	.LVL88:
 181:Core/Src/clean_main.c **** 	measured_us = TIM1 -> CNT;
 982              		.loc 1 181 2 view .LVU248
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s 			page 25


 983              		.loc 1 181 21 is_stmt 0 view .LVU249
 984 00ba 0D49     		ldr	r1, .L70+24
 985              		.loc 1 181 14 view .LVU250
 986 00bc 114A     		ldr	r2, .L70+44
 987              		.loc 1 181 21 view .LVU251
 988 00be 496A     		ldr	r1, [r1, #36]
 182:Core/Src/clean_main.c **** 	maxValue = maxValueInt;
 989              		.loc 1 182 11 view .LVU252
 990 00c0 114B     		ldr	r3, .L70+48
 181:Core/Src/clean_main.c **** 	measured_us = TIM1 -> CNT;
 991              		.loc 1 181 14 view .LVU253
 992 00c2 1160     		str	r1, [r2]
 993              		.loc 1 182 2 is_stmt 1 view .LVU254
 994              		.loc 1 182 11 is_stmt 0 view .LVU255
 995 00c4 83ED008A 		vstr.32	s16, [r3]
 183:Core/Src/clean_main.c **** }
 996              		.loc 1 183 1 view .LVU256
 997 00c8 02B0     		add	sp, sp, #8
 998              		.cfi_def_cfa_offset 32
 999              		@ sp needed
 1000 00ca BDEC028B 		vldm	sp!, {d8}
 1001              		.cfi_restore 80
 1002              		.cfi_restore 81
 1003              		.cfi_def_cfa_offset 24
 1004              	.LVL89:
 1005              		.loc 1 183 1 view .LVU257
 1006 00ce BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1007              	.L71:
 1008 00d2 00BFAFF3 		.align	3
 1008      0080
 1009              	.L70:
 1010 00d8 66666666 		.word	1717986918
 1011 00dc 66664A3F 		.word	1061840486
 1012 00e0 7B14AE47 		.word	1202590843
 1013 00e4 E17A943F 		.word	1066695393
 1014 00e8 FEFFFFFF 		.word	samples-2
 1015 00ec 00000000 		.word	filterIn
 1016 00f0 00000140 		.word	1073807360
 1017 00f4 00000000 		.word	filterOut
 1018 00f8 00000000 		.word	htim1
 1019 00fc 00000000 		.word	filter1
 1020 0100 00000000 		.word	0
 1021 0104 00000000 		.word	measured_us
 1022 0108 00000000 		.word	maxValue
 1023              		.cfi_endproc
 1024              	.LFE256:
 1026              		.section	.text.clean_main,"ax",%progbits
 1027              		.align	1
 1028              		.p2align 2,,3
 1029              		.global	clean_main
 1030              		.syntax unified
 1031              		.thumb
 1032              		.thumb_func
 1034              	clean_main:
 1035              	.LFB257:
 184:Core/Src/clean_main.c **** 
 185:Core/Src/clean_main.c **** void clean_main(){
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s 			page 26


 1036              		.loc 1 185 18 is_stmt 1 view -0
 1037              		.cfi_startproc
 1038              		@ args = 0, pretend = 0, frame = 0
 1039              		@ frame_needed = 0, uses_anonymous_args = 0
 186:Core/Src/clean_main.c **** 	HAL_TIM_Base_Start(&htim2);
 1040              		.loc 1 186 2 view .LVU259
 185:Core/Src/clean_main.c **** 	HAL_TIM_Base_Start(&htim2);
 1041              		.loc 1 185 18 is_stmt 0 view .LVU260
 1042 0000 38B5     		push	{r3, r4, r5, lr}
 1043              		.cfi_def_cfa_offset 16
 1044              		.cfi_offset 3, -16
 1045              		.cfi_offset 4, -12
 1046              		.cfi_offset 5, -8
 1047              		.cfi_offset 14, -4
 1048              		.loc 1 186 2 view .LVU261
 1049 0002 1148     		ldr	r0, .L78
 1050 0004 FFF7FEFF 		bl	HAL_TIM_Base_Start
 1051              	.LVL90:
 187:Core/Src/clean_main.c **** 	HAL_ADC_Start_DMA(&hadc1, samples, 2048);
 1052              		.loc 1 187 2 is_stmt 1 view .LVU262
 1053 0008 1049     		ldr	r1, .L78+4
 1054 000a 1148     		ldr	r0, .L78+8
 1055 000c 4FF40062 		mov	r2, #2048
 1056 0010 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1057              	.LVL91:
 188:Core/Src/clean_main.c **** 	
 189:Core/Src/clean_main.c **** 	//Set All DACs to 0 !!!
 190:Core/Src/clean_main.c **** 	for(uint8_t i = 0;i<4;i++){
 1058              		.loc 1 190 2 view .LVU263
 1059              	.LBB18:
 1060              		.loc 1 190 6 view .LVU264
 1061              		.loc 1 190 21 discriminator 1 view .LVU265
 1062              		.loc 1 190 14 is_stmt 0 view .LVU266
 1063 0014 0025     		movs	r5, #0
 1064              	.LVL92:
 1065              	.L73:
 1066              	.LBB19:
 191:Core/Src/clean_main.c **** 		for(uint8_t j = 0;j<4;j++) dac_write(i,0,j);
 1067              		.loc 1 191 22 is_stmt 1 discriminator 2 view .LVU267
 1068              	.LBE19:
 1069              	.LBE18:
 185:Core/Src/clean_main.c **** 	HAL_TIM_Base_Start(&htim2);
 1070              		.loc 1 185 18 is_stmt 0 view .LVU268
 1071 0016 0024     		movs	r4, #0
 1072              	.LVL93:
 1073              	.L74:
 1074              	.LBB21:
 1075              	.LBB20:
 1076              		.loc 1 191 30 is_stmt 1 discriminator 3 view .LVU269
 1077 0018 E2B2     		uxtb	r2, r4
 1078 001a 0021     		movs	r1, #0
 1079 001c 2846     		mov	r0, r5
 1080              		.loc 1 191 22 is_stmt 0 discriminator 2 view .LVU270
 1081 001e 0134     		adds	r4, r4, #1
 1082              	.LVL94:
 1083              		.loc 1 191 30 discriminator 3 view .LVU271
 1084 0020 FFF7FEFF 		bl	dac_write
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s 			page 27


 1085              	.LVL95:
 1086              		.loc 1 191 26 is_stmt 1 discriminator 3 view .LVU272
 1087              		.loc 1 191 22 discriminator 2 view .LVU273
 1088 0024 042C     		cmp	r4, #4
 1089 0026 F7D1     		bne	.L74
 1090              	.LBE20:
 190:Core/Src/clean_main.c **** 		for(uint8_t j = 0;j<4;j++) dac_write(i,0,j);
 1091              		.loc 1 190 25 discriminator 2 view .LVU274
 1092 0028 0135     		adds	r5, r5, #1
 1093              	.LVL96:
 190:Core/Src/clean_main.c **** 		for(uint8_t j = 0;j<4;j++) dac_write(i,0,j);
 1094              		.loc 1 190 25 is_stmt 0 discriminator 2 view .LVU275
 1095 002a EDB2     		uxtb	r5, r5
 1096              	.LVL97:
 190:Core/Src/clean_main.c **** 		for(uint8_t j = 0;j<4;j++) dac_write(i,0,j);
 1097              		.loc 1 190 21 is_stmt 1 discriminator 1 view .LVU276
 1098 002c 042D     		cmp	r5, #4
 1099 002e F2D1     		bne	.L73
 1100              	.LBE21:
 192:Core/Src/clean_main.c **** 	}
 193:Core/Src/clean_main.c **** 	
 194:Core/Src/clean_main.c **** 	arm_biquad_cascade_df2T_init_f32(&filter1,1,filterCoefficients,filterState);
 1101              		.loc 1 194 2 view .LVU277
 1102 0030 084B     		ldr	r3, .L78+12
 1103 0032 0948     		ldr	r0, .L78+16
 1104 0034 094A     		ldr	r2, .L78+20
 1105 0036 0121     		movs	r1, #1
 1106 0038 FFF7FEFF 		bl	arm_biquad_cascade_df2T_init_f32
 1107              	.LVL98:
 195:Core/Src/clean_main.c **** 
 196:Core/Src/clean_main.c **** 	HAL_Delay(1000);
 1108              		.loc 1 196 2 view .LVU278
 197:Core/Src/clean_main.c **** }
 1109              		.loc 1 197 1 is_stmt 0 view .LVU279
 1110 003c BDE83840 		pop	{r3, r4, r5, lr}
 1111              		.cfi_restore 14
 1112              		.cfi_restore 5
 1113              		.cfi_restore 4
 1114              		.cfi_restore 3
 1115              		.cfi_def_cfa_offset 0
 1116              	.LVL99:
 196:Core/Src/clean_main.c **** }
 1117              		.loc 1 196 2 view .LVU280
 1118 0040 4FF47A70 		mov	r0, #1000
 1119 0044 FFF7FEBF 		b	HAL_Delay
 1120              	.LVL100:
 1121              	.L79:
 1122              		.align	2
 1123              	.L78:
 1124 0048 00000000 		.word	htim2
 1125 004c 00000000 		.word	samples
 1126 0050 00000000 		.word	hadc1
 1127 0054 00000000 		.word	filterState
 1128 0058 00000000 		.word	filter1
 1129 005c 00000000 		.word	filterCoefficients
 1130              		.cfi_endproc
 1131              	.LFE257:
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s 			page 28


 1133              		.section	.text.clean_loop,"ax",%progbits
 1134              		.align	1
 1135              		.p2align 2,,3
 1136              		.global	clean_loop
 1137              		.syntax unified
 1138              		.thumb
 1139              		.thumb_func
 1141              	clean_loop:
 1142              	.LFB258:
 198:Core/Src/clean_main.c **** 
 199:Core/Src/clean_main.c **** void clean_loop(){
 1143              		.loc 1 199 18 is_stmt 1 view -0
 1144              		.cfi_startproc
 1145              		@ args = 0, pretend = 0, frame = 0
 1146              		@ frame_needed = 0, uses_anonymous_args = 0
 200:Core/Src/clean_main.c **** 	clearDisp();
 1147              		.loc 1 200 2 view .LVU282
 199:Core/Src/clean_main.c **** 	clearDisp();
 1148              		.loc 1 199 18 is_stmt 0 view .LVU283
 1149 0000 08B5     		push	{r3, lr}
 1150              		.cfi_def_cfa_offset 8
 1151              		.cfi_offset 3, -8
 1152              		.cfi_offset 14, -4
 1153              		.loc 1 200 2 view .LVU284
 1154 0002 FFF7FEFF 		bl	clearDisp
 1155              	.LVL101:
 201:Core/Src/clean_main.c **** 	menu();
 1156              		.loc 1 201 2 is_stmt 1 view .LVU285
 202:Core/Src/clean_main.c **** }
 1157              		.loc 1 202 1 is_stmt 0 view .LVU286
 1158 0006 BDE80840 		pop	{r3, lr}
 1159              		.cfi_restore 14
 1160              		.cfi_restore 3
 1161              		.cfi_def_cfa_offset 0
 201:Core/Src/clean_main.c **** 	menu();
 1162              		.loc 1 201 2 view .LVU287
 1163 000a FFF7FEBF 		b	menu
 1164              	.LVL102:
 1165              		.cfi_endproc
 1166              	.LFE258:
 1168 000e 00BF     		.section	.rodata.str1.4,"aMS",%progbits,1
 1169              		.align	2
 1170              	.LC0:
 1171 0000 44697370 		.ascii	"Display bar\000"
 1171      6C617920 
 1171      62617200 
 1172              		.align	2
 1173              	.LC1:
 1174 000c 53657420 		.ascii	"Set bar character\000"
 1174      62617220 
 1174      63686172 
 1174      61637465 
 1174      7200
 1175 001e 0000     		.align	2
 1176              	.LC2:
 1177 0020 54657374 		.ascii	"Test tube power\000"
 1177      20747562 
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s 			page 29


 1177      6520706F 
 1177      77657200 
 1178              		.align	2
 1179              	.LC3:
 1180 0030 54657374 		.ascii	"Test DAC\000"
 1180      20444143 
 1180      00
 1181 0039 000000   		.align	2
 1182              	.LC4:
 1183 003c 54657374 		.ascii	"Test filter output\000"
 1183      2066696C 
 1183      74657220 
 1183      6F757470 
 1183      757400
 1184              		.global	filter1
 1185              		.section	.bss.filter1,"aw",%nobits
 1186              		.align	2
 1189              	filter1:
 1190 0000 00000000 		.space	12
 1190      00000000 
 1190      00000000 
 1191              		.global	filterOut
 1192              		.section	.bss.filterOut,"aw",%nobits
 1193              		.align	2
 1196              	filterOut:
 1197 0000 00000000 		.space	8192
 1197      00000000 
 1197      00000000 
 1197      00000000 
 1197      00000000 
 1198              		.global	filterCoefficients
 1199              		.section	.data.filterCoefficients,"aw"
 1200              		.align	2
 1203              	filterCoefficients:
 1204 0000 0000803F 		.word	1065353216
 1205 0004 00000000 		.word	0
 1206 0008 000080BF 		.word	-1082130432
 1207 000c FFF2F83F 		.word	1073279743
 1208 0010 B2BA75BF 		.word	-1082803534
 1209              		.global	filterState
 1210              		.section	.bss.filterState,"aw",%nobits
 1211              		.align	2
 1214              	filterState:
 1215 0000 00000000 		.space	8
 1215      00000000 
 1216              		.global	measured_us
 1217              		.section	.bss.measured_us,"aw",%nobits
 1218              		.align	2
 1221              	measured_us:
 1222 0000 00000000 		.space	4
 1223              		.global	maxValue
 1224              		.section	.bss.maxValue,"aw",%nobits
 1225              		.align	2
 1228              	maxValue:
 1229 0000 00000000 		.space	4
 1230              		.global	filterIn
 1231              		.section	.bss.filterIn,"aw",%nobits
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s 			page 30


 1232              		.align	2
 1235              	filterIn:
 1236 0000 00000000 		.space	8192
 1236      00000000 
 1236      00000000 
 1236      00000000 
 1236      00000000 
 1237              		.global	samples
 1238              		.section	.bss.samples,"aw",%nobits
 1239              		.align	2
 1242              	samples:
 1243 0000 00000000 		.space	4096
 1243      00000000 
 1243      00000000 
 1243      00000000 
 1243      00000000 
 1244              		.global	pasek
 1245              		.section	.bss.pasek,"aw",%nobits
 1246              		.align	2
 1249              	pasek:
 1250 0000 00000000 		.space	20
 1250      00000000 
 1250      00000000 
 1250      00000000 
 1250      00000000 
 1251              		.global	znak
 1252              		.section	.data.znak,"aw"
 1255              	znak:
 1256 0000 7F       		.byte	127
 1257              		.global	stan_enc
 1258              		.section	.data.stan_enc,"aw"
 1259              		.align	1
 1262              	stan_enc:
 1263 0000 1400     		.short	20
 1264              		.section	.rodata
 1265              		.align	2
 1266              		.set	.LANCHOR0,. + 0
 1267              	.LC14:
 1268 0000 00000000 		.word	.LC0
 1269 0004 00000000 		.word	line
 1270 0008 0C000000 		.word	.LC1
 1271 000c 00000000 		.word	change_char
 1272 0010 20000000 		.word	.LC2
 1273 0014 00000000 		.word	testOutput
 1274 0018 30000000 		.word	.LC3
 1275 001c 00000000 		.word	testDAC
 1276 0020 3C000000 		.word	.LC4
 1277 0024 00000000 		.word	TestFilterOut
 1278              		.text
 1279              	.Letext0:
 1280              		.file 2 "C:/Users/Konrad/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-t
 1281              		.file 3 "C:/Users/Konrad/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-t
 1282              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 1283              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1284              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1285              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1286              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s 			page 31


 1287              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1288              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1289              		.file 11 "Core/Inc/adc.h"
 1290              		.file 12 "Core/Inc/tim.h"
 1291              		.file 13 "Core/Inc/arm_math.h"
 1292              		.file 14 "Core/Inc/dac_driver.h"
 1293              		.file 15 "Core/Inc/enc_disp.h"
 1294              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s 			page 32


DEFINED SYMBOLS
                            *ABS*:00000000 clean_main.c
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:20     .rodata.TestFilterOut.str1.4:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:24     .text.TestFilterOut:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:31     .text.TestFilterOut:00000000 TestFilterOut
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:98     .text.TestFilterOut:00000044 $d
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:1228   .bss.maxValue:00000000 maxValue
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:1221   .bss.measured_us:00000000 measured_us
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:105    .rodata.line.str1.4:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:109    .text.line:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:116    .text.line:00000000 line
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:227    .text.line:00000070 $d
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:1262   .data.stan_enc:00000000 stan_enc
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:1255   .data.znak:00000000 znak
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:1249   .bss.pasek:00000000 pasek
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:237    .rodata.change_char.str1.4:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:241    .text.change_char:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:248    .text.change_char:00000000 change_char
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:324    .text.change_char:00000050 $d
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:331    .rodata.testOutput.str1.4:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:338    .text.testOutput:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:345    .text.testOutput:00000000 testOutput
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:454    .text.testOutput:00000060 $d
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:461    .rodata.testDAC.str1.4:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:471    .text.testDAC:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:478    .text.testDAC:00000000 testDAC
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:679    .text.testDAC:000000e0 $d
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:688    .text.switchTube:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:695    .text.switchTube:00000000 switchTube
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:717    .text.switchTube:0000000c $d
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:722    .rodata.menu.str1.4:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:726    .text.menu:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:733    .text.menu:00000000 menu
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:819    .text.menu:0000006c $d
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:828    .text.HAL_ADC_ConvCpltCallback:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:835    .text.HAL_ADC_ConvCpltCallback:00000000 HAL_ADC_ConvCpltCallback
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:1010   .text.HAL_ADC_ConvCpltCallback:000000d8 $d
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:1242   .bss.samples:00000000 samples
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:1235   .bss.filterIn:00000000 filterIn
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:1196   .bss.filterOut:00000000 filterOut
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:1189   .bss.filter1:00000000 filter1
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:1027   .text.clean_main:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:1034   .text.clean_main:00000000 clean_main
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:1124   .text.clean_main:00000048 $d
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:1214   .bss.filterState:00000000 filterState
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:1203   .data.filterCoefficients:00000000 filterCoefficients
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:1134   .text.clean_loop:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:1141   .text.clean_loop:00000000 clean_loop
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:1169   .rodata.str1.4:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:1186   .bss.filter1:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:1193   .bss.filterOut:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:1200   .data.filterCoefficients:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:1211   .bss.filterState:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:1218   .bss.measured_us:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:1225   .bss.maxValue:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:1232   .bss.filterIn:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:1239   .bss.samples:00000000 $d
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s 			page 33


C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:1246   .bss.pasek:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:1259   .data.stan_enc:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccX1N6rh.s:1265   .rodata:00000000 $d

UNDEFINED SYMBOLS
__aeabi_f2d
button
dprint
HAL_Delay
UpdateEnc
clearDisp
HAL_GPIO_WritePin
dac_write
__aeabi_i2d
__aeabi_dmul
__aeabi_d2f
HAL_TIM_Base_Start
arm_biquad_cascade_df2T_f32
HAL_TIM_Base_Stop
htim1
HAL_ADC_Start_DMA
arm_biquad_cascade_df2T_init_f32
htim2
hadc1
