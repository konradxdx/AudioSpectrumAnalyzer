ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 23, 1
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"clean_main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/clean_main.c"
  18              		.global	__aeabi_f2d
  19              		.section	.rodata.TestFilterOut.str1.4,"aMS",%progbits,1
  20              		.align	2
  21              	.LC8:
  22 0000 46696C74 		.ascii	"Filter: %.3fV CH:%2dtime[us]:%d\000"
  22      65723A20 
  22      252E3366 
  22      56204348 
  22      3A253264 
  23              		.section	.text.TestFilterOut,"ax",%progbits
  24              		.align	1
  25              		.p2align 2,,3
  26              		.global	TestFilterOut
  27              		.syntax unified
  28              		.thumb
  29              		.thumb_func
  31              	TestFilterOut:
  32              	.LFB257:
   1:Core/Src/clean_main.c **** /*
   2:Core/Src/clean_main.c ****  * clean_main.c
   3:Core/Src/clean_main.c ****  *
   4:Core/Src/clean_main.c ****  *  Created on: 15 gru 2022
   5:Core/Src/clean_main.c ****  *      Author: Konrad
   6:Core/Src/clean_main.c ****  */
   7:Core/Src/clean_main.c **** 
   8:Core/Src/clean_main.c **** #define ARM_MATH_CM4
   9:Core/Src/clean_main.c **** #define BLOCK_SIZE 2048
  10:Core/Src/clean_main.c **** #define FILTER_NUMBER 12
  11:Core/Src/clean_main.c **** 
  12:Core/Src/clean_main.c **** #include "main.h"
  13:Core/Src/clean_main.c **** #include "adc.h"
  14:Core/Src/clean_main.c **** #include "spi.h"
  15:Core/Src/clean_main.c **** #include "dma.h"
  16:Core/Src/clean_main.c **** #include "tim.h"
  17:Core/Src/clean_main.c **** #include "usart.h"
  18:Core/Src/clean_main.c **** #include "gpio.h"
  19:Core/Src/clean_main.c **** #include <stdbool.h>
  20:Core/Src/clean_main.c **** #include "arm_math.h"
  21:Core/Src/clean_main.c **** #include "enc_disp.h"
  22:Core/Src/clean_main.c **** #include "dac_driver.h"
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 2


  23:Core/Src/clean_main.c **** 
  24:Core/Src/clean_main.c **** 
  25:Core/Src/clean_main.c **** 
  26:Core/Src/clean_main.c **** 
  27:Core/Src/clean_main.c **** int16_t stan_enc = 20;
  28:Core/Src/clean_main.c **** uint8_t znak = 127;
  29:Core/Src/clean_main.c **** char pasek[20];
  30:Core/Src/clean_main.c **** uint16_t samples[BLOCK_SIZE];
  31:Core/Src/clean_main.c **** float32_t filterIn[BLOCK_SIZE];
  32:Core/Src/clean_main.c **** uint16_t measured_us = 0;
  33:Core/Src/clean_main.c **** 
  34:Core/Src/clean_main.c **** float32_t filterState[FILTER_NUMBER][2];
  35:Core/Src/clean_main.c **** float32_t filterCoefficients[FILTER_NUMBER][5] = {
  36:Core/Src/clean_main.c **** 	{1,0,-1,(float32_t)1.997720464600759804341123526683077216148,(float32_t)-0.99773610391034184274872
  37:Core/Src/clean_main.c **** 	{1,0,-1,(float32_t)1.995487280288827713903287985885981470346,(float32_t)-0.99554783125993084880178
  38:Core/Src/clean_main.c **** 	{1,0,-1,(float32_t)1.992054945031311419256780936848372220993,(float32_t)-0.99223923437842509454043
  39:Core/Src/clean_main.c **** 	{1,0,-1,(float32_t)1.986084374391128060111100239737424999475,(float32_t)-0.98663263224075603563534
  40:Core/Src/clean_main.c **** 	{1,0,-1,(float32_t)1.975250452882447271818477929627988487482,(float32_t)-0.97689608034299202365957
  41:Core/Src/clean_main.c **** 	{1,0,-1,(float32_t)1.954703773791649279445437059621326625347,(float32_t)-0.95974166425528195656369
  42:Core/Src/clean_main.c **** 	{1,0,-1,(float32_t)1.916819923240591805324584129266440868378,(float32_t)-0.93156804255035841055843
  43:Core/Src/clean_main.c **** 	{1,0,-1,(float32_t)1.844779386045683144956797150371130555868,(float32_t)-0.88630245274275831768306
  44:Core/Src/clean_main.c **** 	{1,0,-1,(float32_t)1.684341878847488871429050050210207700729,(float32_t)-0.80727253542627186444491
  45:Core/Src/clean_main.c **** 	{1,0,-1,(float32_t)1.349298830458679487875883751257788389921,(float32_t)-0.68598524389856985195024
  46:Core/Src/clean_main.c **** 	{1,0,-1,(float32_t)0.664827275766936565126741243147989735007,(float32_t)-0.50385547249973716699145
  47:Core/Src/clean_main.c **** 	{1,0,-1,(float32_t)-0.484716934296551105187944585850345902145,(float32_t)-0.2226244899762737095016
  48:Core/Src/clean_main.c **** };
  49:Core/Src/clean_main.c **** float32_t gain[FILTER_NUMBER]={
  50:Core/Src/clean_main.c **** 	(float32_t)0.001131948044828745558731952769448980689 ,
  51:Core/Src/clean_main.c **** 	(float32_t)0.00222608437003468662140903688850812614  ,
  52:Core/Src/clean_main.c **** 	(float32_t)0.003880382810787397218632577278185635805 ,
  53:Core/Src/clean_main.c **** 	(float32_t)0.006683683879622037693479796871542930603 ,
  54:Core/Src/clean_main.c **** 	(float32_t)0.011551959828503766125606944115133956075 ,
  55:Core/Src/clean_main.c **** 	(float32_t)0.02012916787235918825160752021474763751  ,
  56:Core/Src/clean_main.c **** 	(float32_t)0.034215978724820739209633302380098029971 ,
  57:Core/Src/clean_main.c **** 	(float32_t)0.056848773628620730136162819690071046352 ,
  58:Core/Src/clean_main.c **** 	(float32_t)0.096363732286863901244089447573060169816 ,
  59:Core/Src/clean_main.c **** 	(float32_t)0.157007378050714963002576496364781633019 ,
  60:Core/Src/clean_main.c **** 	(float32_t)0.248072263750131360993123053049203008413 ,
  61:Core/Src/clean_main.c **** 	(float32_t)0.388687755011863145249151330062886700034 
  62:Core/Src/clean_main.c **** };
  63:Core/Src/clean_main.c **** float32_t filterOut[FILTER_NUMBER][BLOCK_SIZE];
  64:Core/Src/clean_main.c **** arm_biquad_cascade_df2T_instance_f32 filter[FILTER_NUMBER];
  65:Core/Src/clean_main.c **** float32_t bar_values[FILTER_NUMBER];
  66:Core/Src/clean_main.c **** 
  67:Core/Src/clean_main.c **** typedef struct menu_option{
  68:Core/Src/clean_main.c **** 	char * prompt;
  69:Core/Src/clean_main.c **** 	void (*func)(void);
  70:Core/Src/clean_main.c **** }menu_option;
  71:Core/Src/clean_main.c **** 
  72:Core/Src/clean_main.c **** void initializeFilters(uint8_t numberOfFilters){
  73:Core/Src/clean_main.c **** 	for(uint8_t i=0;i<numberOfFilters;i++){
  74:Core/Src/clean_main.c **** 		arm_biquad_cascade_df2T_init_f32(&filter[i],1,filterCoefficients[i],filterState[i]);
  75:Core/Src/clean_main.c **** 	}
  76:Core/Src/clean_main.c **** }
  77:Core/Src/clean_main.c **** 
  78:Core/Src/clean_main.c **** void processBand(uint8_t bandNumber){
  79:Core/Src/clean_main.c **** 	if(bandNumber>FILTER_NUMBER-1) return;
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 3


  80:Core/Src/clean_main.c **** 	arm_biquad_cascade_df2T_f32(&filter[bandNumber],filterIn,filterOut[bandNumber],BLOCK_SIZE);
  81:Core/Src/clean_main.c **** 	uint16_t max_value = filterOut[bandNumber][0]; 
  82:Core/Src/clean_main.c **** 	for(uint16_t i=1;i<BLOCK_SIZE;i++){
  83:Core/Src/clean_main.c **** 		if(filterOut[bandNumber][i]>max_value) max_value = filterOut[bandNumber][i];
  84:Core/Src/clean_main.c **** 	}
  85:Core/Src/clean_main.c **** 	bar_values[bandNumber] = max_value * gain[bandNumber];
  86:Core/Src/clean_main.c **** }
  87:Core/Src/clean_main.c **** 
  88:Core/Src/clean_main.c **** void line(){
  89:Core/Src/clean_main.c **** 	HAL_Delay(500);
  90:Core/Src/clean_main.c **** 	while (button()==0) {
  91:Core/Src/clean_main.c **** 		UpdateEnc(0, 20, &stan_enc, true);
  92:Core/Src/clean_main.c **** 		for (int i = 0; i < 20; i++) {
  93:Core/Src/clean_main.c **** 			if (i < stan_enc) {
  94:Core/Src/clean_main.c **** 				pasek[i] = znak;
  95:Core/Src/clean_main.c **** 			}
  96:Core/Src/clean_main.c **** 			if (i < 20 && i >= stan_enc) {
  97:Core/Src/clean_main.c **** 				pasek[i] = 'D';
  98:Core/Src/clean_main.c **** 			}
  99:Core/Src/clean_main.c **** 			if (i >= 20)
 100:Core/Src/clean_main.c **** 				pasek[i] = ' ';
 101:Core/Src/clean_main.c **** 		}
 102:Core/Src/clean_main.c **** 
 103:Core/Src/clean_main.c **** 		dprint("%.20s^Status",pasek);
 104:Core/Src/clean_main.c **** 		HAL_Delay(10);
 105:Core/Src/clean_main.c **** 	}
 106:Core/Src/clean_main.c **** 	HAL_Delay(200);
 107:Core/Src/clean_main.c **** 	clearDisp();
 108:Core/Src/clean_main.c **** 	stan_enc = znak;
 109:Core/Src/clean_main.c **** }
 110:Core/Src/clean_main.c **** 
 111:Core/Src/clean_main.c **** void change_char(){
 112:Core/Src/clean_main.c **** 	HAL_Delay(500);
 113:Core/Src/clean_main.c **** 	while (button()==0) {
 114:Core/Src/clean_main.c **** 		znak = stan_enc;
 115:Core/Src/clean_main.c **** 		UpdateEnc(32, 127, &stan_enc, false);
 116:Core/Src/clean_main.c **** 		dprint("Kod: %03d = '%c'", stan_enc, stan_enc);
 117:Core/Src/clean_main.c **** 		HAL_Delay(10);
 118:Core/Src/clean_main.c **** 	}
 119:Core/Src/clean_main.c **** 	clearDisp();
 120:Core/Src/clean_main.c **** 	HAL_Delay(200);
 121:Core/Src/clean_main.c **** }
 122:Core/Src/clean_main.c **** 
 123:Core/Src/clean_main.c **** void switchTube(bool state){
 124:Core/Src/clean_main.c **** 	HAL_GPIO_WritePin(EN_TUBE_GPIO_Port,EN_TUBE_Pin,state);
 125:Core/Src/clean_main.c **** }
 126:Core/Src/clean_main.c **** 
 127:Core/Src/clean_main.c **** void testOutput(void){
 128:Core/Src/clean_main.c **** 	clearDisp();
 129:Core/Src/clean_main.c **** 	while(button() == 1);
 130:Core/Src/clean_main.c **** 	while(button() == 0){
 131:Core/Src/clean_main.c **** 		HAL_Delay(1000);
 132:Core/Src/clean_main.c **** 		switchTube(1);
 133:Core/Src/clean_main.c **** 		dprint("Out:1");
 134:Core/Src/clean_main.c **** 		HAL_Delay(1000);
 135:Core/Src/clean_main.c **** 		switchTube(0);
 136:Core/Src/clean_main.c **** 		dprint("Out:0");
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 4


 137:Core/Src/clean_main.c **** 	}
 138:Core/Src/clean_main.c **** 	while(button() == 1);
 139:Core/Src/clean_main.c **** }
 140:Core/Src/clean_main.c **** 
 141:Core/Src/clean_main.c **** void testDAC(){
 142:Core/Src/clean_main.c **** 	HAL_Delay(500);
 143:Core/Src/clean_main.c **** 	clearDisp();
 144:Core/Src/clean_main.c **** 	stan_enc = 0;
 145:Core/Src/clean_main.c **** 	while(button() == 0){
 146:Core/Src/clean_main.c **** 		UpdateEnc(0, 3, &stan_enc, false);
 147:Core/Src/clean_main.c **** 		dprint("DAC Channel:%1d",stan_enc);
 148:Core/Src/clean_main.c **** 		HAL_Delay(50);
 149:Core/Src/clean_main.c **** 	}
 150:Core/Src/clean_main.c **** 	int channel = stan_enc;
 151:Core/Src/clean_main.c **** 	while(button() == 1);
 152:Core/Src/clean_main.c **** 	stan_enc = 0;
 153:Core/Src/clean_main.c **** 	while(button() == 0){
 154:Core/Src/clean_main.c **** 		UpdateEnc(0, 3, &stan_enc, false);
 155:Core/Src/clean_main.c **** 		dprint("Number of DAC:%1d",stan_enc); 
 156:Core/Src/clean_main.c **** 		HAL_Delay(50);
 157:Core/Src/clean_main.c **** 	}
 158:Core/Src/clean_main.c **** 	int dac_number = stan_enc;
 159:Core/Src/clean_main.c **** 	while(button() == 1);
 160:Core/Src/clean_main.c **** 	stan_enc = 0;
 161:Core/Src/clean_main.c **** 	HAL_GPIO_WritePin(EN_TUBE_GPIO_Port,EN_TUBE_Pin,1);
 162:Core/Src/clean_main.c **** 	while(button() == 0){
 163:Core/Src/clean_main.c **** 		UpdateEnc(0, 255, &stan_enc, true);
 164:Core/Src/clean_main.c **** 		dprint("DAC output:%3d",stan_enc);
 165:Core/Src/clean_main.c **** 		dac_write(channel,stan_enc,dac_number);
 166:Core/Src/clean_main.c **** 		HAL_Delay(50);	
 167:Core/Src/clean_main.c **** 	}
 168:Core/Src/clean_main.c **** 	while(button() == 1);
 169:Core/Src/clean_main.c **** 	HAL_GPIO_WritePin(EN_TUBE_GPIO_Port,EN_TUBE_Pin,0);
 170:Core/Src/clean_main.c **** 
 171:Core/Src/clean_main.c **** }
 172:Core/Src/clean_main.c **** 
 173:Core/Src/clean_main.c **** void testAllDac(){
 174:Core/Src/clean_main.c **** 	dprint("Testing all DACs    sequentially");
 175:Core/Src/clean_main.c **** 	while(button() == 1);
 176:Core/Src/clean_main.c **** 	switchTube(1);
 177:Core/Src/clean_main.c **** 	for(uint8_t i=0;i<12;i++){
 178:Core/Src/clean_main.c **** 		for(uint8_t j=0;j<220;j++){
 179:Core/Src/clean_main.c **** 			setBar(i,j);
 180:Core/Src/clean_main.c **** 			HAL_Delay(5);
 181:Core/Src/clean_main.c **** 			if(button()==1){
 182:Core/Src/clean_main.c **** 				switchTube(0);
 183:Core/Src/clean_main.c **** 				while(button() == 1);
 184:Core/Src/clean_main.c **** 				return;
 185:Core/Src/clean_main.c **** 			} 
 186:Core/Src/clean_main.c **** 		}
 187:Core/Src/clean_main.c **** 		for(uint8_t j=220;j>5;j--){
 188:Core/Src/clean_main.c **** 			setBar(i,j);
 189:Core/Src/clean_main.c **** 			HAL_Delay(5);
 190:Core/Src/clean_main.c **** 			if(button()==1){
 191:Core/Src/clean_main.c **** 				switchTube(0);
 192:Core/Src/clean_main.c **** 				while(button() == 1);
 193:Core/Src/clean_main.c **** 				return;
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 5


 194:Core/Src/clean_main.c **** 			} 
 195:Core/Src/clean_main.c **** 		}
 196:Core/Src/clean_main.c **** 	}
 197:Core/Src/clean_main.c **** 	for(uint8_t i=0;i<12;i++) setBar(i,220);
 198:Core/Src/clean_main.c **** 	while(button()==0);
 199:Core/Src/clean_main.c **** 	switchTube(0);
 200:Core/Src/clean_main.c **** 	while(button() == 1);
 201:Core/Src/clean_main.c **** }
 202:Core/Src/clean_main.c **** 
 203:Core/Src/clean_main.c **** void TestFilterOut(){
  33              		.loc 1 203 21 view -0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 0, uses_anonymous_args = 0
 204:Core/Src/clean_main.c **** 	stan_enc = 0 ;
  37              		.loc 1 204 2 view .LVU1
 203:Core/Src/clean_main.c **** 	stan_enc = 0 ;
  38              		.loc 1 203 21 is_stmt 0 view .LVU2
  39 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  40              		.cfi_def_cfa_offset 24
  41              		.cfi_offset 4, -24
  42              		.cfi_offset 5, -20
  43              		.cfi_offset 6, -16
  44              		.cfi_offset 7, -12
  45              		.cfi_offset 8, -8
  46              		.cfi_offset 14, -4
  47              		.loc 1 204 11 view .LVU3
  48 0004 174E     		ldr	r6, .L10
  49 0006 0023     		movs	r3, #0
 203:Core/Src/clean_main.c **** 	stan_enc = 0 ;
  50              		.loc 1 203 21 view .LVU4
  51 0008 82B0     		sub	sp, sp, #8
  52              		.cfi_def_cfa_offset 32
  53              		.loc 1 204 11 view .LVU5
  54 000a 3380     		strh	r3, [r6]	@ movhi
 205:Core/Src/clean_main.c **** 	while(button() == 1);
  55              		.loc 1 205 2 is_stmt 1 view .LVU6
  56              	.L2:
  57              		.loc 1 205 17 discriminator 1 view .LVU7
  58              		.loc 1 205 8 is_stmt 0 discriminator 1 view .LVU8
  59 000c FFF7FEFF 		bl	button
  60              	.LVL0:
  61              		.loc 1 205 17 discriminator 1 view .LVU9
  62 0010 0028     		cmp	r0, #0
  63 0012 FBD1     		bne	.L2
 206:Core/Src/clean_main.c **** 	while(button() == 0){
 207:Core/Src/clean_main.c **** 	
 208:Core/Src/clean_main.c **** 		UpdateEnc(0, FILTER_NUMBER-1, &stan_enc, false);
  64              		.loc 1 208 3 view .LVU10
  65 0014 134D     		ldr	r5, .L10
 209:Core/Src/clean_main.c **** 		dprint("Filter: %.3fV CH:%2dtime[us]:%d",bar_values[stan_enc],stan_enc,measured_us);
  66              		.loc 1 209 54 view .LVU11
  67 0016 DFF85880 		ldr	r8, .L10+12
  68              		.loc 1 209 3 view .LVU12
  69 001a 134F     		ldr	r7, .L10+4
  70 001c 13E0     		b	.L3
  71              	.L4:
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 6


 208:Core/Src/clean_main.c **** 		dprint("Filter: %.3fV CH:%2dtime[us]:%d",bar_values[stan_enc],stan_enc,measured_us);
  72              		.loc 1 208 3 view .LVU13
  73 001e FFF7FEFF 		bl	UpdateEnc
  74              	.LVL1:
  75              		.loc 1 209 3 is_stmt 1 view .LVU14
  76              		.loc 1 209 54 is_stmt 0 view .LVU15
  77 0022 B6F90040 		ldrsh	r4, [r6]
  78 0026 08EB8403 		add	r3, r8, r4, lsl #2
  79              		.loc 1 209 3 view .LVU16
  80 002a 1868     		ldr	r0, [r3]	@ float
  81 002c FFF7FEFF 		bl	__aeabi_f2d
  82              	.LVL2:
  83 0030 0B46     		mov	r3, r1
  84 0032 3988     		ldrh	r1, [r7]
  85 0034 0246     		mov	r2, r0
  86 0036 CDE90041 		strd	r4, r1, [sp]
  87 003a 0C48     		ldr	r0, .L10+8
  88 003c FFF7FEFF 		bl	dprint
  89              	.LVL3:
 210:Core/Src/clean_main.c **** 		HAL_Delay(100);
  90              		.loc 1 210 3 is_stmt 1 view .LVU17
  91 0040 6420     		movs	r0, #100
  92 0042 FFF7FEFF 		bl	HAL_Delay
  93              	.LVL4:
  94              	.L3:
 206:Core/Src/clean_main.c **** 	
  95              		.loc 1 206 17 view .LVU18
 206:Core/Src/clean_main.c **** 	
  96              		.loc 1 206 8 is_stmt 0 view .LVU19
  97 0046 FFF7FEFF 		bl	button
  98              	.LVL5:
 208:Core/Src/clean_main.c **** 		dprint("Filter: %.3fV CH:%2dtime[us]:%d",bar_values[stan_enc],stan_enc,measured_us);
  99              		.loc 1 208 3 is_stmt 1 view .LVU20
 100 004a 0B21     		movs	r1, #11
 206:Core/Src/clean_main.c **** 	
 101              		.loc 1 206 8 is_stmt 0 view .LVU21
 102 004c 0346     		mov	r3, r0
 208:Core/Src/clean_main.c **** 		dprint("Filter: %.3fV CH:%2dtime[us]:%d",bar_values[stan_enc],stan_enc,measured_us);
 103              		.loc 1 208 3 view .LVU22
 104 004e 2A46     		mov	r2, r5
 206:Core/Src/clean_main.c **** 	
 105              		.loc 1 206 17 discriminator 1 view .LVU23
 106 0050 0028     		cmp	r0, #0
 107 0052 E4D0     		beq	.L4
 108              	.L5:
 211:Core/Src/clean_main.c **** 	}
 212:Core/Src/clean_main.c **** 	while(button() == 1);
 109              		.loc 1 212 17 is_stmt 1 discriminator 1 view .LVU24
 110              		.loc 1 212 8 is_stmt 0 discriminator 1 view .LVU25
 111 0054 FFF7FEFF 		bl	button
 112              	.LVL6:
 113              		.loc 1 212 17 discriminator 1 view .LVU26
 114 0058 0028     		cmp	r0, #0
 115 005a FBD1     		bne	.L5
 213:Core/Src/clean_main.c **** }
 116              		.loc 1 213 1 view .LVU27
 117 005c 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 7


 118              		.cfi_def_cfa_offset 24
 119              		@ sp needed
 120 005e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 121              	.L11:
 122 0062 00BF     		.align	2
 123              	.L10:
 124 0064 00000000 		.word	stan_enc
 125 0068 00000000 		.word	measured_us
 126 006c 00000000 		.word	.LC8
 127 0070 00000000 		.word	bar_values
 128              		.cfi_endproc
 129              	.LFE257:
 131              		.section	.rodata.line.str1.4,"aMS",%progbits,1
 132              		.align	2
 133              	.LC9:
 134 0000 252E3230 		.ascii	"%.20s^Status\000"
 134      735E5374 
 134      61747573 
 134      00
 135              		.section	.text.line,"ax",%progbits
 136              		.align	1
 137              		.p2align 2,,3
 138              		.global	line
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
 143              	line:
 144              	.LFB251:
  88:Core/Src/clean_main.c **** 	HAL_Delay(500);
 145              		.loc 1 88 12 is_stmt 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
  89:Core/Src/clean_main.c **** 	while (button()==0) {
 149              		.loc 1 89 2 view .LVU29
  88:Core/Src/clean_main.c **** 	HAL_Delay(500);
 150              		.loc 1 88 12 is_stmt 0 view .LVU30
 151 0000 70B5     		push	{r4, r5, r6, lr}
 152              		.cfi_def_cfa_offset 16
 153              		.cfi_offset 4, -16
 154              		.cfi_offset 5, -12
 155              		.cfi_offset 6, -8
 156              		.cfi_offset 14, -4
  89:Core/Src/clean_main.c **** 	while (button()==0) {
 157              		.loc 1 89 2 view .LVU31
 158 0002 4FF4FA70 		mov	r0, #500
 159 0006 FFF7FEFF 		bl	HAL_Delay
 160              	.LVL7:
  90:Core/Src/clean_main.c **** 		UpdateEnc(0, 20, &stan_enc, true);
 161              		.loc 1 90 2 is_stmt 1 view .LVU32
  90:Core/Src/clean_main.c **** 		UpdateEnc(0, 20, &stan_enc, true);
 162              		.loc 1 90 17 view .LVU33
 163 000a 194D     		ldr	r5, .L21
 164 000c 194E     		ldr	r6, .L21+4
 165 000e 4424     		movs	r4, #68
  90:Core/Src/clean_main.c **** 		UpdateEnc(0, 20, &stan_enc, true);
 166              		.loc 1 90 9 is_stmt 0 view .LVU34
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 8


 167 0010 FFF7FEFF 		bl	button
 168              	.LVL8:
  90:Core/Src/clean_main.c **** 		UpdateEnc(0, 20, &stan_enc, true);
 169              		.loc 1 90 17 discriminator 1 view .LVU35
 170 0014 F0B9     		cbnz	r0, .L20
 171              	.L18:
  91:Core/Src/clean_main.c **** 		for (int i = 0; i < 20; i++) {
 172              		.loc 1 91 3 is_stmt 1 view .LVU36
 173 0016 0123     		movs	r3, #1
 174 0018 1421     		movs	r1, #20
 175 001a 2A46     		mov	r2, r5
 176 001c FFF7FEFF 		bl	UpdateEnc
 177              	.LVL9:
  92:Core/Src/clean_main.c **** 			if (i < stan_enc) {
 178              		.loc 1 92 3 view .LVU37
 179              	.LBB34:
  92:Core/Src/clean_main.c **** 			if (i < stan_enc) {
 180              		.loc 1 92 8 view .LVU38
  92:Core/Src/clean_main.c **** 			if (i < stan_enc) {
 181              		.loc 1 92 21 discriminator 1 view .LVU39
 182 0020 154B     		ldr	r3, .L21+8
  93:Core/Src/clean_main.c **** 				pasek[i] = znak;
 183              		.loc 1 93 10 is_stmt 0 view .LVU40
 184 0022 B5F900C0 		ldrsh	ip, [r5]
  94:Core/Src/clean_main.c **** 			}
 185              		.loc 1 94 14 view .LVU41
 186 0026 96F800E0 		ldrb	lr, [r6]	@ zero_extendqisi2
 187 002a 03F11400 		add	r0, r3, #20
 188 002e 5942     		rsbs	r1, r3, #0
 189              	.LVL10:
 190              	.L17:
  93:Core/Src/clean_main.c **** 				pasek[i] = znak;
 191              		.loc 1 93 4 is_stmt 1 view .LVU42
  94:Core/Src/clean_main.c **** 			}
 192              		.loc 1 94 5 view .LVU43
  96:Core/Src/clean_main.c **** 				pasek[i] = 'D';
 193              		.loc 1 96 4 view .LVU44
  93:Core/Src/clean_main.c **** 				pasek[i] = znak;
 194              		.loc 1 93 7 is_stmt 0 view .LVU45
 195 0030 CA18     		adds	r2, r1, r3
 196 0032 9445     		cmp	ip, r2
 197 0034 16DD     		ble	.L14
 198 0036 03F801EF 		strb	lr, [r3, #1]!
 199              	.LVL11:
  99:Core/Src/clean_main.c **** 				pasek[i] = ' ';
 200              		.loc 1 99 4 is_stmt 1 view .LVU46
  92:Core/Src/clean_main.c **** 			if (i < stan_enc) {
 201              		.loc 1 92 28 discriminator 2 view .LVU47
  92:Core/Src/clean_main.c **** 			if (i < stan_enc) {
 202              		.loc 1 92 21 discriminator 1 view .LVU48
 203 003a 8342     		cmp	r3, r0
 204 003c F8D1     		bne	.L17
 205              	.LVL12:
 206              	.L16:
  92:Core/Src/clean_main.c **** 			if (i < stan_enc) {
 207              		.loc 1 92 21 is_stmt 0 discriminator 1 view .LVU49
 208              	.LBE34:
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 9


 103:Core/Src/clean_main.c **** 		HAL_Delay(10);
 209              		.loc 1 103 3 is_stmt 1 view .LVU50
 210 003e 0F49     		ldr	r1, .L21+12
 211 0040 0F48     		ldr	r0, .L21+16
 212 0042 FFF7FEFF 		bl	dprint
 213              	.LVL13:
 104:Core/Src/clean_main.c **** 	}
 214              		.loc 1 104 3 view .LVU51
 215 0046 0A20     		movs	r0, #10
 216 0048 FFF7FEFF 		bl	HAL_Delay
 217              	.LVL14:
  90:Core/Src/clean_main.c **** 		UpdateEnc(0, 20, &stan_enc, true);
 218              		.loc 1 90 17 view .LVU52
  90:Core/Src/clean_main.c **** 		UpdateEnc(0, 20, &stan_enc, true);
 219              		.loc 1 90 9 is_stmt 0 view .LVU53
 220 004c FFF7FEFF 		bl	button
 221              	.LVL15:
  90:Core/Src/clean_main.c **** 		UpdateEnc(0, 20, &stan_enc, true);
 222              		.loc 1 90 17 discriminator 1 view .LVU54
 223 0050 0028     		cmp	r0, #0
 224 0052 E0D0     		beq	.L18
 225              	.L20:
 106:Core/Src/clean_main.c **** 	clearDisp();
 226              		.loc 1 106 2 is_stmt 1 view .LVU55
 227 0054 C820     		movs	r0, #200
 228 0056 FFF7FEFF 		bl	HAL_Delay
 229              	.LVL16:
 107:Core/Src/clean_main.c **** 	stan_enc = znak;
 230              		.loc 1 107 2 view .LVU56
 231 005a FFF7FEFF 		bl	clearDisp
 232              	.LVL17:
 108:Core/Src/clean_main.c **** }
 233              		.loc 1 108 2 view .LVU57
 108:Core/Src/clean_main.c **** }
 234              		.loc 1 108 11 is_stmt 0 view .LVU58
 235 005e 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 236 0060 2B80     		strh	r3, [r5]	@ movhi
 109:Core/Src/clean_main.c **** 
 237              		.loc 1 109 1 view .LVU59
 238 0062 70BD     		pop	{r4, r5, r6, pc}
 239              	.LVL18:
 240              	.L14:
 109:Core/Src/clean_main.c **** 
 241              		.loc 1 109 1 view .LVU60
 242 0064 03F8014F 		strb	r4, [r3, #1]!
 243              	.LVL19:
 244              	.LBB35:
  99:Core/Src/clean_main.c **** 				pasek[i] = ' ';
 245              		.loc 1 99 4 is_stmt 1 view .LVU61
  92:Core/Src/clean_main.c **** 			if (i < stan_enc) {
 246              		.loc 1 92 28 discriminator 2 view .LVU62
  92:Core/Src/clean_main.c **** 			if (i < stan_enc) {
 247              		.loc 1 92 21 discriminator 1 view .LVU63
 248 0068 8342     		cmp	r3, r0
 249 006a E1D1     		bne	.L17
 250 006c E7E7     		b	.L16
 251              	.L22:
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 10


 252 006e 00BF     		.align	2
 253              	.L21:
 254 0070 00000000 		.word	stan_enc
 255 0074 00000000 		.word	znak
 256 0078 FFFFFFFF 		.word	pasek-1
 257 007c 00000000 		.word	pasek
 258 0080 00000000 		.word	.LC9
 259              	.LBE35:
 260              		.cfi_endproc
 261              	.LFE251:
 263              		.section	.rodata.change_char.str1.4,"aMS",%progbits,1
 264              		.align	2
 265              	.LC10:
 266 0000 4B6F643A 		.ascii	"Kod: %03d = '%c'\000"
 266      20253033 
 266      64203D20 
 266      27256327 
 266      00
 267              		.section	.text.change_char,"ax",%progbits
 268              		.align	1
 269              		.p2align 2,,3
 270              		.global	change_char
 271              		.syntax unified
 272              		.thumb
 273              		.thumb_func
 275              	change_char:
 276              	.LFB252:
 111:Core/Src/clean_main.c **** 	HAL_Delay(500);
 277              		.loc 1 111 19 view -0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 112:Core/Src/clean_main.c **** 	while (button()==0) {
 281              		.loc 1 112 2 view .LVU65
 111:Core/Src/clean_main.c **** 	HAL_Delay(500);
 282              		.loc 1 111 19 is_stmt 0 view .LVU66
 283 0000 70B5     		push	{r4, r5, r6, lr}
 284              		.cfi_def_cfa_offset 16
 285              		.cfi_offset 4, -16
 286              		.cfi_offset 5, -12
 287              		.cfi_offset 6, -8
 288              		.cfi_offset 14, -4
 112:Core/Src/clean_main.c **** 	while (button()==0) {
 289              		.loc 1 112 2 view .LVU67
 290 0002 4FF4FA70 		mov	r0, #500
 291 0006 FFF7FEFF 		bl	HAL_Delay
 292              	.LVL20:
 113:Core/Src/clean_main.c **** 		znak = stan_enc;
 293              		.loc 1 113 2 is_stmt 1 view .LVU68
 114:Core/Src/clean_main.c **** 		UpdateEnc(32, 127, &stan_enc, false);
 294              		.loc 1 114 8 is_stmt 0 view .LVU69
 295 000a 114E     		ldr	r6, .L27
 296 000c 114C     		ldr	r4, .L27+4
 116:Core/Src/clean_main.c **** 		HAL_Delay(10);
 297              		.loc 1 116 3 view .LVU70
 298 000e 124D     		ldr	r5, .L27+8
 113:Core/Src/clean_main.c **** 		znak = stan_enc;
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 11


 299              		.loc 1 113 8 view .LVU71
 300 0010 0EE0     		b	.L24
 301              	.L25:
 114:Core/Src/clean_main.c **** 		UpdateEnc(32, 127, &stan_enc, false);
 302              		.loc 1 114 8 view .LVU72
 303 0012 B4F800C0 		ldrh	ip, [r4]
 304 0016 86F800C0 		strb	ip, [r6]
 115:Core/Src/clean_main.c **** 		dprint("Kod: %03d = '%c'", stan_enc, stan_enc);
 305              		.loc 1 115 3 is_stmt 1 view .LVU73
 306 001a FFF7FEFF 		bl	UpdateEnc
 307              	.LVL21:
 116:Core/Src/clean_main.c **** 		HAL_Delay(10);
 308              		.loc 1 116 3 view .LVU74
 309 001e B4F90020 		ldrsh	r2, [r4]
 310 0022 2846     		mov	r0, r5
 311 0024 1146     		mov	r1, r2
 312 0026 FFF7FEFF 		bl	dprint
 313              	.LVL22:
 117:Core/Src/clean_main.c **** 	}
 314              		.loc 1 117 3 view .LVU75
 315 002a 0A20     		movs	r0, #10
 316 002c FFF7FEFF 		bl	HAL_Delay
 317              	.LVL23:
 318              	.L24:
 113:Core/Src/clean_main.c **** 		znak = stan_enc;
 319              		.loc 1 113 17 view .LVU76
 113:Core/Src/clean_main.c **** 		znak = stan_enc;
 320              		.loc 1 113 9 is_stmt 0 view .LVU77
 321 0030 FFF7FEFF 		bl	button
 322              	.LVL24:
 114:Core/Src/clean_main.c **** 		UpdateEnc(32, 127, &stan_enc, false);
 323              		.loc 1 114 3 is_stmt 1 view .LVU78
 113:Core/Src/clean_main.c **** 		znak = stan_enc;
 324              		.loc 1 113 9 is_stmt 0 view .LVU79
 325 0034 0346     		mov	r3, r0
 115:Core/Src/clean_main.c **** 		dprint("Kod: %03d = '%c'", stan_enc, stan_enc);
 326              		.loc 1 115 3 view .LVU80
 327 0036 074A     		ldr	r2, .L27+4
 328 0038 7F21     		movs	r1, #127
 329 003a 2020     		movs	r0, #32
 113:Core/Src/clean_main.c **** 		znak = stan_enc;
 330              		.loc 1 113 17 discriminator 1 view .LVU81
 331 003c 002B     		cmp	r3, #0
 332 003e E8D0     		beq	.L25
 119:Core/Src/clean_main.c **** 	HAL_Delay(200);
 333              		.loc 1 119 2 is_stmt 1 view .LVU82
 334 0040 FFF7FEFF 		bl	clearDisp
 335              	.LVL25:
 120:Core/Src/clean_main.c **** }
 336              		.loc 1 120 2 view .LVU83
 121:Core/Src/clean_main.c **** 
 337              		.loc 1 121 1 is_stmt 0 view .LVU84
 338 0044 BDE87040 		pop	{r4, r5, r6, lr}
 339              		.cfi_restore 14
 340              		.cfi_restore 6
 341              		.cfi_restore 5
 342              		.cfi_restore 4
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 12


 343              		.cfi_def_cfa_offset 0
 120:Core/Src/clean_main.c **** }
 344              		.loc 1 120 2 view .LVU85
 345 0048 C820     		movs	r0, #200
 346 004a FFF7FEBF 		b	HAL_Delay
 347              	.LVL26:
 348              	.L28:
 349 004e 00BF     		.align	2
 350              	.L27:
 351 0050 00000000 		.word	znak
 352 0054 00000000 		.word	stan_enc
 353 0058 00000000 		.word	.LC10
 354              		.cfi_endproc
 355              	.LFE252:
 357              		.section	.rodata.testOutput.str1.4,"aMS",%progbits,1
 358              		.align	2
 359              	.LC11:
 360 0000 4F75743A 		.ascii	"Out:1\000"
 360      3100
 361 0006 0000     		.align	2
 362              	.LC12:
 363 0008 4F75743A 		.ascii	"Out:0\000"
 363      3000
 364              		.section	.text.testOutput,"ax",%progbits
 365              		.align	1
 366              		.p2align 2,,3
 367              		.global	testOutput
 368              		.syntax unified
 369              		.thumb
 370              		.thumb_func
 372              	testOutput:
 373              	.LFB254:
 127:Core/Src/clean_main.c **** 	clearDisp();
 374              		.loc 1 127 22 is_stmt 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 128:Core/Src/clean_main.c **** 	while(button() == 1);
 378              		.loc 1 128 2 view .LVU87
 127:Core/Src/clean_main.c **** 	clearDisp();
 379              		.loc 1 127 22 is_stmt 0 view .LVU88
 380 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 381              		.cfi_def_cfa_offset 24
 382              		.cfi_offset 3, -24
 383              		.cfi_offset 4, -20
 384              		.cfi_offset 5, -16
 385              		.cfi_offset 6, -12
 386              		.cfi_offset 7, -8
 387              		.cfi_offset 14, -4
 128:Core/Src/clean_main.c **** 	while(button() == 1);
 388              		.loc 1 128 2 view .LVU89
 389 0002 FFF7FEFF 		bl	clearDisp
 390              	.LVL27:
 129:Core/Src/clean_main.c **** 	while(button() == 0){
 391              		.loc 1 129 2 is_stmt 1 view .LVU90
 392              	.L30:
 129:Core/Src/clean_main.c **** 	while(button() == 0){
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 13


 393              		.loc 1 129 17 discriminator 1 view .LVU91
 129:Core/Src/clean_main.c **** 	while(button() == 0){
 394              		.loc 1 129 8 is_stmt 0 discriminator 1 view .LVU92
 395 0006 FFF7FEFF 		bl	button
 396              	.LVL28:
 129:Core/Src/clean_main.c **** 	while(button() == 0){
 397              		.loc 1 129 17 discriminator 1 view .LVU93
 398 000a 0028     		cmp	r0, #0
 399 000c FBD1     		bne	.L30
 400              	.LBB36:
 401              	.LBB37:
 124:Core/Src/clean_main.c **** }
 402              		.loc 1 124 2 view .LVU94
 403 000e 144D     		ldr	r5, .L37
 404              	.LBE37:
 405              	.LBE36:
 133:Core/Src/clean_main.c **** 		HAL_Delay(1000);
 406              		.loc 1 133 3 view .LVU95
 407 0010 144F     		ldr	r7, .L37+4
 136:Core/Src/clean_main.c **** 	}
 408              		.loc 1 136 3 view .LVU96
 409 0012 154E     		ldr	r6, .L37+8
 410 0014 17E0     		b	.L31
 411              	.L32:
 131:Core/Src/clean_main.c **** 		switchTube(1);
 412              		.loc 1 131 3 view .LVU97
 413 0016 FFF7FEFF 		bl	HAL_Delay
 414              	.LVL29:
 132:Core/Src/clean_main.c **** 		dprint("Out:1");
 415              		.loc 1 132 3 is_stmt 1 view .LVU98
 416              	.LBB39:
 417              	.LBI36:
 123:Core/Src/clean_main.c **** 	HAL_GPIO_WritePin(EN_TUBE_GPIO_Port,EN_TUBE_Pin,state);
 418              		.loc 1 123 6 view .LVU99
 419              	.LBB38:
 124:Core/Src/clean_main.c **** }
 420              		.loc 1 124 2 view .LVU100
 421 001a 0122     		movs	r2, #1
 422 001c 4FF40071 		mov	r1, #512
 423 0020 2846     		mov	r0, r5
 424 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 425              	.LVL30:
 124:Core/Src/clean_main.c **** }
 426              		.loc 1 124 2 is_stmt 0 view .LVU101
 427              	.LBE38:
 428              	.LBE39:
 133:Core/Src/clean_main.c **** 		HAL_Delay(1000);
 429              		.loc 1 133 3 is_stmt 1 view .LVU102
 430 0026 3846     		mov	r0, r7
 431 0028 FFF7FEFF 		bl	dprint
 432              	.LVL31:
 134:Core/Src/clean_main.c **** 		switchTube(0);
 433              		.loc 1 134 3 view .LVU103
 434 002c 4FF47A70 		mov	r0, #1000
 435 0030 FFF7FEFF 		bl	HAL_Delay
 436              	.LVL32:
 135:Core/Src/clean_main.c **** 		dprint("Out:0");
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 14


 437              		.loc 1 135 3 view .LVU104
 438              	.LBB40:
 439              	.LBI40:
 123:Core/Src/clean_main.c **** 	HAL_GPIO_WritePin(EN_TUBE_GPIO_Port,EN_TUBE_Pin,state);
 440              		.loc 1 123 6 view .LVU105
 441              	.LBB41:
 124:Core/Src/clean_main.c **** }
 442              		.loc 1 124 2 view .LVU106
 443 0034 2846     		mov	r0, r5
 444 0036 2246     		mov	r2, r4
 445 0038 4FF40071 		mov	r1, #512
 446 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
 447              	.LVL33:
 124:Core/Src/clean_main.c **** }
 448              		.loc 1 124 2 is_stmt 0 view .LVU107
 449              	.LBE41:
 450              	.LBE40:
 136:Core/Src/clean_main.c **** 	}
 451              		.loc 1 136 3 is_stmt 1 view .LVU108
 452 0040 3046     		mov	r0, r6
 453 0042 FFF7FEFF 		bl	dprint
 454              	.LVL34:
 455              	.L31:
 130:Core/Src/clean_main.c **** 		HAL_Delay(1000);
 456              		.loc 1 130 17 view .LVU109
 130:Core/Src/clean_main.c **** 		HAL_Delay(1000);
 457              		.loc 1 130 8 is_stmt 0 view .LVU110
 458 0046 FFF7FEFF 		bl	button
 459              	.LVL35:
 131:Core/Src/clean_main.c **** 		switchTube(1);
 460              		.loc 1 131 3 is_stmt 1 view .LVU111
 130:Core/Src/clean_main.c **** 		HAL_Delay(1000);
 461              		.loc 1 130 8 is_stmt 0 view .LVU112
 462 004a 0446     		mov	r4, r0
 131:Core/Src/clean_main.c **** 		switchTube(1);
 463              		.loc 1 131 3 view .LVU113
 464 004c 4FF47A70 		mov	r0, #1000
 130:Core/Src/clean_main.c **** 		HAL_Delay(1000);
 465              		.loc 1 130 17 discriminator 1 view .LVU114
 466 0050 002C     		cmp	r4, #0
 467 0052 E0D0     		beq	.L32
 468              	.L33:
 138:Core/Src/clean_main.c **** }
 469              		.loc 1 138 17 is_stmt 1 discriminator 1 view .LVU115
 138:Core/Src/clean_main.c **** }
 470              		.loc 1 138 8 is_stmt 0 discriminator 1 view .LVU116
 471 0054 FFF7FEFF 		bl	button
 472              	.LVL36:
 138:Core/Src/clean_main.c **** }
 473              		.loc 1 138 17 discriminator 1 view .LVU117
 474 0058 0028     		cmp	r0, #0
 475 005a FBD1     		bne	.L33
 139:Core/Src/clean_main.c **** 
 476              		.loc 1 139 1 view .LVU118
 477 005c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 478              	.L38:
 479 005e 00BF     		.align	2
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 15


 480              	.L37:
 481 0060 00040240 		.word	1073873920
 482 0064 00000000 		.word	.LC11
 483 0068 08000000 		.word	.LC12
 484              		.cfi_endproc
 485              	.LFE254:
 487              		.section	.rodata.testDAC.str1.4,"aMS",%progbits,1
 488              		.align	2
 489              	.LC13:
 490 0000 44414320 		.ascii	"DAC Channel:%1d\000"
 490      4368616E 
 490      6E656C3A 
 490      25316400 
 491              		.align	2
 492              	.LC14:
 493 0010 4E756D62 		.ascii	"Number of DAC:%1d\000"
 493      6572206F 
 493      66204441 
 493      433A2531 
 493      6400
 494 0022 0000     		.align	2
 495              	.LC15:
 496 0024 44414320 		.ascii	"DAC output:%3d\000"
 496      6F757470 
 496      75743A25 
 496      336400
 497              		.section	.text.testDAC,"ax",%progbits
 498              		.align	1
 499              		.p2align 2,,3
 500              		.global	testDAC
 501              		.syntax unified
 502              		.thumb
 503              		.thumb_func
 505              	testDAC:
 506              	.LFB255:
 141:Core/Src/clean_main.c **** 	HAL_Delay(500);
 507              		.loc 1 141 15 is_stmt 1 view -0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 142:Core/Src/clean_main.c **** 	clearDisp();
 511              		.loc 1 142 2 view .LVU120
 141:Core/Src/clean_main.c **** 	HAL_Delay(500);
 512              		.loc 1 141 15 is_stmt 0 view .LVU121
 513 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 514              		.cfi_def_cfa_offset 24
 515              		.cfi_offset 4, -24
 516              		.cfi_offset 5, -20
 517              		.cfi_offset 6, -16
 518              		.cfi_offset 7, -12
 519              		.cfi_offset 8, -8
 520              		.cfi_offset 14, -4
 142:Core/Src/clean_main.c **** 	clearDisp();
 521              		.loc 1 142 2 view .LVU122
 522 0004 4FF4FA70 		mov	r0, #500
 144:Core/Src/clean_main.c **** 	while(button() == 0){
 523              		.loc 1 144 11 view .LVU123
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 16


 524 0008 354C     		ldr	r4, .L53
 147:Core/Src/clean_main.c **** 		HAL_Delay(50);
 525              		.loc 1 147 3 view .LVU124
 526 000a 364D     		ldr	r5, .L53+4
 142:Core/Src/clean_main.c **** 	clearDisp();
 527              		.loc 1 142 2 view .LVU125
 528 000c FFF7FEFF 		bl	HAL_Delay
 529              	.LVL37:
 143:Core/Src/clean_main.c **** 	stan_enc = 0;
 530              		.loc 1 143 2 is_stmt 1 view .LVU126
 531 0010 FFF7FEFF 		bl	clearDisp
 532              	.LVL38:
 144:Core/Src/clean_main.c **** 	while(button() == 0){
 533              		.loc 1 144 2 view .LVU127
 144:Core/Src/clean_main.c **** 	while(button() == 0){
 534              		.loc 1 144 11 is_stmt 0 view .LVU128
 535 0014 0023     		movs	r3, #0
 536 0016 2380     		strh	r3, [r4]	@ movhi
 145:Core/Src/clean_main.c **** 		UpdateEnc(0, 3, &stan_enc, false);
 537              		.loc 1 145 2 is_stmt 1 view .LVU129
 145:Core/Src/clean_main.c **** 		UpdateEnc(0, 3, &stan_enc, false);
 538              		.loc 1 145 7 is_stmt 0 view .LVU130
 539 0018 09E0     		b	.L40
 540              	.L41:
 146:Core/Src/clean_main.c **** 		dprint("DAC Channel:%1d",stan_enc);
 541              		.loc 1 146 3 view .LVU131
 542 001a FFF7FEFF 		bl	UpdateEnc
 543              	.LVL39:
 147:Core/Src/clean_main.c **** 		HAL_Delay(50);
 544              		.loc 1 147 3 is_stmt 1 view .LVU132
 545 001e 2846     		mov	r0, r5
 546 0020 B4F90010 		ldrsh	r1, [r4]
 547 0024 FFF7FEFF 		bl	dprint
 548              	.LVL40:
 148:Core/Src/clean_main.c **** 	}
 549              		.loc 1 148 3 view .LVU133
 550 0028 3220     		movs	r0, #50
 551 002a FFF7FEFF 		bl	HAL_Delay
 552              	.LVL41:
 553              	.L40:
 145:Core/Src/clean_main.c **** 		UpdateEnc(0, 3, &stan_enc, false);
 554              		.loc 1 145 17 view .LVU134
 145:Core/Src/clean_main.c **** 		UpdateEnc(0, 3, &stan_enc, false);
 555              		.loc 1 145 8 is_stmt 0 view .LVU135
 556 002e FFF7FEFF 		bl	button
 557              	.LVL42:
 146:Core/Src/clean_main.c **** 		dprint("DAC Channel:%1d",stan_enc);
 558              		.loc 1 146 3 is_stmt 1 view .LVU136
 559 0032 0321     		movs	r1, #3
 145:Core/Src/clean_main.c **** 		UpdateEnc(0, 3, &stan_enc, false);
 560              		.loc 1 145 8 is_stmt 0 view .LVU137
 561 0034 0346     		mov	r3, r0
 146:Core/Src/clean_main.c **** 		dprint("DAC Channel:%1d",stan_enc);
 562              		.loc 1 146 3 view .LVU138
 563 0036 2246     		mov	r2, r4
 145:Core/Src/clean_main.c **** 		UpdateEnc(0, 3, &stan_enc, false);
 564              		.loc 1 145 17 discriminator 1 view .LVU139
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 17


 565 0038 0028     		cmp	r0, #0
 566 003a EED0     		beq	.L41
 150:Core/Src/clean_main.c **** 	while(button() == 1);
 567              		.loc 1 150 2 is_stmt 1 view .LVU140
 150:Core/Src/clean_main.c **** 	while(button() == 1);
 568              		.loc 1 150 6 is_stmt 0 view .LVU141
 569 003c B4F90050 		ldrsh	r5, [r4]
 570              	.LVL43:
 151:Core/Src/clean_main.c **** 	stan_enc = 0;
 571              		.loc 1 151 2 is_stmt 1 view .LVU142
 572              	.L42:
 151:Core/Src/clean_main.c **** 	stan_enc = 0;
 573              		.loc 1 151 17 discriminator 1 view .LVU143
 151:Core/Src/clean_main.c **** 	stan_enc = 0;
 574              		.loc 1 151 8 is_stmt 0 discriminator 1 view .LVU144
 575 0040 FFF7FEFF 		bl	button
 576              	.LVL44:
 151:Core/Src/clean_main.c **** 	stan_enc = 0;
 577              		.loc 1 151 17 discriminator 1 view .LVU145
 578 0044 0028     		cmp	r0, #0
 579 0046 FBD1     		bne	.L42
 152:Core/Src/clean_main.c **** 	while(button() == 0){
 580              		.loc 1 152 2 is_stmt 1 view .LVU146
 154:Core/Src/clean_main.c **** 		dprint("Number of DAC:%1d",stan_enc); 
 581              		.loc 1 154 3 is_stmt 0 view .LVU147
 582 0048 254E     		ldr	r6, .L53
 155:Core/Src/clean_main.c **** 		HAL_Delay(50);
 583              		.loc 1 155 3 view .LVU148
 584 004a 274F     		ldr	r7, .L53+8
 152:Core/Src/clean_main.c **** 	while(button() == 0){
 585              		.loc 1 152 11 view .LVU149
 586 004c 2080     		strh	r0, [r4]	@ movhi
 153:Core/Src/clean_main.c **** 		UpdateEnc(0, 3, &stan_enc, false);
 587              		.loc 1 153 2 is_stmt 1 view .LVU150
 153:Core/Src/clean_main.c **** 		UpdateEnc(0, 3, &stan_enc, false);
 588              		.loc 1 153 7 is_stmt 0 view .LVU151
 589 004e 09E0     		b	.L43
 590              	.L44:
 154:Core/Src/clean_main.c **** 		dprint("Number of DAC:%1d",stan_enc); 
 591              		.loc 1 154 3 view .LVU152
 592 0050 FFF7FEFF 		bl	UpdateEnc
 593              	.LVL45:
 155:Core/Src/clean_main.c **** 		HAL_Delay(50);
 594              		.loc 1 155 3 is_stmt 1 view .LVU153
 595 0054 3846     		mov	r0, r7
 596 0056 B4F90010 		ldrsh	r1, [r4]
 597 005a FFF7FEFF 		bl	dprint
 598              	.LVL46:
 156:Core/Src/clean_main.c **** 	}
 599              		.loc 1 156 3 view .LVU154
 600 005e 3220     		movs	r0, #50
 601 0060 FFF7FEFF 		bl	HAL_Delay
 602              	.LVL47:
 603              	.L43:
 153:Core/Src/clean_main.c **** 		UpdateEnc(0, 3, &stan_enc, false);
 604              		.loc 1 153 17 view .LVU155
 153:Core/Src/clean_main.c **** 		UpdateEnc(0, 3, &stan_enc, false);
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 18


 605              		.loc 1 153 8 is_stmt 0 view .LVU156
 606 0064 FFF7FEFF 		bl	button
 607              	.LVL48:
 154:Core/Src/clean_main.c **** 		dprint("Number of DAC:%1d",stan_enc); 
 608              		.loc 1 154 3 is_stmt 1 view .LVU157
 609 0068 0321     		movs	r1, #3
 153:Core/Src/clean_main.c **** 		UpdateEnc(0, 3, &stan_enc, false);
 610              		.loc 1 153 8 is_stmt 0 view .LVU158
 611 006a 0346     		mov	r3, r0
 154:Core/Src/clean_main.c **** 		dprint("Number of DAC:%1d",stan_enc); 
 612              		.loc 1 154 3 view .LVU159
 613 006c 3246     		mov	r2, r6
 153:Core/Src/clean_main.c **** 		UpdateEnc(0, 3, &stan_enc, false);
 614              		.loc 1 153 17 discriminator 1 view .LVU160
 615 006e 0028     		cmp	r0, #0
 616 0070 EED0     		beq	.L44
 158:Core/Src/clean_main.c **** 	while(button() == 1);
 617              		.loc 1 158 2 is_stmt 1 view .LVU161
 158:Core/Src/clean_main.c **** 	while(button() == 1);
 618              		.loc 1 158 6 is_stmt 0 view .LVU162
 619 0072 B4F90080 		ldrsh	r8, [r4]
 620              	.LVL49:
 159:Core/Src/clean_main.c **** 	stan_enc = 0;
 621              		.loc 1 159 2 is_stmt 1 view .LVU163
 622              	.L45:
 159:Core/Src/clean_main.c **** 	stan_enc = 0;
 623              		.loc 1 159 17 discriminator 1 view .LVU164
 159:Core/Src/clean_main.c **** 	stan_enc = 0;
 624              		.loc 1 159 8 is_stmt 0 discriminator 1 view .LVU165
 625 0076 FFF7FEFF 		bl	button
 626              	.LVL50:
 159:Core/Src/clean_main.c **** 	stan_enc = 0;
 627              		.loc 1 159 17 discriminator 1 view .LVU166
 628 007a 0028     		cmp	r0, #0
 629 007c FBD1     		bne	.L45
 160:Core/Src/clean_main.c **** 	HAL_GPIO_WritePin(EN_TUBE_GPIO_Port,EN_TUBE_Pin,1);
 630              		.loc 1 160 2 is_stmt 1 view .LVU167
 160:Core/Src/clean_main.c **** 	HAL_GPIO_WritePin(EN_TUBE_GPIO_Port,EN_TUBE_Pin,1);
 631              		.loc 1 160 11 is_stmt 0 view .LVU168
 632 007e 2080     		strh	r0, [r4]	@ movhi
 161:Core/Src/clean_main.c **** 	while(button() == 0){
 633              		.loc 1 161 2 is_stmt 1 view .LVU169
 634 0080 00F18040 		add	r0, r0, #1073741824
 635 0084 0122     		movs	r2, #1
 636 0086 00F50130 		add	r0, r0, #132096
 637 008a 4FF40071 		mov	r1, #512
 638 008e FFF7FEFF 		bl	HAL_GPIO_WritePin
 639              	.LVL51:
 162:Core/Src/clean_main.c **** 		UpdateEnc(0, 255, &stan_enc, true);
 640              		.loc 1 162 2 view .LVU170
 163:Core/Src/clean_main.c **** 		dprint("DAC output:%3d",stan_enc);
 641              		.loc 1 163 3 is_stmt 0 view .LVU171
 642 0092 134E     		ldr	r6, .L53
 164:Core/Src/clean_main.c **** 		dac_write(channel,stan_enc,dac_number);
 643              		.loc 1 164 3 view .LVU172
 644 0094 154F     		ldr	r7, .L53+12
 162:Core/Src/clean_main.c **** 		UpdateEnc(0, 255, &stan_enc, true);
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 19


 645              		.loc 1 162 7 view .LVU173
 646 0096 0FE0     		b	.L46
 647              	.L47:
 163:Core/Src/clean_main.c **** 		dprint("DAC output:%3d",stan_enc);
 648              		.loc 1 163 3 view .LVU174
 649 0098 FFF7FEFF 		bl	UpdateEnc
 650              	.LVL52:
 164:Core/Src/clean_main.c **** 		dac_write(channel,stan_enc,dac_number);
 651              		.loc 1 164 3 is_stmt 1 view .LVU175
 652 009c B4F90010 		ldrsh	r1, [r4]
 653 00a0 3846     		mov	r0, r7
 654 00a2 FFF7FEFF 		bl	dprint
 655              	.LVL53:
 165:Core/Src/clean_main.c **** 		HAL_Delay(50);	
 656              		.loc 1 165 3 view .LVU176
 657 00a6 E8B2     		uxtb	r0, r5
 658 00a8 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 659 00aa 5FFA88F2 		uxtb	r2, r8
 660 00ae FFF7FEFF 		bl	dac_write
 661              	.LVL54:
 166:Core/Src/clean_main.c **** 	}
 662              		.loc 1 166 3 view .LVU177
 663 00b2 3220     		movs	r0, #50
 664 00b4 FFF7FEFF 		bl	HAL_Delay
 665              	.LVL55:
 666              	.L46:
 162:Core/Src/clean_main.c **** 		UpdateEnc(0, 255, &stan_enc, true);
 667              		.loc 1 162 17 view .LVU178
 162:Core/Src/clean_main.c **** 		UpdateEnc(0, 255, &stan_enc, true);
 668              		.loc 1 162 8 is_stmt 0 view .LVU179
 669 00b8 FFF7FEFF 		bl	button
 670              	.LVL56:
 163:Core/Src/clean_main.c **** 		dprint("DAC output:%3d",stan_enc);
 671              		.loc 1 163 3 is_stmt 1 view .LVU180
 672 00bc 0123     		movs	r3, #1
 673 00be 3246     		mov	r2, r6
 674 00c0 FF21     		movs	r1, #255
 162:Core/Src/clean_main.c **** 		UpdateEnc(0, 255, &stan_enc, true);
 675              		.loc 1 162 17 is_stmt 0 discriminator 1 view .LVU181
 676 00c2 0028     		cmp	r0, #0
 677 00c4 E8D0     		beq	.L47
 678              	.L48:
 168:Core/Src/clean_main.c **** 	HAL_GPIO_WritePin(EN_TUBE_GPIO_Port,EN_TUBE_Pin,0);
 679              		.loc 1 168 17 is_stmt 1 discriminator 1 view .LVU182
 168:Core/Src/clean_main.c **** 	HAL_GPIO_WritePin(EN_TUBE_GPIO_Port,EN_TUBE_Pin,0);
 680              		.loc 1 168 8 is_stmt 0 discriminator 1 view .LVU183
 681 00c6 FFF7FEFF 		bl	button
 682              	.LVL57:
 168:Core/Src/clean_main.c **** 	HAL_GPIO_WritePin(EN_TUBE_GPIO_Port,EN_TUBE_Pin,0);
 683              		.loc 1 168 17 discriminator 1 view .LVU184
 684 00ca 0246     		mov	r2, r0
 685 00cc 0028     		cmp	r0, #0
 686 00ce FAD1     		bne	.L48
 169:Core/Src/clean_main.c **** 
 687              		.loc 1 169 2 is_stmt 1 view .LVU185
 171:Core/Src/clean_main.c **** 
 688              		.loc 1 171 1 is_stmt 0 view .LVU186
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 20


 689 00d0 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 690              		.cfi_restore 14
 691              		.cfi_restore 8
 692              		.cfi_restore 7
 693              		.cfi_restore 6
 694              		.cfi_restore 5
 695              		.cfi_restore 4
 696              		.cfi_def_cfa_offset 0
 697              	.LVL58:
 169:Core/Src/clean_main.c **** 
 698              		.loc 1 169 2 view .LVU187
 699 00d4 0648     		ldr	r0, .L53+16
 700 00d6 4FF40071 		mov	r1, #512
 701 00da FFF7FEBF 		b	HAL_GPIO_WritePin
 702              	.LVL59:
 703              	.L54:
 704 00de 00BF     		.align	2
 705              	.L53:
 706 00e0 00000000 		.word	stan_enc
 707 00e4 00000000 		.word	.LC13
 708 00e8 10000000 		.word	.LC14
 709 00ec 24000000 		.word	.LC15
 710 00f0 00040240 		.word	1073873920
 711              		.cfi_endproc
 712              	.LFE255:
 714              		.section	.rodata.testAllDac.str1.4,"aMS",%progbits,1
 715              		.align	2
 716              	.LC16:
 717 0000 54657374 		.ascii	"Testing all DACs    sequentially\000"
 717      696E6720 
 717      616C6C20 
 717      44414373 
 717      20202020 
 718              		.section	.text.testAllDac,"ax",%progbits
 719              		.align	1
 720              		.p2align 2,,3
 721              		.global	testAllDac
 722              		.syntax unified
 723              		.thumb
 724              		.thumb_func
 726              	testAllDac:
 727              	.LFB256:
 173:Core/Src/clean_main.c **** 	dprint("Testing all DACs    sequentially");
 728              		.loc 1 173 18 is_stmt 1 view -0
 729              		.cfi_startproc
 730              		@ args = 0, pretend = 0, frame = 0
 731              		@ frame_needed = 0, uses_anonymous_args = 0
 174:Core/Src/clean_main.c **** 	while(button() == 1);
 732              		.loc 1 174 2 view .LVU189
 173:Core/Src/clean_main.c **** 	dprint("Testing all DACs    sequentially");
 733              		.loc 1 173 18 is_stmt 0 view .LVU190
 734 0000 38B5     		push	{r3, r4, r5, lr}
 735              		.cfi_def_cfa_offset 16
 736              		.cfi_offset 3, -16
 737              		.cfi_offset 4, -12
 738              		.cfi_offset 5, -8
 739              		.cfi_offset 14, -4
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 21


 174:Core/Src/clean_main.c **** 	while(button() == 1);
 740              		.loc 1 174 2 view .LVU191
 741 0002 2F48     		ldr	r0, .L80
 742 0004 FFF7FEFF 		bl	dprint
 743              	.LVL60:
 175:Core/Src/clean_main.c **** 	switchTube(1);
 744              		.loc 1 175 2 is_stmt 1 view .LVU192
 745              	.L56:
 175:Core/Src/clean_main.c **** 	switchTube(1);
 746              		.loc 1 175 17 discriminator 1 view .LVU193
 175:Core/Src/clean_main.c **** 	switchTube(1);
 747              		.loc 1 175 8 is_stmt 0 discriminator 1 view .LVU194
 748 0008 FFF7FEFF 		bl	button
 749              	.LVL61:
 175:Core/Src/clean_main.c **** 	switchTube(1);
 750              		.loc 1 175 17 discriminator 1 view .LVU195
 751 000c 0546     		mov	r5, r0
 752 000e 0028     		cmp	r0, #0
 753 0010 FAD1     		bne	.L56
 176:Core/Src/clean_main.c **** 	for(uint8_t i=0;i<12;i++){
 754              		.loc 1 176 2 is_stmt 1 view .LVU196
 755              	.LVL62:
 756              	.LBB42:
 757              	.LBI42:
 123:Core/Src/clean_main.c **** 	HAL_GPIO_WritePin(EN_TUBE_GPIO_Port,EN_TUBE_Pin,state);
 758              		.loc 1 123 6 view .LVU197
 759              	.LBB43:
 124:Core/Src/clean_main.c **** }
 760              		.loc 1 124 2 view .LVU198
 761 0012 2C48     		ldr	r0, .L80+4
 762 0014 0122     		movs	r2, #1
 763 0016 4FF40071 		mov	r1, #512
 764 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 765              	.LVL63:
 124:Core/Src/clean_main.c **** }
 766              		.loc 1 124 2 is_stmt 0 view .LVU199
 767              	.LBE43:
 768              	.LBE42:
 177:Core/Src/clean_main.c **** 		for(uint8_t j=0;j<220;j++){
 769              		.loc 1 177 2 is_stmt 1 view .LVU200
 770              	.LBB44:
 177:Core/Src/clean_main.c **** 		for(uint8_t j=0;j<220;j++){
 771              		.loc 1 177 6 view .LVU201
 177:Core/Src/clean_main.c **** 		for(uint8_t j=0;j<220;j++){
 772              		.loc 1 177 19 discriminator 1 view .LVU202
 773              	.L57:
 774              	.LBB45:
 178:Core/Src/clean_main.c **** 			setBar(i,j);
 775              		.loc 1 178 20 discriminator 1 view .LVU203
 776              	.LBE45:
 777              	.LBE44:
 173:Core/Src/clean_main.c **** 	dprint("Testing all DACs    sequentially");
 778              		.loc 1 173 18 is_stmt 0 view .LVU204
 779 001e 0024     		movs	r4, #0
 780 0020 02E0     		b	.L61
 781              	.LVL64:
 782              	.L58:
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 22


 783              	.LBB52:
 784              	.LBB48:
 178:Core/Src/clean_main.c **** 			setBar(i,j);
 785              		.loc 1 178 20 discriminator 1 view .LVU205
 786 0022 0134     		adds	r4, r4, #1
 787              	.LVL65:
 178:Core/Src/clean_main.c **** 			setBar(i,j);
 788              		.loc 1 178 20 discriminator 1 view .LVU206
 789 0024 DC2C     		cmp	r4, #220
 790 0026 17D0     		beq	.L64
 791              	.LVL66:
 792              	.L61:
 179:Core/Src/clean_main.c **** 			HAL_Delay(5);
 793              		.loc 1 179 4 is_stmt 1 view .LVU207
 794 0028 E1B2     		uxtb	r1, r4
 795 002a 2846     		mov	r0, r5
 796 002c FFF7FEFF 		bl	setBar
 797              	.LVL67:
 180:Core/Src/clean_main.c **** 			if(button()==1){
 798              		.loc 1 180 4 view .LVU208
 799 0030 0520     		movs	r0, #5
 800 0032 FFF7FEFF 		bl	HAL_Delay
 801              	.LVL68:
 181:Core/Src/clean_main.c **** 				switchTube(0);
 802              		.loc 1 181 4 view .LVU209
 181:Core/Src/clean_main.c **** 				switchTube(0);
 803              		.loc 1 181 7 is_stmt 0 view .LVU210
 804 0036 FFF7FEFF 		bl	button
 805              	.LVL69:
 178:Core/Src/clean_main.c **** 			setBar(i,j);
 806              		.loc 1 178 26 is_stmt 1 discriminator 2 view .LVU211
 178:Core/Src/clean_main.c **** 			setBar(i,j);
 807              		.loc 1 178 20 discriminator 1 view .LVU212
 181:Core/Src/clean_main.c **** 				switchTube(0);
 808              		.loc 1 181 6 is_stmt 0 discriminator 1 view .LVU213
 809 003a 0028     		cmp	r0, #0
 810 003c F1D0     		beq	.L58
 182:Core/Src/clean_main.c **** 				while(button() == 1);
 811              		.loc 1 182 5 is_stmt 1 view .LVU214
 812              	.LVL70:
 813              	.LBB46:
 814              	.LBI46:
 123:Core/Src/clean_main.c **** 	HAL_GPIO_WritePin(EN_TUBE_GPIO_Port,EN_TUBE_Pin,state);
 815              		.loc 1 123 6 view .LVU215
 816              	.LBB47:
 124:Core/Src/clean_main.c **** }
 817              		.loc 1 124 2 view .LVU216
 818 003e 2148     		ldr	r0, .L80+4
 819 0040 0022     		movs	r2, #0
 820 0042 4FF40071 		mov	r1, #512
 821 0046 FFF7FEFF 		bl	HAL_GPIO_WritePin
 822              	.LVL71:
 124:Core/Src/clean_main.c **** }
 823              		.loc 1 124 2 is_stmt 0 view .LVU217
 824              	.LBE47:
 825              	.LBE46:
 183:Core/Src/clean_main.c **** 				return;
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 23


 826              		.loc 1 183 5 is_stmt 1 view .LVU218
 827              	.L59:
 183:Core/Src/clean_main.c **** 				return;
 828              		.loc 1 183 20 discriminator 1 view .LVU219
 183:Core/Src/clean_main.c **** 				return;
 829              		.loc 1 183 11 is_stmt 0 discriminator 1 view .LVU220
 830 004a FFF7FEFF 		bl	button
 831              	.LVL72:
 183:Core/Src/clean_main.c **** 				return;
 832              		.loc 1 183 20 discriminator 1 view .LVU221
 833 004e 0028     		cmp	r0, #0
 834 0050 FBD1     		bne	.L59
 835              	.LBE48:
 836              	.LBE52:
 201:Core/Src/clean_main.c **** 
 837              		.loc 1 201 1 view .LVU222
 838 0052 38BD     		pop	{r3, r4, r5, pc}
 839              	.LVL73:
 840              	.L62:
 841              	.LBB53:
 842              	.LBB49:
 187:Core/Src/clean_main.c **** 			setBar(i,j);
 843              		.loc 1 187 22 discriminator 1 view .LVU223
 844 0054 052C     		cmp	r4, #5
 845 0056 17D0     		beq	.L79
 846              	.LVL74:
 847              	.L64:
 188:Core/Src/clean_main.c **** 			HAL_Delay(5);
 848              		.loc 1 188 4 is_stmt 1 view .LVU224
 849 0058 2146     		mov	r1, r4
 850 005a 2846     		mov	r0, r5
 851 005c FFF7FEFF 		bl	setBar
 852              	.LVL75:
 189:Core/Src/clean_main.c **** 			if(button()==1){
 853              		.loc 1 189 4 view .LVU225
 854 0060 0520     		movs	r0, #5
 855 0062 FFF7FEFF 		bl	HAL_Delay
 856              	.LVL76:
 190:Core/Src/clean_main.c **** 				switchTube(0);
 857              		.loc 1 190 4 view .LVU226
 190:Core/Src/clean_main.c **** 				switchTube(0);
 858              		.loc 1 190 7 is_stmt 0 view .LVU227
 859 0066 FFF7FEFF 		bl	button
 860              	.LVL77:
 187:Core/Src/clean_main.c **** 			setBar(i,j);
 861              		.loc 1 187 26 is_stmt 1 discriminator 2 view .LVU228
 862 006a 013C     		subs	r4, r4, #1
 863              	.LVL78:
 187:Core/Src/clean_main.c **** 			setBar(i,j);
 864              		.loc 1 187 26 is_stmt 0 discriminator 2 view .LVU229
 865 006c E4B2     		uxtb	r4, r4
 866              	.LVL79:
 187:Core/Src/clean_main.c **** 			setBar(i,j);
 867              		.loc 1 187 22 is_stmt 1 discriminator 1 view .LVU230
 190:Core/Src/clean_main.c **** 				switchTube(0);
 868              		.loc 1 190 6 is_stmt 0 discriminator 1 view .LVU231
 869 006e 0028     		cmp	r0, #0
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 24


 870 0070 F0D0     		beq	.L62
 191:Core/Src/clean_main.c **** 				while(button() == 1);
 871              		.loc 1 191 5 is_stmt 1 view .LVU232
 872              	.LVL80:
 873              	.LBB50:
 874              	.LBI50:
 123:Core/Src/clean_main.c **** 	HAL_GPIO_WritePin(EN_TUBE_GPIO_Port,EN_TUBE_Pin,state);
 875              		.loc 1 123 6 view .LVU233
 876              	.LBB51:
 124:Core/Src/clean_main.c **** }
 877              		.loc 1 124 2 view .LVU234
 878 0072 1448     		ldr	r0, .L80+4
 879 0074 0022     		movs	r2, #0
 880 0076 4FF40071 		mov	r1, #512
 881 007a FFF7FEFF 		bl	HAL_GPIO_WritePin
 882              	.LVL81:
 124:Core/Src/clean_main.c **** }
 883              		.loc 1 124 2 is_stmt 0 view .LVU235
 884              	.LBE51:
 885              	.LBE50:
 192:Core/Src/clean_main.c **** 				return;
 886              		.loc 1 192 5 is_stmt 1 view .LVU236
 887              	.L63:
 192:Core/Src/clean_main.c **** 				return;
 888              		.loc 1 192 20 discriminator 1 view .LVU237
 192:Core/Src/clean_main.c **** 				return;
 889              		.loc 1 192 11 is_stmt 0 discriminator 1 view .LVU238
 890 007e FFF7FEFF 		bl	button
 891              	.LVL82:
 192:Core/Src/clean_main.c **** 				return;
 892              		.loc 1 192 20 discriminator 1 view .LVU239
 893 0082 0028     		cmp	r0, #0
 894 0084 FBD1     		bne	.L63
 895              	.LBE49:
 896              	.LBE53:
 201:Core/Src/clean_main.c **** 
 897              		.loc 1 201 1 view .LVU240
 898 0086 38BD     		pop	{r3, r4, r5, pc}
 899              	.LVL83:
 900              	.L79:
 901              	.LBB54:
 177:Core/Src/clean_main.c **** 		for(uint8_t j=0;j<220;j++){
 902              		.loc 1 177 24 is_stmt 1 discriminator 2 view .LVU241
 903 0088 6C1C     		adds	r4, r5, #1
 904              	.LVL84:
 177:Core/Src/clean_main.c **** 		for(uint8_t j=0;j<220;j++){
 905              		.loc 1 177 24 is_stmt 0 discriminator 2 view .LVU242
 906 008a E5B2     		uxtb	r5, r4
 907              	.LVL85:
 177:Core/Src/clean_main.c **** 		for(uint8_t j=0;j<220;j++){
 908              		.loc 1 177 19 is_stmt 1 discriminator 1 view .LVU243
 909 008c 0C2D     		cmp	r5, #12
 910 008e C6D1     		bne	.L57
 911 0090 0446     		mov	r4, r0
 912              	.L65:
 913              	.LVL86:
 177:Core/Src/clean_main.c **** 		for(uint8_t j=0;j<220;j++){
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 25


 914              		.loc 1 177 19 is_stmt 0 discriminator 1 view .LVU244
 915              	.LBE54:
 916              	.LBB55:
 197:Core/Src/clean_main.c **** 	while(button()==0);
 917              		.loc 1 197 28 is_stmt 1 discriminator 3 view .LVU245
 918 0092 E0B2     		uxtb	r0, r4
 919 0094 DC21     		movs	r1, #220
 197:Core/Src/clean_main.c **** 	while(button()==0);
 920              		.loc 1 197 19 is_stmt 0 discriminator 2 view .LVU246
 921 0096 0134     		adds	r4, r4, #1
 922              	.LVL87:
 197:Core/Src/clean_main.c **** 	while(button()==0);
 923              		.loc 1 197 28 discriminator 3 view .LVU247
 924 0098 FFF7FEFF 		bl	setBar
 925              	.LVL88:
 197:Core/Src/clean_main.c **** 	while(button()==0);
 926              		.loc 1 197 24 is_stmt 1 discriminator 3 view .LVU248
 197:Core/Src/clean_main.c **** 	while(button()==0);
 927              		.loc 1 197 19 discriminator 2 view .LVU249
 928 009c 0C2C     		cmp	r4, #12
 929 009e F8D1     		bne	.L65
 930              	.L66:
 931              	.LBE55:
 198:Core/Src/clean_main.c **** 	switchTube(0);
 932              		.loc 1 198 16 discriminator 1 view .LVU250
 198:Core/Src/clean_main.c **** 	switchTube(0);
 933              		.loc 1 198 8 is_stmt 0 discriminator 1 view .LVU251
 934 00a0 FFF7FEFF 		bl	button
 935              	.LVL89:
 198:Core/Src/clean_main.c **** 	switchTube(0);
 936              		.loc 1 198 16 discriminator 1 view .LVU252
 937 00a4 0028     		cmp	r0, #0
 938 00a6 FBD0     		beq	.L66
 199:Core/Src/clean_main.c **** 	while(button() == 1);
 939              		.loc 1 199 2 is_stmt 1 view .LVU253
 940              	.LVL90:
 941              	.LBB56:
 942              	.LBI56:
 123:Core/Src/clean_main.c **** 	HAL_GPIO_WritePin(EN_TUBE_GPIO_Port,EN_TUBE_Pin,state);
 943              		.loc 1 123 6 view .LVU254
 944              	.LBB57:
 124:Core/Src/clean_main.c **** }
 945              		.loc 1 124 2 view .LVU255
 946 00a8 0648     		ldr	r0, .L80+4
 947 00aa 0022     		movs	r2, #0
 948 00ac 4FF40071 		mov	r1, #512
 949 00b0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 950              	.LVL91:
 124:Core/Src/clean_main.c **** }
 951              		.loc 1 124 2 is_stmt 0 view .LVU256
 952              	.LBE57:
 953              	.LBE56:
 200:Core/Src/clean_main.c **** }
 954              		.loc 1 200 2 is_stmt 1 view .LVU257
 955              	.L67:
 200:Core/Src/clean_main.c **** }
 956              		.loc 1 200 17 discriminator 1 view .LVU258
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 26


 200:Core/Src/clean_main.c **** }
 957              		.loc 1 200 8 is_stmt 0 discriminator 1 view .LVU259
 958 00b4 FFF7FEFF 		bl	button
 959              	.LVL92:
 200:Core/Src/clean_main.c **** }
 960              		.loc 1 200 17 discriminator 1 view .LVU260
 961 00b8 0028     		cmp	r0, #0
 962 00ba FBD1     		bne	.L67
 201:Core/Src/clean_main.c **** 
 963              		.loc 1 201 1 view .LVU261
 964 00bc 38BD     		pop	{r3, r4, r5, pc}
 965              	.LVL93:
 966              	.L81:
 201:Core/Src/clean_main.c **** 
 967              		.loc 1 201 1 view .LVU262
 968 00be 00BF     		.align	2
 969              	.L80:
 970 00c0 00000000 		.word	.LC16
 971 00c4 00040240 		.word	1073873920
 972              		.cfi_endproc
 973              	.LFE256:
 975              		.section	.rodata.display_bars.str1.4,"aMS",%progbits,1
 976              		.align	2
 977              	.LC17:
 978 0000 2020204E 		.ascii	"   Nixie spectrum         analyzer      \000"
 978      69786965 
 978      20737065 
 978      63747275 
 978      6D202020 
 979              		.global	__aeabi_dadd
 980              		.global	__aeabi_d2f
 981              		.global	__aeabi_dsub
 982              		.global	__aeabi_dmul
 983              		.global	__aeabi_d2uiz
 984              		.section	.text.display_bars,"ax",%progbits
 985              		.align	1
 986              		.p2align 2,,3
 987              		.global	display_bars
 988              		.syntax unified
 989              		.thumb
 990              		.thumb_func
 992              	display_bars:
 993              	.LFB258:
 214:Core/Src/clean_main.c **** 
 215:Core/Src/clean_main.c **** void display_bars(){
 994              		.loc 1 215 20 is_stmt 1 view -0
 995              		.cfi_startproc
 996              		@ args = 0, pretend = 0, frame = 48
 997              		@ frame_needed = 0, uses_anonymous_args = 0
 216:Core/Src/clean_main.c **** 	switchTube(1);
 998              		.loc 1 216 2 view .LVU264
 999              	.LVL94:
 1000              	.LBB58:
 1001              	.LBI58:
 123:Core/Src/clean_main.c **** 	HAL_GPIO_WritePin(EN_TUBE_GPIO_Port,EN_TUBE_Pin,state);
 1002              		.loc 1 123 6 view .LVU265
 1003              	.LBB59:
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 27


 124:Core/Src/clean_main.c **** }
 1004              		.loc 1 124 2 view .LVU266
 1005              	.LBE59:
 1006              	.LBE58:
 215:Core/Src/clean_main.c **** 	switchTube(1);
 1007              		.loc 1 215 20 is_stmt 0 view .LVU267
 1008 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1009              		.cfi_def_cfa_offset 32
 1010              		.cfi_offset 4, -32
 1011              		.cfi_offset 5, -28
 1012              		.cfi_offset 6, -24
 1013              		.cfi_offset 7, -20
 1014              		.cfi_offset 8, -16
 1015              		.cfi_offset 9, -12
 1016              		.cfi_offset 10, -8
 1017              		.cfi_offset 14, -4
 1018 0004 2DED028B 		vpush.64	{d8}
 1019              		.cfi_def_cfa_offset 40
 1020              		.cfi_offset 80, -40
 1021              		.cfi_offset 81, -36
 1022              	.LBB62:
 1023              	.LBB60:
 124:Core/Src/clean_main.c **** }
 1024              		.loc 1 124 2 view .LVU268
 1025 0008 3D48     		ldr	r0, .L106+16
 1026              	.LBE60:
 1027              	.LBE62:
 215:Core/Src/clean_main.c **** 	switchTube(1);
 1028              		.loc 1 215 20 view .LVU269
 1029 000a 8CB0     		sub	sp, sp, #48
 1030              		.cfi_def_cfa_offset 88
 1031              	.LBB63:
 1032              	.LBB61:
 124:Core/Src/clean_main.c **** }
 1033              		.loc 1 124 2 view .LVU270
 1034 000c 0122     		movs	r2, #1
 1035 000e 4FF40071 		mov	r1, #512
 1036 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1037              	.LVL95:
 124:Core/Src/clean_main.c **** }
 1038              		.loc 1 124 2 view .LVU271
 1039              	.LBE61:
 1040              	.LBE63:
 217:Core/Src/clean_main.c **** 	for(uint8_t i=0;i<15;i++){
 1041              		.loc 1 217 2 is_stmt 1 view .LVU272
 1042              	.LBB64:
 1043              		.loc 1 217 6 view .LVU273
 1044              		.loc 1 217 19 discriminator 1 view .LVU274
 1045              		.loc 1 217 14 is_stmt 0 view .LVU275
 1046 0016 0025     		movs	r5, #0
 1047              	.LVL96:
 1048              	.L83:
 1049              	.LBB65:
 218:Core/Src/clean_main.c **** 		for(uint8_t j=0;j<FILTER_NUMBER;j++){
 1050              		.loc 1 218 20 is_stmt 1 discriminator 1 view .LVU276
 1051              	.LBE65:
 1052              	.LBE64:
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 28


 215:Core/Src/clean_main.c **** 	switchTube(1);
 1053              		.loc 1 215 20 is_stmt 0 view .LVU277
 1054 0018 0024     		movs	r4, #0
 1055              	.LVL97:
 1056              	.L84:
 1057              	.LBB67:
 1058              	.LBB66:
 219:Core/Src/clean_main.c **** 			setBarInv(j,i);
 1059              		.loc 1 219 4 is_stmt 1 view .LVU278
 1060 001a E0B2     		uxtb	r0, r4
 1061 001c 2946     		mov	r1, r5
 1062 001e FFF7FEFF 		bl	setBarInv
 1063              	.LVL98:
 220:Core/Src/clean_main.c **** 			HAL_Delay(1);
 1064              		.loc 1 220 4 view .LVU279
 218:Core/Src/clean_main.c **** 		for(uint8_t j=0;j<FILTER_NUMBER;j++){
 1065              		.loc 1 218 20 is_stmt 0 discriminator 1 view .LVU280
 1066 0022 0134     		adds	r4, r4, #1
 1067              	.LVL99:
 1068              		.loc 1 220 4 view .LVU281
 1069 0024 0120     		movs	r0, #1
 1070 0026 FFF7FEFF 		bl	HAL_Delay
 1071              	.LVL100:
 218:Core/Src/clean_main.c **** 		for(uint8_t j=0;j<FILTER_NUMBER;j++){
 1072              		.loc 1 218 36 is_stmt 1 discriminator 3 view .LVU282
 218:Core/Src/clean_main.c **** 		for(uint8_t j=0;j<FILTER_NUMBER;j++){
 1073              		.loc 1 218 20 discriminator 1 view .LVU283
 1074 002a 0C2C     		cmp	r4, #12
 1075 002c F5D1     		bne	.L84
 1076              	.LBE66:
 217:Core/Src/clean_main.c **** 		for(uint8_t j=0;j<FILTER_NUMBER;j++){
 1077              		.loc 1 217 24 discriminator 2 view .LVU284
 1078 002e 0135     		adds	r5, r5, #1
 1079              	.LVL101:
 217:Core/Src/clean_main.c **** 		for(uint8_t j=0;j<FILTER_NUMBER;j++){
 1080              		.loc 1 217 24 is_stmt 0 discriminator 2 view .LVU285
 1081 0030 EDB2     		uxtb	r5, r5
 1082              	.LVL102:
 217:Core/Src/clean_main.c **** 		for(uint8_t j=0;j<FILTER_NUMBER;j++){
 1083              		.loc 1 217 19 is_stmt 1 discriminator 1 view .LVU286
 1084 0032 0F2D     		cmp	r5, #15
 1085 0034 F0D1     		bne	.L83
 1086              	.LBE67:
 221:Core/Src/clean_main.c **** 		}
 222:Core/Src/clean_main.c **** 	}
 223:Core/Src/clean_main.c **** 	float32_t smooth_bar_values[FILTER_NUMBER];
 1087              		.loc 1 223 2 view .LVU287
 224:Core/Src/clean_main.c **** 	dprint("   Nixie spectrum         analyzer      ");
 1088              		.loc 1 224 2 view .LVU288
 1089 0036 3348     		ldr	r0, .L106+20
 1090 0038 FFF7FEFF 		bl	dprint
 1091              	.LVL103:
 225:Core/Src/clean_main.c **** 	while(button() == 1);
 1092              		.loc 1 225 2 view .LVU289
 1093              	.L86:
 1094              		.loc 1 225 17 discriminator 1 view .LVU290
 1095              		.loc 1 225 8 is_stmt 0 discriminator 1 view .LVU291
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 29


 1096 003c FFF7FEFF 		bl	button
 1097              	.LVL104:
 1098              		.loc 1 225 17 discriminator 1 view .LVU292
 1099 0040 0028     		cmp	r0, #0
 1100 0042 FBD1     		bne	.L86
 1101              	.LBB68:
 226:Core/Src/clean_main.c **** 	while(button() == 0){
 227:Core/Src/clean_main.c **** 		for(uint8_t i=0;i<FILTER_NUMBER;i++){
 228:Core/Src/clean_main.c **** 			if(button() == 1) break;
 229:Core/Src/clean_main.c **** 			if(bar_values[i]>smooth_bar_values[i]){
 230:Core/Src/clean_main.c **** 				smooth_bar_values[i] += 0.008;
 231:Core/Src/clean_main.c **** 			}else if(bar_values[i]<smooth_bar_values[i]){
 232:Core/Src/clean_main.c **** 				smooth_bar_values[i] -= 0.008;
 1102              		.loc 1 232 26 view .LVU293
 1103 0044 0FF2A809 		adr	r9, .L106
 1104 0048 D9E90089 		ldrd	r8, [r9]
 1105              	.LVL105:
 1106              	.L87:
 1107              		.loc 1 232 26 view .LVU294
 1108              	.LBE68:
 226:Core/Src/clean_main.c **** 	while(button() == 0){
 1109              		.loc 1 226 17 is_stmt 1 view .LVU295
 226:Core/Src/clean_main.c **** 	while(button() == 0){
 1110              		.loc 1 226 8 is_stmt 0 view .LVU296
 1111 004c FFF7FEFF 		bl	button
 1112              	.LVL106:
 226:Core/Src/clean_main.c **** 	while(button() == 0){
 1113              		.loc 1 226 17 discriminator 1 view .LVU297
 1114 0050 0546     		mov	r5, r0
 1115 0052 0028     		cmp	r0, #0
 1116 0054 39D1     		bne	.L96
 1117 0056 2C4F     		ldr	r7, .L106+24
 1118 0058 6E46     		mov	r6, sp
 1119 005a 1AE0     		b	.L93
 1120              	.LVL107:
 1121              	.L105:
 1122              	.LBB69:
 230:Core/Src/clean_main.c **** 			}else if(bar_values[i]<smooth_bar_values[i]){
 1123              		.loc 1 230 26 view .LVU298
 1124 005c FFF7FEFF 		bl	__aeabi_dadd
 1125              	.LVL108:
 1126 0060 FFF7FEFF 		bl	__aeabi_d2f
 1127              	.LVL109:
 1128 0064 0446     		mov	r4, r0	@ float
 1129 0066 3060     		str	r0, [r6]	@ float
 1130              	.L91:
 233:Core/Src/clean_main.c **** 			}
 234:Core/Src/clean_main.c **** 			setBarInv(i,(uint8_t)(smooth_bar_values[i]*128.125)+15);
 1131              		.loc 1 234 4 is_stmt 1 view .LVU299
 1132              		.loc 1 234 43 is_stmt 0 view .LVU300
 1133 0068 2046     		mov	r0, r4	@ float
 1134 006a FFF7FEFF 		bl	__aeabi_f2d
 1135              	.LVL110:
 1136              		.loc 1 234 46 view .LVU301
 1137 006e 22A3     		adr	r3, .L106+8
 1138 0070 D3E90023 		ldrd	r2, [r3]
 1139 0074 FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 30


 1140              	.LVL111:
 1141              		.loc 1 234 16 view .LVU302
 1142 0078 FFF7FEFF 		bl	__aeabi_d2uiz
 1143              	.LVL112:
 1144              		.loc 1 234 4 view .LVU303
 1145 007c 00F10F01 		add	r1, r0, #15
 1146 0080 C9B2     		uxtb	r1, r1
 1147 0082 5046     		mov	r0, r10
 227:Core/Src/clean_main.c **** 			if(button() == 1) break;
 1148              		.loc 1 227 20 discriminator 1 view .LVU304
 1149 0084 0135     		adds	r5, r5, #1
 1150              		.loc 1 234 4 view .LVU305
 1151 0086 FFF7FEFF 		bl	setBarInv
 1152              	.LVL113:
 227:Core/Src/clean_main.c **** 			if(button() == 1) break;
 1153              		.loc 1 227 36 is_stmt 1 discriminator 2 view .LVU306
 227:Core/Src/clean_main.c **** 			if(button() == 1) break;
 1154              		.loc 1 227 20 discriminator 1 view .LVU307
 1155 008a 0C2D     		cmp	r5, #12
 1156 008c 06F10406 		add	r6, r6, #4
 1157 0090 2AD0     		beq	.L94
 1158              	.L93:
 1159 0092 5FFA85FA 		uxtb	r10, r5
 1160              	.LVL114:
 228:Core/Src/clean_main.c **** 			if(bar_values[i]>smooth_bar_values[i]){
 1161              		.loc 1 228 4 view .LVU308
 228:Core/Src/clean_main.c **** 			if(bar_values[i]>smooth_bar_values[i]){
 1162              		.loc 1 228 7 is_stmt 0 view .LVU309
 1163 0096 FFF7FEFF 		bl	button
 1164              	.LVL115:
 229:Core/Src/clean_main.c **** 				smooth_bar_values[i] += 0.008;
 1165              		.loc 1 229 4 is_stmt 1 view .LVU310
 228:Core/Src/clean_main.c **** 			if(bar_values[i]>smooth_bar_values[i]){
 1166              		.loc 1 228 6 is_stmt 0 discriminator 1 view .LVU311
 1167 009a 28BB     		cbnz	r0, .L94
 229:Core/Src/clean_main.c **** 				smooth_bar_values[i] += 0.008;
 1168              		.loc 1 229 38 view .LVU312
 1169 009c 3468     		ldr	r4, [r6]	@ float
 229:Core/Src/clean_main.c **** 				smooth_bar_values[i] += 0.008;
 1170              		.loc 1 229 17 view .LVU313
 1171 009e B7EC018A 		vldmia.32	r7!, {s16}
 230:Core/Src/clean_main.c **** 			}else if(bar_values[i]<smooth_bar_values[i]){
 1172              		.loc 1 230 22 view .LVU314
 1173 00a2 2046     		mov	r0, r4	@ float
 1174 00a4 FFF7FEFF 		bl	__aeabi_f2d
 1175              	.LVL116:
 230:Core/Src/clean_main.c **** 			}else if(bar_values[i]<smooth_bar_values[i]){
 1176              		.loc 1 230 5 is_stmt 1 view .LVU315
 231:Core/Src/clean_main.c **** 				smooth_bar_values[i] -= 0.008;
 1177              		.loc 1 231 10 view .LVU316
 229:Core/Src/clean_main.c **** 				smooth_bar_values[i] += 0.008;
 1178              		.loc 1 229 6 is_stmt 0 view .LVU317
 1179 00a8 07EE904A 		vmov	s15, r4
 1180 00ac B4EEE78A 		vcmpe.f32	s16, s15
 1181 00b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 230:Core/Src/clean_main.c **** 			}else if(bar_values[i]<smooth_bar_values[i]){
 1182              		.loc 1 230 26 view .LVU318
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 31


 1183 00b4 4246     		mov	r2, r8
 1184 00b6 4B46     		mov	r3, r9
 229:Core/Src/clean_main.c **** 				smooth_bar_values[i] += 0.008;
 1185              		.loc 1 229 6 view .LVU319
 1186 00b8 D0DC     		bgt	.L105
 232:Core/Src/clean_main.c **** 			}
 1187              		.loc 1 232 5 is_stmt 1 view .LVU320
 231:Core/Src/clean_main.c **** 				smooth_bar_values[i] -= 0.008;
 1188              		.loc 1 231 12 is_stmt 0 view .LVU321
 1189 00ba D5D5     		bpl	.L91
 232:Core/Src/clean_main.c **** 			}
 1190              		.loc 1 232 26 view .LVU322
 1191 00bc FFF7FEFF 		bl	__aeabi_dsub
 1192              	.LVL117:
 1193 00c0 FFF7FEFF 		bl	__aeabi_d2f
 1194              	.LVL118:
 1195 00c4 0446     		mov	r4, r0	@ float
 1196 00c6 3060     		str	r0, [r6]	@ float
 1197 00c8 CEE7     		b	.L91
 1198              	.LVL119:
 1199              	.L96:
 232:Core/Src/clean_main.c **** 			}
 1200              		.loc 1 232 26 view .LVU323
 1201              	.LBE69:
 235:Core/Src/clean_main.c **** 		}
 236:Core/Src/clean_main.c **** 		HAL_Delay(1);
 237:Core/Src/clean_main.c **** 	}
 238:Core/Src/clean_main.c **** 	while(button() == 1);
 1202              		.loc 1 238 17 is_stmt 1 discriminator 1 view .LVU324
 1203              		.loc 1 238 8 is_stmt 0 discriminator 1 view .LVU325
 1204 00ca FFF7FEFF 		bl	button
 1205              	.LVL120:
 1206              		.loc 1 238 17 discriminator 1 view .LVU326
 1207 00ce 0246     		mov	r2, r0
 1208 00d0 0028     		cmp	r0, #0
 1209 00d2 FAD1     		bne	.L96
 239:Core/Src/clean_main.c **** 	switchTube(0);
 1210              		.loc 1 239 2 is_stmt 1 view .LVU327
 1211              	.LVL121:
 1212              	.LBB70:
 1213              	.LBI70:
 123:Core/Src/clean_main.c **** 	HAL_GPIO_WritePin(EN_TUBE_GPIO_Port,EN_TUBE_Pin,state);
 1214              		.loc 1 123 6 view .LVU328
 1215              	.LBB71:
 124:Core/Src/clean_main.c **** }
 1216              		.loc 1 124 2 view .LVU329
 1217 00d4 0A48     		ldr	r0, .L106+16
 1218 00d6 4FF40071 		mov	r1, #512
 1219              	.LBE71:
 1220              	.LBE70:
 240:Core/Src/clean_main.c **** }
 1221              		.loc 1 240 1 is_stmt 0 view .LVU330
 1222 00da 0CB0     		add	sp, sp, #48
 1223              		.cfi_remember_state
 1224              		.cfi_def_cfa_offset 40
 1225              		@ sp needed
 1226 00dc BDEC028B 		vldm	sp!, {d8}
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 32


 1227              		.cfi_restore 80
 1228              		.cfi_restore 81
 1229              		.cfi_def_cfa_offset 32
 1230 00e0 BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 1231              		.cfi_restore 14
 1232              		.cfi_restore 10
 1233              		.cfi_restore 9
 1234              		.cfi_restore 8
 1235              		.cfi_restore 7
 1236              		.cfi_restore 6
 1237              		.cfi_restore 5
 1238              		.cfi_restore 4
 1239              		.cfi_def_cfa_offset 0
 1240              	.LBB73:
 1241              	.LBB72:
 124:Core/Src/clean_main.c **** }
 1242              		.loc 1 124 2 view .LVU331
 1243 00e4 FFF7FEBF 		b	HAL_GPIO_WritePin
 1244              	.LVL122:
 1245              	.L94:
 1246              		.cfi_restore_state
 124:Core/Src/clean_main.c **** }
 1247              		.loc 1 124 2 view .LVU332
 1248              	.LBE72:
 1249              	.LBE73:
 236:Core/Src/clean_main.c **** 	}
 1250              		.loc 1 236 3 is_stmt 1 view .LVU333
 1251 00e8 0120     		movs	r0, #1
 1252 00ea FFF7FEFF 		bl	HAL_Delay
 1253              	.LVL123:
 1254 00ee ADE7     		b	.L87
 1255              	.L107:
 1256              		.align	3
 1257              	.L106:
 1258 00f0 FCA9F1D2 		.word	-755914244
 1259 00f4 4D62803F 		.word	1065378381
 1260 00f8 00000000 		.word	0
 1261 00fc 00046040 		.word	1080034304
 1262 0100 00040240 		.word	1073873920
 1263 0104 00000000 		.word	.LC17
 1264 0108 00000000 		.word	bar_values
 1265              		.cfi_endproc
 1266              	.LFE258:
 1268              		.section	.text.initializeFilters,"ax",%progbits
 1269              		.align	1
 1270              		.p2align 2,,3
 1271              		.global	initializeFilters
 1272              		.syntax unified
 1273              		.thumb
 1274              		.thumb_func
 1276              	initializeFilters:
 1277              	.LVL124:
 1278              	.LFB249:
  72:Core/Src/clean_main.c **** 	for(uint8_t i=0;i<numberOfFilters;i++){
 1279              		.loc 1 72 48 view -0
 1280              		.cfi_startproc
 1281              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 33


 1282              		@ frame_needed = 0, uses_anonymous_args = 0
  73:Core/Src/clean_main.c **** 		arm_biquad_cascade_df2T_init_f32(&filter[i],1,filterCoefficients[i],filterState[i]);
 1283              		.loc 1 73 2 view .LVU335
 1284              	.LBB74:
  73:Core/Src/clean_main.c **** 		arm_biquad_cascade_df2T_init_f32(&filter[i],1,filterCoefficients[i],filterState[i]);
 1285              		.loc 1 73 6 view .LVU336
  73:Core/Src/clean_main.c **** 		arm_biquad_cascade_df2T_init_f32(&filter[i],1,filterCoefficients[i],filterState[i]);
 1286              		.loc 1 73 19 discriminator 1 view .LVU337
 1287 0000 98B1     		cbz	r0, .L114
 1288              	.LBE74:
  72:Core/Src/clean_main.c **** 	for(uint8_t i=0;i<numberOfFilters;i++){
 1289              		.loc 1 72 48 is_stmt 0 view .LVU338
 1290 0002 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1291              		.cfi_def_cfa_offset 24
 1292              		.cfi_offset 3, -24
 1293              		.cfi_offset 4, -20
 1294              		.cfi_offset 5, -16
 1295              		.cfi_offset 6, -12
 1296              		.cfi_offset 7, -8
 1297              		.cfi_offset 14, -4
 1298 0004 094C     		ldr	r4, .L117
 1299 0006 0A4E     		ldr	r6, .L117+4
 1300 0008 0A4D     		ldr	r5, .L117+8
 1301 000a 04EBC007 		add	r7, r4, r0, lsl #3
 1302              	.LVL125:
 1303              	.L110:
 1304              	.LBB75:
  74:Core/Src/clean_main.c **** 	}
 1305              		.loc 1 74 3 is_stmt 1 view .LVU339
 1306 000e 2346     		mov	r3, r4
 1307 0010 2A46     		mov	r2, r5
 1308 0012 3046     		mov	r0, r6
 1309 0014 0121     		movs	r1, #1
  73:Core/Src/clean_main.c **** 		arm_biquad_cascade_df2T_init_f32(&filter[i],1,filterCoefficients[i],filterState[i]);
 1310              		.loc 1 73 19 is_stmt 0 discriminator 1 view .LVU340
 1311 0016 0834     		adds	r4, r4, #8
  74:Core/Src/clean_main.c **** 	}
 1312              		.loc 1 74 3 view .LVU341
 1313 0018 FFF7FEFF 		bl	arm_biquad_cascade_df2T_init_f32
 1314              	.LVL126:
  73:Core/Src/clean_main.c **** 		arm_biquad_cascade_df2T_init_f32(&filter[i],1,filterCoefficients[i],filterState[i]);
 1315              		.loc 1 73 37 is_stmt 1 discriminator 3 view .LVU342
  73:Core/Src/clean_main.c **** 		arm_biquad_cascade_df2T_init_f32(&filter[i],1,filterCoefficients[i],filterState[i]);
 1316              		.loc 1 73 19 discriminator 1 view .LVU343
 1317 001c A742     		cmp	r7, r4
 1318 001e 06F10C06 		add	r6, r6, #12
 1319 0022 05F11405 		add	r5, r5, #20
 1320 0026 F2D1     		bne	.L110
 1321              	.LBE75:
  76:Core/Src/clean_main.c **** 
 1322              		.loc 1 76 1 is_stmt 0 view .LVU344
 1323 0028 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1324              	.LVL127:
 1325              	.L114:
 1326              		.cfi_def_cfa_offset 0
 1327              		.cfi_restore 3
 1328              		.cfi_restore 4
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 34


 1329              		.cfi_restore 5
 1330              		.cfi_restore 6
 1331              		.cfi_restore 7
 1332              		.cfi_restore 14
  76:Core/Src/clean_main.c **** 
 1333              		.loc 1 76 1 view .LVU345
 1334 002a 7047     		bx	lr
 1335              	.L118:
 1336              		.align	2
 1337              	.L117:
 1338 002c 00000000 		.word	filterState
 1339 0030 00000000 		.word	filter
 1340 0034 00000000 		.word	filterCoefficients
 1341              		.cfi_endproc
 1342              	.LFE249:
 1344              		.section	.text.processBand,"ax",%progbits
 1345              		.align	1
 1346              		.p2align 2,,3
 1347              		.global	processBand
 1348              		.syntax unified
 1349              		.thumb
 1350              		.thumb_func
 1352              	processBand:
 1353              	.LVL128:
 1354              	.LFB250:
  78:Core/Src/clean_main.c **** 	if(bandNumber>FILTER_NUMBER-1) return;
 1355              		.loc 1 78 37 is_stmt 1 view -0
 1356              		.cfi_startproc
 1357              		@ args = 0, pretend = 0, frame = 0
 1358              		@ frame_needed = 0, uses_anonymous_args = 0
  79:Core/Src/clean_main.c **** 	arm_biquad_cascade_df2T_f32(&filter[bandNumber],filterIn,filterOut[bandNumber],BLOCK_SIZE);
 1359              		.loc 1 79 2 view .LVU347
  79:Core/Src/clean_main.c **** 	arm_biquad_cascade_df2T_f32(&filter[bandNumber],filterIn,filterOut[bandNumber],BLOCK_SIZE);
 1360              		.loc 1 79 4 is_stmt 0 view .LVU348
 1361 0000 0B28     		cmp	r0, #11
 1362 0002 00D9     		bls	.L130
 1363 0004 7047     		bx	lr
 1364              	.L130:
 1365              	.LVL129:
 1366              	.LBB79:
 1367              	.LBI79:
  78:Core/Src/clean_main.c **** 	if(bandNumber>FILTER_NUMBER-1) return;
 1368              		.loc 1 78 6 is_stmt 1 view .LVU349
 1369              	.LBB80:
  80:Core/Src/clean_main.c **** 	uint16_t max_value = filterOut[bandNumber][0]; 
 1370              		.loc 1 80 2 view .LVU350
 1371              	.LBE80:
 1372              	.LBE79:
  78:Core/Src/clean_main.c **** 	if(bandNumber>FILTER_NUMBER-1) return;
 1373              		.loc 1 78 37 is_stmt 0 view .LVU351
 1374 0006 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1375              		.cfi_def_cfa_offset 24
 1376              		.cfi_offset 3, -24
 1377              		.cfi_offset 4, -20
 1378              		.cfi_offset 5, -16
 1379              		.cfi_offset 6, -12
 1380              		.cfi_offset 7, -8
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 35


 1381              		.cfi_offset 14, -4
 1382              	.LBB84:
 1383              	.LBB83:
  80:Core/Src/clean_main.c **** 	uint16_t max_value = filterOut[bandNumber][0]; 
 1384              		.loc 1 80 68 view .LVU352
 1385 0008 1F4E     		ldr	r6, .L131
  80:Core/Src/clean_main.c **** 	uint16_t max_value = filterOut[bandNumber][0]; 
 1386              		.loc 1 80 30 view .LVU353
 1387 000a 204B     		ldr	r3, .L131+4
  80:Core/Src/clean_main.c **** 	uint16_t max_value = filterOut[bandNumber][0]; 
 1388              		.loc 1 80 2 view .LVU354
 1389 000c 2049     		ldr	r1, .L131+8
  80:Core/Src/clean_main.c **** 	uint16_t max_value = filterOut[bandNumber][0]; 
 1390              		.loc 1 80 68 view .LVU355
 1391 000e 06EB4037 		add	r7, r6, r0, lsl #13
 1392 0012 0446     		mov	r4, r0
  80:Core/Src/clean_main.c **** 	uint16_t max_value = filterOut[bandNumber][0]; 
 1393              		.loc 1 80 30 view .LVU356
 1394 0014 00EB4000 		add	r0, r0, r0, lsl #1
 1395              	.LVL130:
  80:Core/Src/clean_main.c **** 	uint16_t max_value = filterOut[bandNumber][0]; 
 1396              		.loc 1 80 2 view .LVU357
 1397 0018 03EB8000 		add	r0, r3, r0, lsl #2
 1398 001c 3A46     		mov	r2, r7
 1399 001e 4FF40063 		mov	r3, #2048
 1400 0022 FFF7FEFF 		bl	arm_biquad_cascade_df2T_f32
 1401              	.LVL131:
  81:Core/Src/clean_main.c **** 	for(uint16_t i=1;i<BLOCK_SIZE;i++){
 1402              		.loc 1 81 2 is_stmt 1 view .LVU358
  81:Core/Src/clean_main.c **** 	for(uint16_t i=1;i<BLOCK_SIZE;i++){
 1403              		.loc 1 81 11 is_stmt 0 view .LVU359
 1404 0026 97ED007A 		vldr.32	s14, [r7]
 1405 002a BCEEC77A 		vcvt.u32.f32	s14, s14
 1406 002e 6503     		lsls	r5, r4, #13
 1407 0030 17EE100A 		vmov	r0, s14	@ int
 1408 0034 80B2     		uxth	r0, r0
 1409 0036 07EE100A 		vmov	s14, r0	@ int
 1410              	.LVL132:
  82:Core/Src/clean_main.c **** 		if(filterOut[bandNumber][i]>max_value) max_value = filterOut[bandNumber][i];
 1411              		.loc 1 82 2 is_stmt 1 view .LVU360
 1412              	.LBB81:
  82:Core/Src/clean_main.c **** 		if(filterOut[bandNumber][i]>max_value) max_value = filterOut[bandNumber][i];
 1413              		.loc 1 82 6 view .LVU361
  82:Core/Src/clean_main.c **** 		if(filterOut[bandNumber][i]>max_value) max_value = filterOut[bandNumber][i];
 1414              		.loc 1 82 20 discriminator 1 view .LVU362
 1415 003a 2B1D     		adds	r3, r5, #4
 1416 003c 06F50052 		add	r2, r6, #8192
 1417 0040 B8EEC77A 		vcvt.f32.s32	s14, s14
 1418 0044 3344     		add	r3, r3, r6
 1419 0046 2A44     		add	r2, r2, r5
 1420              	.LVL133:
 1421              	.L123:
  83:Core/Src/clean_main.c **** 	}
 1422              		.loc 1 83 3 view .LVU363
  83:Core/Src/clean_main.c **** 	}
 1423              		.loc 1 83 42 discriminator 1 view .LVU364
  82:Core/Src/clean_main.c **** 		if(filterOut[bandNumber][i]>max_value) max_value = filterOut[bandNumber][i];
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 36


 1424              		.loc 1 82 33 discriminator 2 view .LVU365
  82:Core/Src/clean_main.c **** 		if(filterOut[bandNumber][i]>max_value) max_value = filterOut[bandNumber][i];
 1425              		.loc 1 82 20 discriminator 1 view .LVU366
  83:Core/Src/clean_main.c **** 	}
 1426              		.loc 1 83 27 is_stmt 0 view .LVU367
 1427 0048 F3EC017A 		vldmia.32	r3!, {s15}
  83:Core/Src/clean_main.c **** 	}
 1428              		.loc 1 83 5 view .LVU368
 1429 004c B4EEE77A 		vcmpe.f32	s14, s15
 1430 0050 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  83:Core/Src/clean_main.c **** 	}
 1431              		.loc 1 83 52 discriminator 1 view .LVU369
 1432 0054 FCEEE77A 		vcvt.u32.f32	s15, s15
 1433              	.LVL134:
  83:Core/Src/clean_main.c **** 	}
 1434              		.loc 1 83 5 view .LVU370
 1435 0058 06D5     		bpl	.L121
  83:Core/Src/clean_main.c **** 	}
 1436              		.loc 1 83 52 discriminator 1 view .LVU371
 1437 005a 17EE901A 		vmov	r1, s15	@ int
 1438 005e 89B2     		uxth	r1, r1
 1439 0060 07EE101A 		vmov	s14, r1	@ int
  83:Core/Src/clean_main.c **** 	}
 1440              		.loc 1 83 52 discriminator 1 view .LVU372
 1441              	.LBE81:
  85:Core/Src/clean_main.c **** }
 1442              		.loc 1 85 37 view .LVU373
 1443 0064 B8EEC77A 		vcvt.f32.s32	s14, s14
 1444              	.L121:
 1445              	.LBB82:
  82:Core/Src/clean_main.c **** 		if(filterOut[bandNumber][i]>max_value) max_value = filterOut[bandNumber][i];
 1446              		.loc 1 82 20 discriminator 1 view .LVU374
 1447 0068 9A42     		cmp	r2, r3
 1448 006a EDD1     		bne	.L123
 1449              	.LBE82:
  85:Core/Src/clean_main.c **** }
 1450              		.loc 1 85 2 is_stmt 1 view .LVU375
  85:Core/Src/clean_main.c **** }
 1451              		.loc 1 85 43 is_stmt 0 view .LVU376
 1452 006c 094A     		ldr	r2, .L131+12
  85:Core/Src/clean_main.c **** }
 1453              		.loc 1 85 25 view .LVU377
 1454 006e 0A4B     		ldr	r3, .L131+16
  85:Core/Src/clean_main.c **** }
 1455              		.loc 1 85 43 view .LVU378
 1456 0070 02EB8402 		add	r2, r2, r4, lsl #2
  85:Core/Src/clean_main.c **** }
 1457              		.loc 1 85 37 view .LVU379
 1458 0074 D2ED007A 		vldr.32	s15, [r2]
 1459              	.LVL135:
  85:Core/Src/clean_main.c **** }
 1460              		.loc 1 85 37 view .LVU380
 1461 0078 67EE877A 		vmul.f32	s15, s15, s14
  85:Core/Src/clean_main.c **** }
 1462              		.loc 1 85 25 view .LVU381
 1463 007c 03EB8403 		add	r3, r3, r4, lsl #2
 1464 0080 C3ED007A 		vstr.32	s15, [r3]
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 37


 1465              	.LVL136:
  85:Core/Src/clean_main.c **** }
 1466              		.loc 1 85 25 view .LVU382
 1467              	.LBE83:
 1468              	.LBE84:
  86:Core/Src/clean_main.c **** 
 1469              		.loc 1 86 1 view .LVU383
 1470 0084 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1471              	.LVL137:
 1472              	.L132:
  86:Core/Src/clean_main.c **** 
 1473              		.loc 1 86 1 view .LVU384
 1474 0086 00BF     		.align	2
 1475              	.L131:
 1476 0088 00000000 		.word	filterOut
 1477 008c 00000000 		.word	filter
 1478 0090 00000000 		.word	filterIn
 1479 0094 00000000 		.word	gain
 1480 0098 00000000 		.word	bar_values
 1481              		.cfi_endproc
 1482              	.LFE250:
 1484              		.section	.text.switchTube,"ax",%progbits
 1485              		.align	1
 1486              		.p2align 2,,3
 1487              		.global	switchTube
 1488              		.syntax unified
 1489              		.thumb
 1490              		.thumb_func
 1492              	switchTube:
 1493              	.LVL138:
 1494              	.LFB253:
 123:Core/Src/clean_main.c **** 	HAL_GPIO_WritePin(EN_TUBE_GPIO_Port,EN_TUBE_Pin,state);
 1495              		.loc 1 123 28 is_stmt 1 view -0
 1496              		.cfi_startproc
 1497              		@ args = 0, pretend = 0, frame = 0
 1498              		@ frame_needed = 0, uses_anonymous_args = 0
 1499              		@ link register save eliminated.
 124:Core/Src/clean_main.c **** }
 1500              		.loc 1 124 2 view .LVU386
 123:Core/Src/clean_main.c **** 	HAL_GPIO_WritePin(EN_TUBE_GPIO_Port,EN_TUBE_Pin,state);
 1501              		.loc 1 123 28 is_stmt 0 view .LVU387
 1502 0000 0246     		mov	r2, r0
 124:Core/Src/clean_main.c **** }
 1503              		.loc 1 124 2 view .LVU388
 1504 0002 4FF40071 		mov	r1, #512
 1505 0006 0148     		ldr	r0, .L134
 1506              	.LVL139:
 124:Core/Src/clean_main.c **** }
 1507              		.loc 1 124 2 view .LVU389
 1508 0008 FFF7FEBF 		b	HAL_GPIO_WritePin
 1509              	.LVL140:
 1510              	.L135:
 124:Core/Src/clean_main.c **** }
 1511              		.loc 1 124 2 view .LVU390
 1512              		.align	2
 1513              	.L134:
 1514 000c 00040240 		.word	1073873920
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 38


 1515              		.cfi_endproc
 1516              	.LFE253:
 1518              		.section	.rodata.menu.str1.4,"aMS",%progbits,1
 1519              		.align	2
 1520              	.LC19:
 1521 0000 25642E25 		.ascii	"%d.%s\000"
 1521      7300
 1522              		.section	.text.menu,"ax",%progbits
 1523              		.align	1
 1524              		.p2align 2,,3
 1525              		.global	menu
 1526              		.syntax unified
 1527              		.thumb
 1528              		.thumb_func
 1530              	menu:
 1531              	.LFB259:
 241:Core/Src/clean_main.c **** 
 242:Core/Src/clean_main.c **** void menu(){
 1532              		.loc 1 242 12 is_stmt 1 view -0
 1533              		.cfi_startproc
 1534              		@ args = 0, pretend = 0, frame = 64
 1535              		@ frame_needed = 0, uses_anonymous_args = 0
 243:Core/Src/clean_main.c **** 
 244:Core/Src/clean_main.c **** 	struct menu_option options[] = {
 1536              		.loc 1 244 2 view .LVU392
 242:Core/Src/clean_main.c **** 
 1537              		.loc 1 242 12 is_stmt 0 view .LVU393
 1538 0000 10B5     		push	{r4, lr}
 1539              		.cfi_def_cfa_offset 8
 1540              		.cfi_offset 4, -8
 1541              		.cfi_offset 14, -4
 1542              		.loc 1 244 21 view .LVU394
 1543 0002 1C4C     		ldr	r4, .L140
 1544 0004 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 242:Core/Src/clean_main.c **** 
 1545              		.loc 1 242 12 view .LVU395
 1546 0006 90B0     		sub	sp, sp, #64
 1547              		.cfi_def_cfa_offset 72
 1548              		.loc 1 244 21 view .LVU396
 1549 0008 0DF1080C 		add	ip, sp, #8
 1550 000c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1551 0010 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1552 0012 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1553 0016 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1554 0018 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1555 001c 94E80300 		ldm	r4, {r0, r1}
 245:Core/Src/clean_main.c **** 			{"Display bar",line},
 246:Core/Src/clean_main.c **** 			{"Set bar character",change_char},
 247:Core/Src/clean_main.c **** 			{"Test tube power",testOutput},
 248:Core/Src/clean_main.c **** 			{"Test DAC", testDAC},
 249:Core/Src/clean_main.c **** 			{"Test filter output",TestFilterOut},
 250:Core/Src/clean_main.c **** 			{"Test all DAC",testAllDac},
 251:Core/Src/clean_main.c **** 			{"Spectrum",display_bars}
 252:Core/Src/clean_main.c **** 	};
 253:Core/Src/clean_main.c **** 
 254:Core/Src/clean_main.c **** 	int16_t position = 0;
 1556              		.loc 1 254 10 view .LVU397
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 39


 1557 0020 0023     		movs	r3, #0
 244:Core/Src/clean_main.c **** 			{"Display bar",line},
 1558              		.loc 1 244 21 view .LVU398
 1559 0022 8CE80300 		stm	ip, {r0, r1}
 1560              		.loc 1 254 2 is_stmt 1 view .LVU399
 255:Core/Src/clean_main.c **** 	uint8_t options_count = sizeof(options)/sizeof(options[0]);
 1561              		.loc 1 255 2 view .LVU400
 1562              	.LVL141:
 256:Core/Src/clean_main.c **** 
 257:Core/Src/clean_main.c **** 	while(button()==0){
 1563              		.loc 1 257 2 view .LVU401
 258:Core/Src/clean_main.c **** 		UpdateEnc(0,options_count-1, &position, false);
 259:Core/Src/clean_main.c **** 		dprint("%d.%s",position+1, options[position].prompt);
 1564              		.loc 1 259 3 is_stmt 0 view .LVU402
 1565 0026 144C     		ldr	r4, .L140+4
 254:Core/Src/clean_main.c **** 	uint8_t options_count = sizeof(options)/sizeof(options[0]);
 1566              		.loc 1 254 10 view .LVU403
 1567 0028 ADF80630 		strh	r3, [sp, #6]	@ movhi
 257:Core/Src/clean_main.c **** 		UpdateEnc(0,options_count-1, &position, false);
 1568              		.loc 1 257 7 view .LVU404
 1569 002c 0FE0     		b	.L137
 1570              	.L138:
 258:Core/Src/clean_main.c **** 		UpdateEnc(0,options_count-1, &position, false);
 1571              		.loc 1 258 3 view .LVU405
 1572 002e FFF7FEFF 		bl	UpdateEnc
 1573              	.LVL142:
 1574              		.loc 1 259 3 is_stmt 1 view .LVU406
 1575 0032 BDF90610 		ldrsh	r1, [sp, #6]
 1576 0036 10AB     		add	r3, sp, #64
 1577 0038 03EBC103 		add	r3, r3, r1, lsl #3
 1578 003c 2046     		mov	r0, r4
 1579 003e 53F8382C 		ldr	r2, [r3, #-56]
 1580 0042 0131     		adds	r1, r1, #1
 1581 0044 FFF7FEFF 		bl	dprint
 1582              	.LVL143:
 260:Core/Src/clean_main.c **** 		HAL_Delay(50);
 1583              		.loc 1 260 3 view .LVU407
 1584 0048 3220     		movs	r0, #50
 1585 004a FFF7FEFF 		bl	HAL_Delay
 1586              	.LVL144:
 1587              	.L137:
 257:Core/Src/clean_main.c **** 		UpdateEnc(0,options_count-1, &position, false);
 1588              		.loc 1 257 16 view .LVU408
 257:Core/Src/clean_main.c **** 		UpdateEnc(0,options_count-1, &position, false);
 1589              		.loc 1 257 8 is_stmt 0 view .LVU409
 1590 004e FFF7FEFF 		bl	button
 1591              	.LVL145:
 258:Core/Src/clean_main.c **** 		dprint("%d.%s",position+1, options[position].prompt);
 1592              		.loc 1 258 3 is_stmt 1 view .LVU410
 1593 0052 0621     		movs	r1, #6
 257:Core/Src/clean_main.c **** 		UpdateEnc(0,options_count-1, &position, false);
 1594              		.loc 1 257 8 is_stmt 0 view .LVU411
 1595 0054 0346     		mov	r3, r0
 258:Core/Src/clean_main.c **** 		dprint("%d.%s",position+1, options[position].prompt);
 1596              		.loc 1 258 3 view .LVU412
 1597 0056 0DEB0102 		add	r2, sp, r1
 257:Core/Src/clean_main.c **** 		UpdateEnc(0,options_count-1, &position, false);
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 40


 1598              		.loc 1 257 16 discriminator 1 view .LVU413
 1599 005a 0028     		cmp	r0, #0
 1600 005c E7D0     		beq	.L138
 261:Core/Src/clean_main.c **** 	}
 262:Core/Src/clean_main.c **** 	options[position].func();
 1601              		.loc 1 262 2 is_stmt 1 view .LVU414
 1602              		.loc 1 262 19 is_stmt 0 view .LVU415
 1603 005e BDF90630 		ldrsh	r3, [sp, #6]
 1604 0062 10AA     		add	r2, sp, #64
 1605 0064 02EBC303 		add	r3, r2, r3, lsl #3
 1606              		.loc 1 262 2 view .LVU416
 1607 0068 53F8343C 		ldr	r3, [r3, #-52]
 1608 006c 9847     		blx	r3
 1609              	.LVL146:
 263:Core/Src/clean_main.c **** }
 1610              		.loc 1 263 1 view .LVU417
 1611 006e 10B0     		add	sp, sp, #64
 1612              		.cfi_def_cfa_offset 8
 1613              		@ sp needed
 1614 0070 10BD     		pop	{r4, pc}
 1615              	.L141:
 1616 0072 00BF     		.align	2
 1617              	.L140:
 1618 0074 00000000 		.word	.LANCHOR0
 1619 0078 00000000 		.word	.LC19
 1620              		.cfi_endproc
 1621              	.LFE259:
 1623              		.global	__aeabi_i2d
 1624              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 1625              		.align	1
 1626              		.p2align 2,,3
 1627              		.global	HAL_ADC_ConvCpltCallback
 1628              		.syntax unified
 1629              		.thumb
 1630              		.thumb_func
 1632              	HAL_ADC_ConvCpltCallback:
 1633              	.LVL147:
 1634              	.LFB260:
 264:Core/Src/clean_main.c **** 
 265:Core/Src/clean_main.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc) {
 1635              		.loc 1 265 56 is_stmt 1 view -0
 1636              		.cfi_startproc
 1637              		@ args = 0, pretend = 0, frame = 0
 1638              		@ frame_needed = 0, uses_anonymous_args = 0
 266:Core/Src/clean_main.c **** 	//Copy DMA buffer to avoid processing overwritten data, at the same time convert measurements to v
 267:Core/Src/clean_main.c **** 
 268:Core/Src/clean_main.c **** 	TIM1 -> CNT = 0;
 1639              		.loc 1 268 2 view .LVU419
 1640              		.loc 1 268 14 is_stmt 0 view .LVU420
 1641 0000 354B     		ldr	r3, .L153+8
 269:Core/Src/clean_main.c **** 	HAL_TIM_Base_Start(&htim1);
 1642              		.loc 1 269 2 view .LVU421
 1643 0002 3648     		ldr	r0, .L153+12
 1644              	.LVL148:
 268:Core/Src/clean_main.c **** 	HAL_TIM_Base_Start(&htim1);
 1645              		.loc 1 268 14 view .LVU422
 1646 0004 0022     		movs	r2, #0
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 41


 265:Core/Src/clean_main.c **** 	//Copy DMA buffer to avoid processing overwritten data, at the same time convert measurements to v
 1647              		.loc 1 265 56 view .LVU423
 1648 0006 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1649              		.cfi_def_cfa_offset 32
 1650              		.cfi_offset 4, -32
 1651              		.cfi_offset 5, -28
 1652              		.cfi_offset 6, -24
 1653              		.cfi_offset 7, -20
 1654              		.cfi_offset 8, -16
 1655              		.cfi_offset 9, -12
 1656              		.cfi_offset 10, -8
 1657              		.cfi_offset 14, -4
 268:Core/Src/clean_main.c **** 	HAL_TIM_Base_Start(&htim1);
 1658              		.loc 1 268 14 view .LVU424
 1659 000a 5A62     		str	r2, [r3, #36]
 1660              		.loc 1 269 2 is_stmt 1 view .LVU425
 1661 000c 344C     		ldr	r4, .L153+16
 1662 000e 354D     		ldr	r5, .L153+20
 1663 0010 FFF7FEFF 		bl	HAL_TIM_Base_Start
 1664              	.LVL149:
 270:Core/Src/clean_main.c **** 
 271:Core/Src/clean_main.c **** 	for(uint16_t i=0;i<BLOCK_SIZE;i++){
 1665              		.loc 1 271 2 view .LVU426
 1666              	.LBB92:
 1667              		.loc 1 271 6 view .LVU427
 1668              		.loc 1 271 20 discriminator 1 view .LVU428
 272:Core/Src/clean_main.c **** 		filterIn[i]=(samples[i]-2048)*(3.3/4096);
 1669              		.loc 1 272 32 is_stmt 0 view .LVU429
 1670 0014 2EA7     		adr	r7, .L153
 1671 0016 D7E90067 		ldrd	r6, [r7]
 1672 001a 04F58058 		add	r8, r4, #4096
 1673              	.LVL150:
 1674              	.L143:
 1675              		.loc 1 272 3 is_stmt 1 view .LVU430
 1676              		.loc 1 272 23 is_stmt 0 view .LVU431
 1677 001e 34F8020F 		ldrh	r0, [r4, #2]!
 1678              	.LVL151:
 1679              		.loc 1 272 32 view .LVU432
 1680 0022 A0F50060 		sub	r0, r0, #2048
 1681 0026 FFF7FEFF 		bl	__aeabi_i2d
 1682              	.LVL152:
 1683 002a 3246     		mov	r2, r6
 1684 002c 3B46     		mov	r3, r7
 1685 002e FFF7FEFF 		bl	__aeabi_dmul
 1686              	.LVL153:
 1687 0032 FFF7FEFF 		bl	__aeabi_d2f
 1688              	.LVL154:
 271:Core/Src/clean_main.c **** 		filterIn[i]=(samples[i]-2048)*(3.3/4096);
 1689              		.loc 1 271 20 discriminator 1 view .LVU433
 1690 0036 A045     		cmp	r8, r4
 1691              		.loc 1 272 32 view .LVU434
 1692 0038 45F8040B 		str	r0, [r5], #4	@ float
 271:Core/Src/clean_main.c **** 		filterIn[i]=(samples[i]-2048)*(3.3/4096);
 1693              		.loc 1 271 33 is_stmt 1 discriminator 3 view .LVU435
 1694              	.LVL155:
 271:Core/Src/clean_main.c **** 		filterIn[i]=(samples[i]-2048)*(3.3/4096);
 1695              		.loc 1 271 20 discriminator 1 view .LVU436
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 42


 1696 003c EFD1     		bne	.L143
 1697 003e 2A4E     		ldr	r6, .L153+24
 1698 0040 DFF8B4A0 		ldr	r10, .L153+40
 1699 0044 294F     		ldr	r7, .L153+28
 1700 0046 2A4C     		ldr	r4, .L153+32
 1701              	.LVL156:
 271:Core/Src/clean_main.c **** 		filterIn[i]=(samples[i]-2048)*(3.3/4096);
 1702              		.loc 1 271 20 is_stmt 0 discriminator 1 view .LVU437
 1703              	.LBE92:
 1704              	.LBB93:
 1705              	.LBB94:
 1706              	.LBB95:
 1707              	.LBB96:
 1708              	.LBB97:
  80:Core/Src/clean_main.c **** 	uint16_t max_value = filterOut[bandNumber][0]; 
 1709              		.loc 1 80 2 view .LVU438
 1710 0048 DFF89880 		ldr	r8, .L153+20
 1711 004c 06F13009 		add	r9, r6, #48
 1712              	.L147:
 1713              	.LVL157:
  80:Core/Src/clean_main.c **** 	uint16_t max_value = filterOut[bandNumber][0]; 
 1714              		.loc 1 80 2 view .LVU439
 1715              	.LBE97:
 1716              	.LBE96:
 1717              	.LBE95:
 1718              	.LBE94:
 273:Core/Src/clean_main.c **** 	}
 274:Core/Src/clean_main.c **** 
 275:Core/Src/clean_main.c **** 	for(uint8_t i=0;i<FILTER_NUMBER;i++){
 276:Core/Src/clean_main.c **** 		processBand(i);
 1719              		.loc 1 276 3 is_stmt 1 view .LVU440
 1720              	.LBB106:
 1721              	.LBI94:
  78:Core/Src/clean_main.c **** 	if(bandNumber>FILTER_NUMBER-1) return;
 1722              		.loc 1 78 6 view .LVU441
 1723              	.LBB104:
  79:Core/Src/clean_main.c **** 	arm_biquad_cascade_df2T_f32(&filter[bandNumber],filterIn,filterOut[bandNumber],BLOCK_SIZE);
 1724              		.loc 1 79 2 view .LVU442
 1725              	.LBB102:
 1726              	.LBI96:
  78:Core/Src/clean_main.c **** 	if(bandNumber>FILTER_NUMBER-1) return;
 1727              		.loc 1 78 6 view .LVU443
 1728              	.LBB100:
  80:Core/Src/clean_main.c **** 	uint16_t max_value = filterOut[bandNumber][0]; 
 1729              		.loc 1 80 2 view .LVU444
  80:Core/Src/clean_main.c **** 	uint16_t max_value = filterOut[bandNumber][0]; 
 1730              		.loc 1 80 68 is_stmt 0 view .LVU445
 1731 0050 A4F50055 		sub	r5, r4, #8192
  80:Core/Src/clean_main.c **** 	uint16_t max_value = filterOut[bandNumber][0]; 
 1732              		.loc 1 80 2 view .LVU446
 1733 0054 4FF40063 		mov	r3, #2048
 1734 0058 2A46     		mov	r2, r5
 1735 005a 4146     		mov	r1, r8
 1736 005c 5046     		mov	r0, r10
 1737 005e FFF7FEFF 		bl	arm_biquad_cascade_df2T_f32
 1738              	.LVL158:
  81:Core/Src/clean_main.c **** 	for(uint16_t i=1;i<BLOCK_SIZE;i++){
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 43


 1739              		.loc 1 81 2 is_stmt 1 view .LVU447
  81:Core/Src/clean_main.c **** 	for(uint16_t i=1;i<BLOCK_SIZE;i++){
 1740              		.loc 1 81 11 is_stmt 0 view .LVU448
 1741 0062 95ED007A 		vldr.32	s14, [r5]
 1742 0066 BCEEC77A 		vcvt.u32.f32	s14, s14
 1743 006a A4F5FF53 		sub	r3, r4, #8160
 1744 006e 17EE102A 		vmov	r2, s14	@ int
 1745 0072 92B2     		uxth	r2, r2
 1746 0074 07EE102A 		vmov	s14, r2	@ int
 1747              	.LVL159:
  82:Core/Src/clean_main.c **** 		if(filterOut[bandNumber][i]>max_value) max_value = filterOut[bandNumber][i];
 1748              		.loc 1 82 2 is_stmt 1 view .LVU449
 1749              	.LBB98:
  82:Core/Src/clean_main.c **** 		if(filterOut[bandNumber][i]>max_value) max_value = filterOut[bandNumber][i];
 1750              		.loc 1 82 6 view .LVU450
  82:Core/Src/clean_main.c **** 		if(filterOut[bandNumber][i]>max_value) max_value = filterOut[bandNumber][i];
 1751              		.loc 1 82 20 discriminator 1 view .LVU451
 1752 0078 B8EEC77A 		vcvt.f32.s32	s14, s14
 1753 007c 1C3B     		subs	r3, r3, #28
 1754              	.LVL160:
 1755              	.L146:
  83:Core/Src/clean_main.c **** 	}
 1756              		.loc 1 83 3 view .LVU452
  83:Core/Src/clean_main.c **** 	}
 1757              		.loc 1 83 42 discriminator 1 view .LVU453
  82:Core/Src/clean_main.c **** 		if(filterOut[bandNumber][i]>max_value) max_value = filterOut[bandNumber][i];
 1758              		.loc 1 82 33 discriminator 2 view .LVU454
  83:Core/Src/clean_main.c **** 	}
 1759              		.loc 1 83 27 is_stmt 0 view .LVU455
 1760 007e F3EC017A 		vldmia.32	r3!, {s15}
  82:Core/Src/clean_main.c **** 		if(filterOut[bandNumber][i]>max_value) max_value = filterOut[bandNumber][i];
 1761              		.loc 1 82 20 is_stmt 1 discriminator 1 view .LVU456
  83:Core/Src/clean_main.c **** 	}
 1762              		.loc 1 83 5 is_stmt 0 view .LVU457
 1763 0082 F4EEC77A 		vcmpe.f32	s15, s14
 1764 0086 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  83:Core/Src/clean_main.c **** 	}
 1765              		.loc 1 83 52 discriminator 1 view .LVU458
 1766 008a FCEEE77A 		vcvt.u32.f32	s15, s15
 1767              	.LVL161:
  83:Core/Src/clean_main.c **** 	}
 1768              		.loc 1 83 5 view .LVU459
 1769 008e 06DD     		ble	.L144
  83:Core/Src/clean_main.c **** 	}
 1770              		.loc 1 83 52 discriminator 1 view .LVU460
 1771 0090 17EE902A 		vmov	r2, s15	@ int
 1772 0094 92B2     		uxth	r2, r2
 1773 0096 07EE102A 		vmov	s14, r2	@ int
  83:Core/Src/clean_main.c **** 	}
 1774              		.loc 1 83 52 discriminator 1 view .LVU461
 1775              	.LBE98:
  85:Core/Src/clean_main.c **** }
 1776              		.loc 1 85 37 view .LVU462
 1777 009a B8EEC77A 		vcvt.f32.s32	s14, s14
 1778              	.L144:
 1779              	.LBB99:
  82:Core/Src/clean_main.c **** 		if(filterOut[bandNumber][i]>max_value) max_value = filterOut[bandNumber][i];
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 44


 1780              		.loc 1 82 20 discriminator 1 view .LVU463
 1781 009e 9C42     		cmp	r4, r3
 1782 00a0 EDD1     		bne	.L146
 1783              	.LBE99:
  85:Core/Src/clean_main.c **** }
 1784              		.loc 1 85 2 is_stmt 1 view .LVU464
  85:Core/Src/clean_main.c **** }
 1785              		.loc 1 85 43 is_stmt 0 view .LVU465
 1786 00a2 F6EC017A 		vldmia.32	r6!, {s15}
 1787              	.LVL162:
  85:Core/Src/clean_main.c **** }
 1788              		.loc 1 85 37 view .LVU466
 1789 00a6 67EE877A 		vmul.f32	s15, s15, s14
 1790              	.LBE100:
 1791              	.LBE102:
 1792              	.LBE104:
 1793              	.LBE106:
 275:Core/Src/clean_main.c **** 		processBand(i);
 1794              		.loc 1 275 19 discriminator 1 view .LVU467
 1795 00aa 4E45     		cmp	r6, r9
 1796 00ac 0AF10C0A 		add	r10, r10, #12
 1797              	.LVL163:
 275:Core/Src/clean_main.c **** 		processBand(i);
 1798              		.loc 1 275 19 discriminator 1 view .LVU468
 1799 00b0 04F50054 		add	r4, r4, #8192
 1800              	.LBB107:
 1801              	.LBB105:
 1802              	.LBB103:
 1803              	.LBB101:
  85:Core/Src/clean_main.c **** }
 1804              		.loc 1 85 25 view .LVU469
 1805 00b4 E7EC017A 		vstmia.32	r7!, {s15}
 1806              	.LVL164:
  85:Core/Src/clean_main.c **** }
 1807              		.loc 1 85 25 view .LVU470
 1808              	.LBE101:
 1809              	.LBE103:
 1810              	.LBE105:
 1811              	.LBE107:
 275:Core/Src/clean_main.c **** 		processBand(i);
 1812              		.loc 1 275 35 is_stmt 1 discriminator 3 view .LVU471
 275:Core/Src/clean_main.c **** 		processBand(i);
 1813              		.loc 1 275 19 discriminator 1 view .LVU472
 1814 00b8 CAD1     		bne	.L147
 1815              	.LBE93:
 277:Core/Src/clean_main.c **** 	}
 278:Core/Src/clean_main.c **** 
 279:Core/Src/clean_main.c **** 	HAL_TIM_Base_Stop(&htim1);
 1816              		.loc 1 279 2 view .LVU473
 1817 00ba 0848     		ldr	r0, .L153+12
 1818 00bc FFF7FEFF 		bl	HAL_TIM_Base_Stop
 1819              	.LVL165:
 280:Core/Src/clean_main.c **** 	measured_us = TIM1 -> CNT;
 1820              		.loc 1 280 2 view .LVU474
 1821              		.loc 1 280 21 is_stmt 0 view .LVU475
 1822 00c0 054A     		ldr	r2, .L153+8
 1823              		.loc 1 280 14 view .LVU476
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 45


 1824 00c2 0C4B     		ldr	r3, .L153+36
 1825              		.loc 1 280 21 view .LVU477
 1826 00c4 526A     		ldr	r2, [r2, #36]
 1827              		.loc 1 280 14 view .LVU478
 1828 00c6 1A80     		strh	r2, [r3]	@ movhi
 281:Core/Src/clean_main.c **** 
 282:Core/Src/clean_main.c **** }
 1829              		.loc 1 282 1 view .LVU479
 1830 00c8 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1831              	.L154:
 1832 00cc AFF30080 		.align	3
 1833              	.L153:
 1834 00d0 66666666 		.word	1717986918
 1835 00d4 66664A3F 		.word	1061840486
 1836 00d8 00000140 		.word	1073807360
 1837 00dc 00000000 		.word	htim1
 1838 00e0 FEFFFFFF 		.word	samples-2
 1839 00e4 00000000 		.word	filterIn
 1840 00e8 00000000 		.word	gain
 1841 00ec 00000000 		.word	bar_values
 1842 00f0 00200000 		.word	filterOut+8192
 1843 00f4 00000000 		.word	measured_us
 1844 00f8 00000000 		.word	filter
 1845              		.cfi_endproc
 1846              	.LFE260:
 1848              		.section	.text.clean_main,"ax",%progbits
 1849              		.align	1
 1850              		.p2align 2,,3
 1851              		.global	clean_main
 1852              		.syntax unified
 1853              		.thumb
 1854              		.thumb_func
 1856              	clean_main:
 1857              	.LFB261:
 283:Core/Src/clean_main.c **** 
 284:Core/Src/clean_main.c **** void clean_main(){
 1858              		.loc 1 284 18 is_stmt 1 view -0
 1859              		.cfi_startproc
 1860              		@ args = 0, pretend = 0, frame = 0
 1861              		@ frame_needed = 0, uses_anonymous_args = 0
 285:Core/Src/clean_main.c **** 	//Start Encoder Counter
 286:Core/Src/clean_main.c **** 	HAL_TIM_Base_Start(&htim2);
 1862              		.loc 1 286 2 view .LVU481
 284:Core/Src/clean_main.c **** 	//Start Encoder Counter
 1863              		.loc 1 284 18 is_stmt 0 view .LVU482
 1864 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1865              		.cfi_def_cfa_offset 24
 1866              		.cfi_offset 3, -24
 1867              		.cfi_offset 4, -20
 1868              		.cfi_offset 5, -16
 1869              		.cfi_offset 6, -12
 1870              		.cfi_offset 7, -8
 1871              		.cfi_offset 14, -4
 1872              		.loc 1 286 2 view .LVU483
 1873 0002 1448     		ldr	r0, .L161
 1874 0004 FFF7FEFF 		bl	HAL_TIM_Base_Start
 1875              	.LVL166:
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 46


 287:Core/Src/clean_main.c **** 	//Start ADC in DMA mode
 288:Core/Src/clean_main.c **** 	HAL_ADC_Start_DMA(&hadc1, samples, BLOCK_SIZE);
 1876              		.loc 1 288 2 is_stmt 1 view .LVU484
 1877 0008 1349     		ldr	r1, .L161+4
 1878 000a 1448     		ldr	r0, .L161+8
 1879 000c 4FF40062 		mov	r2, #2048
 1880 0010 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1881              	.LVL167:
 289:Core/Src/clean_main.c **** 	//Set 0 on all DACs channels
 290:Core/Src/clean_main.c **** 	for(uint8_t i = 0;i<16;i++) setBar(i,0);
 1882              		.loc 1 290 2 view .LVU485
 1883              	.LBB108:
 1884              		.loc 1 290 6 view .LVU486
 1885              		.loc 1 290 21 discriminator 2 view .LVU487
 1886              	.LBE108:
 288:Core/Src/clean_main.c **** 	//Set 0 on all DACs channels
 1887              		.loc 1 288 2 is_stmt 0 view .LVU488
 1888 0014 0024     		movs	r4, #0
 1889              	.LVL168:
 1890              	.L156:
 1891              	.LBB109:
 1892              		.loc 1 290 30 is_stmt 1 discriminator 3 view .LVU489
 1893 0016 E0B2     		uxtb	r0, r4
 1894 0018 0021     		movs	r1, #0
 1895              		.loc 1 290 21 is_stmt 0 discriminator 2 view .LVU490
 1896 001a 0134     		adds	r4, r4, #1
 1897              	.LVL169:
 1898              		.loc 1 290 30 discriminator 3 view .LVU491
 1899 001c FFF7FEFF 		bl	setBar
 1900              	.LVL170:
 1901              		.loc 1 290 26 is_stmt 1 discriminator 3 view .LVU492
 1902              		.loc 1 290 21 discriminator 2 view .LVU493
 1903 0020 102C     		cmp	r4, #16
 1904 0022 F8D1     		bne	.L156
 1905 0024 0E4C     		ldr	r4, .L161+12
 1906 0026 0F4E     		ldr	r6, .L161+16
 1907 0028 0F4D     		ldr	r5, .L161+20
 1908 002a 04F19007 		add	r7, r4, #144
 1909              	.L157:
 1910              	.LVL171:
 1911              		.loc 1 290 21 is_stmt 0 discriminator 2 view .LVU494
 1912              	.LBE109:
 1913              	.LBB110:
 1914              	.LBB111:
  74:Core/Src/clean_main.c **** 	}
 1915              		.loc 1 74 3 is_stmt 1 view .LVU495
 1916 002e 2B46     		mov	r3, r5
 1917 0030 3246     		mov	r2, r6
 1918 0032 2046     		mov	r0, r4
 1919 0034 0121     		movs	r1, #1
  73:Core/Src/clean_main.c **** 		arm_biquad_cascade_df2T_init_f32(&filter[i],1,filterCoefficients[i],filterState[i]);
 1920              		.loc 1 73 19 is_stmt 0 discriminator 1 view .LVU496
 1921 0036 0C34     		adds	r4, r4, #12
 1922              	.LVL172:
  74:Core/Src/clean_main.c **** 	}
 1923              		.loc 1 74 3 view .LVU497
 1924 0038 FFF7FEFF 		bl	arm_biquad_cascade_df2T_init_f32
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 47


 1925              	.LVL173:
  73:Core/Src/clean_main.c **** 		arm_biquad_cascade_df2T_init_f32(&filter[i],1,filterCoefficients[i],filterState[i]);
 1926              		.loc 1 73 37 is_stmt 1 discriminator 3 view .LVU498
  73:Core/Src/clean_main.c **** 		arm_biquad_cascade_df2T_init_f32(&filter[i],1,filterCoefficients[i],filterState[i]);
 1927              		.loc 1 73 19 discriminator 1 view .LVU499
 1928 003c BC42     		cmp	r4, r7
 1929 003e 06F11406 		add	r6, r6, #20
 1930 0042 05F10805 		add	r5, r5, #8
 1931 0046 F2D1     		bne	.L157
 1932              	.LBE111:
 1933              	.LBE110:
 291:Core/Src/clean_main.c **** 	//Initialize digital peak filters
 292:Core/Src/clean_main.c **** 	initializeFilters(FILTER_NUMBER);
 293:Core/Src/clean_main.c **** 	//Delay to let display start properly
 294:Core/Src/clean_main.c **** 	HAL_Delay(500);
 1934              		.loc 1 294 2 view .LVU500
 295:Core/Src/clean_main.c **** }
 1935              		.loc 1 295 1 is_stmt 0 view .LVU501
 1936 0048 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 1937              		.cfi_restore 14
 1938              		.cfi_restore 7
 1939              		.cfi_restore 6
 1940              		.cfi_restore 5
 1941              		.cfi_restore 4
 1942              		.cfi_restore 3
 1943              		.cfi_def_cfa_offset 0
 294:Core/Src/clean_main.c **** }
 1944              		.loc 1 294 2 view .LVU502
 1945 004c 4FF4FA70 		mov	r0, #500
 1946 0050 FFF7FEBF 		b	HAL_Delay
 1947              	.LVL174:
 1948              	.L162:
 1949              		.align	2
 1950              	.L161:
 1951 0054 00000000 		.word	htim2
 1952 0058 00000000 		.word	samples
 1953 005c 00000000 		.word	hadc1
 1954 0060 00000000 		.word	filter
 1955 0064 00000000 		.word	filterCoefficients
 1956 0068 00000000 		.word	filterState
 1957              		.cfi_endproc
 1958              	.LFE261:
 1960              		.section	.text.clean_loop,"ax",%progbits
 1961              		.align	1
 1962              		.p2align 2,,3
 1963              		.global	clean_loop
 1964              		.syntax unified
 1965              		.thumb
 1966              		.thumb_func
 1968              	clean_loop:
 1969              	.LFB262:
 296:Core/Src/clean_main.c **** 
 297:Core/Src/clean_main.c **** void clean_loop(){
 1970              		.loc 1 297 18 is_stmt 1 view -0
 1971              		.cfi_startproc
 1972              		@ args = 0, pretend = 0, frame = 0
 1973              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 48


 298:Core/Src/clean_main.c **** 	clearDisp();
 1974              		.loc 1 298 2 view .LVU504
 297:Core/Src/clean_main.c **** 	clearDisp();
 1975              		.loc 1 297 18 is_stmt 0 view .LVU505
 1976 0000 08B5     		push	{r3, lr}
 1977              		.cfi_def_cfa_offset 8
 1978              		.cfi_offset 3, -8
 1979              		.cfi_offset 14, -4
 1980              		.loc 1 298 2 view .LVU506
 1981 0002 FFF7FEFF 		bl	clearDisp
 1982              	.LVL175:
 299:Core/Src/clean_main.c **** 	menu();
 1983              		.loc 1 299 2 is_stmt 1 view .LVU507
 300:Core/Src/clean_main.c **** }
 1984              		.loc 1 300 1 is_stmt 0 view .LVU508
 1985 0006 BDE80840 		pop	{r3, lr}
 1986              		.cfi_restore 14
 1987              		.cfi_restore 3
 1988              		.cfi_def_cfa_offset 0
 299:Core/Src/clean_main.c **** 	menu();
 1989              		.loc 1 299 2 view .LVU509
 1990 000a FFF7FEBF 		b	menu
 1991              	.LVL176:
 1992              		.cfi_endproc
 1993              	.LFE262:
 1995 000e 00BF     		.section	.rodata.str1.4,"aMS",%progbits,1
 1996              		.align	2
 1997              	.LC0:
 1998 0000 44697370 		.ascii	"Display bar\000"
 1998      6C617920 
 1998      62617200 
 1999              		.align	2
 2000              	.LC1:
 2001 000c 53657420 		.ascii	"Set bar character\000"
 2001      62617220 
 2001      63686172 
 2001      61637465 
 2001      7200
 2002 001e 0000     		.align	2
 2003              	.LC2:
 2004 0020 54657374 		.ascii	"Test tube power\000"
 2004      20747562 
 2004      6520706F 
 2004      77657200 
 2005              		.align	2
 2006              	.LC3:
 2007 0030 54657374 		.ascii	"Test DAC\000"
 2007      20444143 
 2007      00
 2008 0039 000000   		.align	2
 2009              	.LC4:
 2010 003c 54657374 		.ascii	"Test filter output\000"
 2010      2066696C 
 2010      74657220 
 2010      6F757470 
 2010      757400
 2011 004f 00       		.align	2
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 49


 2012              	.LC5:
 2013 0050 54657374 		.ascii	"Test all DAC\000"
 2013      20616C6C 
 2013      20444143 
 2013      00
 2014 005d 000000   		.align	2
 2015              	.LC6:
 2016 0060 53706563 		.ascii	"Spectrum\000"
 2016      7472756D 
 2016      00
 2017              		.global	bar_values
 2018              		.section	.bss.bar_values,"aw",%nobits
 2019              		.align	2
 2022              	bar_values:
 2023 0000 00000000 		.space	48
 2023      00000000 
 2023      00000000 
 2023      00000000 
 2023      00000000 
 2024              		.global	filter
 2025              		.section	.bss.filter,"aw",%nobits
 2026              		.align	2
 2029              	filter:
 2030 0000 00000000 		.space	144
 2030      00000000 
 2030      00000000 
 2030      00000000 
 2030      00000000 
 2031              		.global	filterOut
 2032              		.section	.bss.filterOut,"aw",%nobits
 2033              		.align	2
 2036              	filterOut:
 2037 0000 00000000 		.space	98304
 2037      00000000 
 2037      00000000 
 2037      00000000 
 2037      00000000 
 2038              		.global	gain
 2039              		.section	.data.gain,"aw"
 2040              		.align	2
 2043              	gain:
 2044 0000 E05D943A 		.word	982801888
 2045 0004 80E3113B 		.word	991028096
 2046 0008 054E7E3B 		.word	998133253
 2047 000c CE02DB3B 		.word	1004208846
 2048 0010 6E443D3C 		.word	1010648174
 2049 0014 EDE5A43C 		.word	1017439725
 2050 0018 0E260C3D 		.word	1024206350
 2051 001c 42DA683D 		.word	1030281794
 2052 0020 595AC53D 		.word	1036343897
 2053 0024 8BC6203E 		.word	1042335371
 2054 0028 A8067E3E 		.word	1048446632
 2055 002c 1502C73E 		.word	1053229589
 2056              		.global	filterCoefficients
 2057              		.section	.data.filterCoefficients,"aw"
 2058              		.align	2
 2061              	filterCoefficients:
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 50


 2062 0000 0000803F 		.word	1065353216
 2063 0004 00000000 		.word	0
 2064 0008 000080BF 		.word	-1082130432
 2065 000c 4EB5FF3F 		.word	1073722702
 2066 0010 A26B7FBF 		.word	-1082168414
 2067 0014 0000803F 		.word	1065353216
 2068 0018 00000000 		.word	0
 2069 001c 000080BF 		.word	-1082130432
 2070 0020 216CFF3F 		.word	1073703969
 2071 0024 39DC7EBF 		.word	-1082205127
 2072 0028 0000803F 		.word	1065353216
 2073 002c 00000000 		.word	0
 2074 0030 000080BF 		.word	-1082130432
 2075 0034 A8FBFE3F 		.word	1073675176
 2076 0038 64037EBF 		.word	-1082260636
 2077 003c 0000803F 		.word	1065353216
 2078 0040 00000000 		.word	0
 2079 0044 000080BF 		.word	-1082130432
 2080 0048 0338FE3F 		.word	1073625091
 2081 004c F5937CBF 		.word	-1082354699
 2082 0050 0000803F 		.word	1065353216
 2083 0054 00000000 		.word	0
 2084 0058 000080BF 		.word	-1082130432
 2085 005c 02D5FC3F 		.word	1073534210
 2086 0060 DD157ABF 		.word	-1082518051
 2087 0064 0000803F 		.word	1065353216
 2088 0068 00000000 		.word	0
 2089 006c 000080BF 		.word	-1082130432
 2090 0070 BC33FA3F 		.word	1073361852
 2091 0074 A1B175BF 		.word	-1082805855
 2092 0078 0000803F 		.word	1065353216
 2093 007c 00000000 		.word	0
 2094 0080 000080BF 		.word	-1082130432
 2095 0084 5B5AF53F 		.word	1073044059
 2096 0088 3E7B6EBF 		.word	-1083278530
 2097 008c 0000803F 		.word	1065353216
 2098 0090 00000000 		.word	0
 2099 0094 000080BF 		.word	-1082130432
 2100 0098 BB21EC3F 		.word	1072439739
 2101 009c B8E462BF 		.word	-1084037960
 2102 00a0 0000803F 		.word	1065353216
 2103 00a4 00000000 		.word	0
 2104 00a8 000080BF 		.word	-1082130432
 2105 00ac 8498D73F 		.word	1071093892
 2106 00b0 6AA94EBF 		.word	-1085363862
 2107 00b4 0000803F 		.word	1065353216
 2108 00b8 00000000 		.word	0
 2109 00bc 000080BF 		.word	-1082130432
 2110 00c0 D3B5AC3F 		.word	1068283347
 2111 00c4 BB9C2FBF 		.word	-1087398725
 2112 00c8 0000803F 		.word	1065353216
 2113 00cc 00000000 		.word	0
 2114 00d0 000080BF 		.word	-1082130432
 2115 00d4 1F322A3F 		.word	1059729951
 2116 00d8 ACFC00BF 		.word	-1090454356
 2117 00dc 0000803F 		.word	1065353216
 2118 00e0 00000000 		.word	0
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 51


 2119 00e4 000080BF 		.word	-1082130432
 2120 00e8 D12CF8BE 		.word	-1091031855
 2121 00ec ADF763BE 		.word	-1100744787
 2122              		.global	filterState
 2123              		.section	.bss.filterState,"aw",%nobits
 2124              		.align	2
 2127              	filterState:
 2128 0000 00000000 		.space	96
 2128      00000000 
 2128      00000000 
 2128      00000000 
 2128      00000000 
 2129              		.global	measured_us
 2130              		.section	.bss.measured_us,"aw",%nobits
 2131              		.align	1
 2134              	measured_us:
 2135 0000 0000     		.space	2
 2136              		.global	filterIn
 2137              		.section	.bss.filterIn,"aw",%nobits
 2138              		.align	2
 2141              	filterIn:
 2142 0000 00000000 		.space	8192
 2142      00000000 
 2142      00000000 
 2142      00000000 
 2142      00000000 
 2143              		.global	samples
 2144              		.section	.bss.samples,"aw",%nobits
 2145              		.align	2
 2148              	samples:
 2149 0000 00000000 		.space	4096
 2149      00000000 
 2149      00000000 
 2149      00000000 
 2149      00000000 
 2150              		.global	pasek
 2151              		.section	.bss.pasek,"aw",%nobits
 2152              		.align	2
 2155              	pasek:
 2156 0000 00000000 		.space	20
 2156      00000000 
 2156      00000000 
 2156      00000000 
 2156      00000000 
 2157              		.global	znak
 2158              		.section	.data.znak,"aw"
 2161              	znak:
 2162 0000 7F       		.byte	127
 2163              		.global	stan_enc
 2164              		.section	.data.stan_enc,"aw"
 2165              		.align	1
 2168              	stan_enc:
 2169 0000 1400     		.short	20
 2170              		.section	.rodata
 2171              		.align	2
 2172              		.set	.LANCHOR0,. + 0
 2173              	.LC18:
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 52


 2174 0000 00000000 		.word	.LC0
 2175 0004 00000000 		.word	line
 2176 0008 0C000000 		.word	.LC1
 2177 000c 00000000 		.word	change_char
 2178 0010 20000000 		.word	.LC2
 2179 0014 00000000 		.word	testOutput
 2180 0018 30000000 		.word	.LC3
 2181 001c 00000000 		.word	testDAC
 2182 0020 3C000000 		.word	.LC4
 2183 0024 00000000 		.word	TestFilterOut
 2184 0028 50000000 		.word	.LC5
 2185 002c 00000000 		.word	testAllDac
 2186 0030 60000000 		.word	.LC6
 2187 0034 00000000 		.word	display_bars
 2188              		.text
 2189              	.Letext0:
 2190              		.file 2 "C:/Users/Konrad/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-t
 2191              		.file 3 "C:/Users/Konrad/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-t
 2192              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 2193              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 2194              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2195              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2196              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2197              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 2198              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2199              		.file 11 "Core/Inc/adc.h"
 2200              		.file 12 "Core/Inc/tim.h"
 2201              		.file 13 "Core/Inc/arm_math.h"
 2202              		.file 14 "Core/Inc/dac_driver.h"
 2203              		.file 15 "Core/Inc/enc_disp.h"
 2204              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 53


DEFINED SYMBOLS
                            *ABS*:00000000 clean_main.c
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:20     .rodata.TestFilterOut.str1.4:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:24     .text.TestFilterOut:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:31     .text.TestFilterOut:00000000 TestFilterOut
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:124    .text.TestFilterOut:00000064 $d
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:2168   .data.stan_enc:00000000 stan_enc
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:2134   .bss.measured_us:00000000 measured_us
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:2022   .bss.bar_values:00000000 bar_values
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:132    .rodata.line.str1.4:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:136    .text.line:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:143    .text.line:00000000 line
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:254    .text.line:00000070 $d
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:2161   .data.znak:00000000 znak
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:2155   .bss.pasek:00000000 pasek
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:264    .rodata.change_char.str1.4:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:268    .text.change_char:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:275    .text.change_char:00000000 change_char
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:351    .text.change_char:00000050 $d
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:358    .rodata.testOutput.str1.4:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:365    .text.testOutput:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:372    .text.testOutput:00000000 testOutput
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:481    .text.testOutput:00000060 $d
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:488    .rodata.testDAC.str1.4:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:498    .text.testDAC:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:505    .text.testDAC:00000000 testDAC
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:706    .text.testDAC:000000e0 $d
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:715    .rodata.testAllDac.str1.4:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:719    .text.testAllDac:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:726    .text.testAllDac:00000000 testAllDac
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:970    .text.testAllDac:000000c0 $d
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:976    .rodata.display_bars.str1.4:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:985    .text.display_bars:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:992    .text.display_bars:00000000 display_bars
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:1258   .text.display_bars:000000f0 $d
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:1269   .text.initializeFilters:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:1276   .text.initializeFilters:00000000 initializeFilters
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:1338   .text.initializeFilters:0000002c $d
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:2127   .bss.filterState:00000000 filterState
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:2029   .bss.filter:00000000 filter
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:2061   .data.filterCoefficients:00000000 filterCoefficients
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:1345   .text.processBand:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:1352   .text.processBand:00000000 processBand
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:1476   .text.processBand:00000088 $d
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:2036   .bss.filterOut:00000000 filterOut
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:2141   .bss.filterIn:00000000 filterIn
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:2043   .data.gain:00000000 gain
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:1485   .text.switchTube:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:1492   .text.switchTube:00000000 switchTube
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:1514   .text.switchTube:0000000c $d
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:1519   .rodata.menu.str1.4:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:1523   .text.menu:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:1530   .text.menu:00000000 menu
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:1618   .text.menu:00000074 $d
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:1625   .text.HAL_ADC_ConvCpltCallback:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:1632   .text.HAL_ADC_ConvCpltCallback:00000000 HAL_ADC_ConvCpltCallback
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:1834   .text.HAL_ADC_ConvCpltCallback:000000d0 $d
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s 			page 54


C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:2148   .bss.samples:00000000 samples
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:1849   .text.clean_main:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:1856   .text.clean_main:00000000 clean_main
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:1951   .text.clean_main:00000054 $d
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:1961   .text.clean_loop:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:1968   .text.clean_loop:00000000 clean_loop
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:1996   .rodata.str1.4:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:2019   .bss.bar_values:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:2026   .bss.filter:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:2033   .bss.filterOut:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:2040   .data.gain:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:2058   .data.filterCoefficients:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:2124   .bss.filterState:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:2131   .bss.measured_us:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:2138   .bss.filterIn:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:2145   .bss.samples:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:2152   .bss.pasek:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:2165   .data.stan_enc:00000000 $d
C:\Users\Konrad\AppData\Local\Temp\ccAlom3L.s:2171   .rodata:00000000 $d

UNDEFINED SYMBOLS
__aeabi_f2d
button
UpdateEnc
dprint
HAL_Delay
clearDisp
HAL_GPIO_WritePin
dac_write
setBar
__aeabi_dadd
__aeabi_d2f
__aeabi_dsub
__aeabi_dmul
__aeabi_d2uiz
setBarInv
arm_biquad_cascade_df2T_init_f32
arm_biquad_cascade_df2T_f32
__aeabi_i2d
HAL_TIM_Base_Start
HAL_TIM_Base_Stop
htim1
HAL_ADC_Start_DMA
htim2
hadc1
