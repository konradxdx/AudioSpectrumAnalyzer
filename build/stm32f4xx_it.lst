ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccBjxJmY.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 23, 1
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/stm32f4xx_it.c"
  18              		.section	.text.NMI_Handler,"ax",%progbits
  19              		.align	1
  20              		.p2align 2,,3
  21              		.global	NMI_Handler
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	NMI_Handler:
  27              	.LFB216:
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f4xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f4xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f4xx_it.c ****   *
  16:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f4xx_it.c ****   */
  18:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f4xx_it.c **** 
  20:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f4xx_it.c **** #include "main.h"
  22:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  23:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32f4xx_it.c **** 
  27:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32f4xx_it.c **** 
  30:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
  31:Core/Src/stm32f4xx_it.c **** 
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccBjxJmY.s 			page 2


  32:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32f4xx_it.c **** 
  35:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32f4xx_it.c **** 
  37:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32f4xx_it.c **** 
  40:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32f4xx_it.c **** 
  42:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32f4xx_it.c **** 
  45:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32f4xx_it.c **** 
  47:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32f4xx_it.c **** 
  50:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32f4xx_it.c **** 
  52:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32f4xx_it.c **** 
  55:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32f4xx_it.c **** 
  57:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  59:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  60:Core/Src/stm32f4xx_it.c **** 
  61:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  62:Core/Src/stm32f4xx_it.c **** 
  63:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  64:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  65:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  66:Core/Src/stm32f4xx_it.c **** /**
  67:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  68:Core/Src/stm32f4xx_it.c ****   */
  69:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  70:Core/Src/stm32f4xx_it.c **** {
  28              		.loc 1 70 1 view -0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.L2:
  71:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  72:Core/Src/stm32f4xx_it.c **** 
  73:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  74:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  75:Core/Src/stm32f4xx_it.c ****   while (1)
  35              		.loc 1 75 3 view .LVU1
  76:Core/Src/stm32f4xx_it.c ****   {
  77:Core/Src/stm32f4xx_it.c ****   }
  36              		.loc 1 77 3 view .LVU2
  75:Core/Src/stm32f4xx_it.c ****   {
  37              		.loc 1 75 9 view .LVU3
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccBjxJmY.s 			page 3


  38 0000 FEE7     		b	.L2
  39              		.cfi_endproc
  40              	.LFE216:
  42 0002 00BF     		.section	.text.HardFault_Handler,"ax",%progbits
  43              		.align	1
  44              		.p2align 2,,3
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	HardFault_Handler:
  51              	.LFB217:
  78:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  79:Core/Src/stm32f4xx_it.c **** }
  80:Core/Src/stm32f4xx_it.c **** 
  81:Core/Src/stm32f4xx_it.c **** /**
  82:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  83:Core/Src/stm32f4xx_it.c ****   */
  84:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  85:Core/Src/stm32f4xx_it.c **** {
  52              		.loc 1 85 1 view -0
  53              		.cfi_startproc
  54              		@ Volatile: function does not return.
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.L5:
  86:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  87:Core/Src/stm32f4xx_it.c **** 
  88:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  89:Core/Src/stm32f4xx_it.c ****   while (1)
  59              		.loc 1 89 3 view .LVU5
  90:Core/Src/stm32f4xx_it.c ****   {
  91:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  92:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  93:Core/Src/stm32f4xx_it.c ****   }
  60              		.loc 1 93 3 view .LVU6
  89:Core/Src/stm32f4xx_it.c ****   {
  61              		.loc 1 89 9 view .LVU7
  62 0000 FEE7     		b	.L5
  63              		.cfi_endproc
  64              	.LFE217:
  66 0002 00BF     		.section	.text.MemManage_Handler,"ax",%progbits
  67              		.align	1
  68              		.p2align 2,,3
  69              		.global	MemManage_Handler
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  74              	MemManage_Handler:
  75              	.LFB218:
  94:Core/Src/stm32f4xx_it.c **** }
  95:Core/Src/stm32f4xx_it.c **** 
  96:Core/Src/stm32f4xx_it.c **** /**
  97:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
  98:Core/Src/stm32f4xx_it.c ****   */
  99:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccBjxJmY.s 			page 4


 100:Core/Src/stm32f4xx_it.c **** {
  76              		.loc 1 100 1 view -0
  77              		.cfi_startproc
  78              		@ Volatile: function does not return.
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		@ link register save eliminated.
  82              	.L7:
 101:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 102:Core/Src/stm32f4xx_it.c **** 
 103:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 104:Core/Src/stm32f4xx_it.c ****   while (1)
  83              		.loc 1 104 3 view .LVU9
 105:Core/Src/stm32f4xx_it.c ****   {
 106:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 107:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 108:Core/Src/stm32f4xx_it.c ****   }
  84              		.loc 1 108 3 view .LVU10
 104:Core/Src/stm32f4xx_it.c ****   {
  85              		.loc 1 104 9 view .LVU11
  86 0000 FEE7     		b	.L7
  87              		.cfi_endproc
  88              	.LFE218:
  90 0002 00BF     		.section	.text.BusFault_Handler,"ax",%progbits
  91              		.align	1
  92              		.p2align 2,,3
  93              		.global	BusFault_Handler
  94              		.syntax unified
  95              		.thumb
  96              		.thumb_func
  98              	BusFault_Handler:
  99              	.LFB219:
 109:Core/Src/stm32f4xx_it.c **** }
 110:Core/Src/stm32f4xx_it.c **** 
 111:Core/Src/stm32f4xx_it.c **** /**
 112:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 113:Core/Src/stm32f4xx_it.c ****   */
 114:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 115:Core/Src/stm32f4xx_it.c **** {
 100              		.loc 1 115 1 view -0
 101              		.cfi_startproc
 102              		@ Volatile: function does not return.
 103              		@ args = 0, pretend = 0, frame = 0
 104              		@ frame_needed = 0, uses_anonymous_args = 0
 105              		@ link register save eliminated.
 106              	.L9:
 116:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 117:Core/Src/stm32f4xx_it.c **** 
 118:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 119:Core/Src/stm32f4xx_it.c ****   while (1)
 107              		.loc 1 119 3 view .LVU13
 120:Core/Src/stm32f4xx_it.c ****   {
 121:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 122:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 123:Core/Src/stm32f4xx_it.c ****   }
 108              		.loc 1 123 3 view .LVU14
 119:Core/Src/stm32f4xx_it.c ****   {
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccBjxJmY.s 			page 5


 109              		.loc 1 119 9 view .LVU15
 110 0000 FEE7     		b	.L9
 111              		.cfi_endproc
 112              	.LFE219:
 114 0002 00BF     		.section	.text.UsageFault_Handler,"ax",%progbits
 115              		.align	1
 116              		.p2align 2,,3
 117              		.global	UsageFault_Handler
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 122              	UsageFault_Handler:
 123              	.LFB220:
 124:Core/Src/stm32f4xx_it.c **** }
 125:Core/Src/stm32f4xx_it.c **** 
 126:Core/Src/stm32f4xx_it.c **** /**
 127:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 128:Core/Src/stm32f4xx_it.c ****   */
 129:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 130:Core/Src/stm32f4xx_it.c **** {
 124              		.loc 1 130 1 view -0
 125              		.cfi_startproc
 126              		@ Volatile: function does not return.
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              		@ link register save eliminated.
 130              	.L11:
 131:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 132:Core/Src/stm32f4xx_it.c **** 
 133:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 134:Core/Src/stm32f4xx_it.c ****   while (1)
 131              		.loc 1 134 3 view .LVU17
 135:Core/Src/stm32f4xx_it.c ****   {
 136:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 137:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 138:Core/Src/stm32f4xx_it.c ****   }
 132              		.loc 1 138 3 view .LVU18
 134:Core/Src/stm32f4xx_it.c ****   {
 133              		.loc 1 134 9 view .LVU19
 134 0000 FEE7     		b	.L11
 135              		.cfi_endproc
 136              	.LFE220:
 138 0002 00BF     		.section	.text.SVC_Handler,"ax",%progbits
 139              		.align	1
 140              		.p2align 2,,3
 141              		.global	SVC_Handler
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 146              	SVC_Handler:
 147              	.LFB221:
 139:Core/Src/stm32f4xx_it.c **** }
 140:Core/Src/stm32f4xx_it.c **** 
 141:Core/Src/stm32f4xx_it.c **** /**
 142:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 143:Core/Src/stm32f4xx_it.c ****   */
 144:Core/Src/stm32f4xx_it.c **** void SVC_Handler(void)
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccBjxJmY.s 			page 6


 145:Core/Src/stm32f4xx_it.c **** {
 148              		.loc 1 145 1 view -0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		@ link register save eliminated.
 146:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 147:Core/Src/stm32f4xx_it.c **** 
 148:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 149:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 150:Core/Src/stm32f4xx_it.c **** 
 151:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 152:Core/Src/stm32f4xx_it.c **** }
 153              		.loc 1 152 1 view .LVU21
 154 0000 7047     		bx	lr
 155              		.cfi_endproc
 156              	.LFE221:
 158 0002 00BF     		.section	.text.DebugMon_Handler,"ax",%progbits
 159              		.align	1
 160              		.p2align 2,,3
 161              		.global	DebugMon_Handler
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 166              	DebugMon_Handler:
 167              	.LFB227:
 168              		.cfi_startproc
 153:Core/Src/stm32f4xx_it.c **** 
 154:Core/Src/stm32f4xx_it.c **** /**
 155:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 156:Core/Src/stm32f4xx_it.c ****   */
 157:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 169              		.loc 1 157 6 view -0
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 173 0000 7047     		bx	lr
 174              		.cfi_endproc
 175              	.LFE227:
 177 0002 00BF     		.section	.text.PendSV_Handler,"ax",%progbits
 178              		.align	1
 179              		.p2align 2,,3
 180              		.global	PendSV_Handler
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 185              	PendSV_Handler:
 186              	.LFB229:
 187              		.cfi_startproc
 158:Core/Src/stm32f4xx_it.c **** {
 159:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 160:Core/Src/stm32f4xx_it.c **** 
 161:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 162:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 163:Core/Src/stm32f4xx_it.c **** 
 164:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 165:Core/Src/stm32f4xx_it.c **** }
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccBjxJmY.s 			page 7


 166:Core/Src/stm32f4xx_it.c **** 
 167:Core/Src/stm32f4xx_it.c **** /**
 168:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
 169:Core/Src/stm32f4xx_it.c ****   */
 170:Core/Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 188              		.loc 1 170 6 view -0
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191              		@ link register save eliminated.
 192 0000 7047     		bx	lr
 193              		.cfi_endproc
 194              	.LFE229:
 196 0002 00BF     		.section	.text.SysTick_Handler,"ax",%progbits
 197              		.align	1
 198              		.p2align 2,,3
 199              		.global	SysTick_Handler
 200              		.syntax unified
 201              		.thumb
 202              		.thumb_func
 204              	SysTick_Handler:
 205              	.LFB224:
 171:Core/Src/stm32f4xx_it.c **** {
 172:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 173:Core/Src/stm32f4xx_it.c **** 
 174:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 175:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 176:Core/Src/stm32f4xx_it.c **** 
 177:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 178:Core/Src/stm32f4xx_it.c **** }
 179:Core/Src/stm32f4xx_it.c **** 
 180:Core/Src/stm32f4xx_it.c **** /**
 181:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 182:Core/Src/stm32f4xx_it.c ****   */
 183:Core/Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 184:Core/Src/stm32f4xx_it.c **** {
 206              		.loc 1 184 1 view -0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210              		@ link register save eliminated.
 185:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 186:Core/Src/stm32f4xx_it.c **** 
 187:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 188:Core/Src/stm32f4xx_it.c ****   HAL_IncTick();
 211              		.loc 1 188 3 view .LVU25
 212 0000 FFF7FEBF 		b	HAL_IncTick
 213              	.LVL0:
 214              		.cfi_endproc
 215              	.LFE224:
 217              		.section	.text.DMA2_Stream0_IRQHandler,"ax",%progbits
 218              		.align	1
 219              		.p2align 2,,3
 220              		.global	DMA2_Stream0_IRQHandler
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
 225              	DMA2_Stream0_IRQHandler:
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccBjxJmY.s 			page 8


 226              	.LFB225:
 189:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 190:Core/Src/stm32f4xx_it.c **** 
 191:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 192:Core/Src/stm32f4xx_it.c **** }
 193:Core/Src/stm32f4xx_it.c **** 
 194:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 195:Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 196:Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 197:Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 198:Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 199:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 200:Core/Src/stm32f4xx_it.c **** 
 201:Core/Src/stm32f4xx_it.c **** /**
 202:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream0 global interrupt.
 203:Core/Src/stm32f4xx_it.c ****   */
 204:Core/Src/stm32f4xx_it.c **** void DMA2_Stream0_IRQHandler(void)
 205:Core/Src/stm32f4xx_it.c **** {
 227              		.loc 1 205 1 view -0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              		@ link register save eliminated.
 206:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */
 207:Core/Src/stm32f4xx_it.c **** 
 208:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 0 */
 209:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
 232              		.loc 1 209 3 view .LVU27
 233 0000 0148     		ldr	r0, .L17
 234 0002 FFF7FEBF 		b	HAL_DMA_IRQHandler
 235              	.LVL1:
 236              	.L18:
 237 0006 00BF     		.align	2
 238              	.L17:
 239 0008 00000000 		.word	hdma_adc1
 240              		.cfi_endproc
 241              	.LFE225:
 243              		.text
 244              	.Letext0:
 245              		.file 2 "C:/Users/Konrad/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-t
 246              		.file 3 "C:/Users/Konrad/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-t
 247              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 248              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 249              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 250              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Users\Konrad\AppData\Local\Temp\ccBjxJmY.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_it.c
C:\Users\Konrad\AppData\Local\Temp\ccBjxJmY.s:19     .text.NMI_Handler:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccBjxJmY.s:26     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\Konrad\AppData\Local\Temp\ccBjxJmY.s:43     .text.HardFault_Handler:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccBjxJmY.s:50     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\Konrad\AppData\Local\Temp\ccBjxJmY.s:67     .text.MemManage_Handler:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccBjxJmY.s:74     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\Konrad\AppData\Local\Temp\ccBjxJmY.s:91     .text.BusFault_Handler:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccBjxJmY.s:98     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\Konrad\AppData\Local\Temp\ccBjxJmY.s:115    .text.UsageFault_Handler:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccBjxJmY.s:122    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\Konrad\AppData\Local\Temp\ccBjxJmY.s:139    .text.SVC_Handler:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccBjxJmY.s:146    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\Konrad\AppData\Local\Temp\ccBjxJmY.s:159    .text.DebugMon_Handler:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccBjxJmY.s:166    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\Konrad\AppData\Local\Temp\ccBjxJmY.s:178    .text.PendSV_Handler:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccBjxJmY.s:185    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\Konrad\AppData\Local\Temp\ccBjxJmY.s:197    .text.SysTick_Handler:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccBjxJmY.s:204    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\Konrad\AppData\Local\Temp\ccBjxJmY.s:218    .text.DMA2_Stream0_IRQHandler:00000000 $t
C:\Users\Konrad\AppData\Local\Temp\ccBjxJmY.s:225    .text.DMA2_Stream0_IRQHandler:00000000 DMA2_Stream0_IRQHandler
C:\Users\Konrad\AppData\Local\Temp\ccBjxJmY.s:239    .text.DMA2_Stream0_IRQHandler:00000008 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
hdma_adc1
